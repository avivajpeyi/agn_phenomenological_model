(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1423678,      27335]
NotebookOptionsPosition[   1415428,      27199]
NotebookOutlinePosition[   1415918,      27217]
CellTagsIndexPosition[   1415875,      27214]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Matrix Rotation Approach", "Title",
 CellChangeTimes->{{3.8365954166878147`*^9, 
  3.836595426664949*^9}},ExpressionUUID->"b29d26b4-90c3-492e-bb0f-\
1dfc7a39c3e8"],

Cell[CellGroupData[{

Cell["From {s1, s2} to {\[Theta]12, \[Phi]12}", "Subsection",ExpressionUUID->"91839671-7b6f-4e24-8964-66b921b868e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Get\[Theta]12", "[", 
    RowBox[{"s1_", ",", " ", "s2_"}], "]"}], " ", ":=", 
   RowBox[{"ArcCos", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"s1", ".", "s2"}], "/", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Norm", "[", "s1", "]"}], "*", 
        RowBox[{"Norm", "[", "s2", "]"}]}], ")"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get\[Theta]i", "[", "s_", "]"}], ":=", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/", 
     RowBox[{"Norm", "[", "s", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Get\[Phi]i", "[", "s_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]", "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"s", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Phi]", "<", "0"}], ",", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"2", "\[Pi]"}]}], ",", " ", "\[Phi]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Get\[Phi]12", "[", 
     RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Phi]1", "=", 
         RowBox[{"Get\[Phi]i", "[", "s1", "]"}]}], ",", " ", 
        RowBox[{"\[Phi]2", "=", 
         RowBox[{"Get\[Phi]i", "[", "s2", "]"}]}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]2", "-", "\[Phi]1"}], "<", "0"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]1", " ", "+", " ", 
         RowBox[{"2", "\[Pi]"}]}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]1"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetRelativeSpins", "[", 
    RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Get\[Theta]12", "[", 
      RowBox[{"s1", ",", " ", "s2"}], "]"}], " ", ",", 
     RowBox[{"Get\[Phi]12", "[", 
      RowBox[{"s1", ",", " ", "s2"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836427908800447*^9, 3.8364279596826982`*^9}, {
   3.836429412735018*^9, 3.836429487206078*^9}, {3.83644070639361*^9, 
   3.8364407315303802`*^9}, {3.836440789325774*^9, 3.836440791129545*^9}, {
   3.836442841143464*^9, 3.836442878014538*^9}, {3.836603575446116*^9, 
   3.83660358256252*^9}, {3.836603628982171*^9, 3.8366036587310333`*^9}, 
   3.8366082049778147`*^9, 3.836608692165511*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"c38a8222-94b5-4ffb-a004-e93657f05f71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["From {s1, \[Theta]12, \[Phi]12} to {s2}", "Subsection",ExpressionUUID->"647fa9a0-4994-4266-9b93-9d5e6356a184"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xhat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zhat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yhat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rz", "[", "\[Theta]_", "]"}], "=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Theta]", ",", " ", "zhat"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rx", "[", "\[Theta]_", "]"}], "=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Theta]", ",", " ", "xhat"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ry", "[", "\[Theta]_", "]"}], "=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Theta]", ",", " ", "yhat"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rztos1", "[", 
    RowBox[{"\[Theta]1_", ",", " ", "\[Phi]1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Rz", "[", "\[Phi]1", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "\[Theta]1", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToCartesian", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "}"}]}], "}"}], ",", 
     RowBox[{"s", "/", 
      RowBox[{"Norm", "[", "s", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s1", "[", 
    RowBox[{"\[Theta]1_", ",", " ", "\[Phi]1_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"\[Theta]1", ",", " ", "\[Phi]1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s12", "[", 
    RowBox[{"\[Theta]12_", ",", " ", "\[Phi]12_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"\[Theta]12", ",", " ", "\[Phi]12"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s2", "[", 
    RowBox[{
    "\[Theta]1_", ",", " ", "\[Phi]1_", ",", " ", "\[Theta]12_", ",", " ", 
     "\[Phi]12_"}], "]"}], ":=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Rztos1", "[", 
       RowBox[{"\[Theta]1", ",", " ", "\[Phi]1"}], "]"}], "]"}], " ", ".", 
     " ", 
     RowBox[{"s12", "[", 
      RowBox[{"\[Theta]12", ",", " ", "\[Phi]12"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gets12", "[", 
    RowBox[{"s1_", ",", "s2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"angles", "=", 
       RowBox[{"GetRelativeSpins", "[", 
        RowBox[{"s1", ",", "s2"}], "]"}]}], "}"}], ",", 
     RowBox[{"ToCartesian", "[", 
      RowBox[{
       RowBox[{"angles", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"angles", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8364285858146772`*^9, 3.836428676376848*^9}, {
   3.8365236784344463`*^9, 3.836523737737314*^9}, {3.836523779662272*^9, 
   3.836523783337338*^9}, {3.8365238464146013`*^9, 3.8365238604169817`*^9}, 
   3.8365239060401297`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"2557a8d9-d012-477c-ac44-0be9bd19a5ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checks", "Subsection",ExpressionUUID->"2e1e6884-fea6-4c69-96a2-1ffe7aacd2b5"],

Cell["1. Check rotation matrix is valid:", "Text",
 CellChangeTimes->{
  3.83642411689721*^9},ExpressionUUID->"0fba282f-0f37-4f3b-a9ad-becff6353988"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Rztos1", "[", 
     RowBox[{"\[Theta]1", ",", " ", "\[Phi]1"}], "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Rztos1", "[", 
      RowBox[{"\[Theta]1", ",", " ", "\[Phi]1"}], "]"}], "]"}]}], "]"}], "//",
   "MatrixForm"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"33ff1c24-b3ac-46ec-bdd7-39a321d6c64f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8366040883829727`*^9, 3.836604108304521*^9}, {
  3.836604140462982*^9, 3.8366041549368753`*^9}},
 CellLabel->
  "Out[95]//MatrixForm=",ExpressionUUID->"46e411f8-db55-4692-972e-\
7a2c487c4b23"]
}, Open  ]],

Cell["2. Trying moving z to s1:", "Text",
 CellChangeTimes->{{3.836424118871439*^9, 
  3.83642413492445*^9}},ExpressionUUID->"bd1d20ab-11fc-4e02-8b8f-\
1a8282489fbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Rz", "[", "\[Phi]1", "]"}], ".", " ", 
   RowBox[{"Ry", "[", "\[Theta]1", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.8366051713620977`*^9, 
  3.836605172467163*^9}},ExpressionUUID->"78be5ad9-6283-48fa-b146-\
053b164a0d86"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]},
      {
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.83660408840792*^9, 3.83660410831513*^9}, {
  3.836604140472959*^9, 3.836604154959065*^9}},
 CellLabel->
  "Out[96]//MatrixForm=",ExpressionUUID->"a8ea611e-c0f8-4713-b59b-\
2d03bc36f737"]
}, Open  ]],

Cell["3. Trying moving s1 back to z:", "Text",
 CellChangeTimes->{
  3.836424140390438*^9},ExpressionUUID->"239180ae-b0ef-4634-a21b-\
4706153b8560"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", " ", 
     RowBox[{
      RowBox[{"Ry", "[", "\[Theta]1", "]"}], ".", 
      RowBox[{"Rz", "[", "\[Phi]1", "]"}]}], "]"}], ".", 
    RowBox[{"s1", "[", 
     RowBox[{"\[Theta]1", ",", " ", "\[Phi]1"}], "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.836605201205724*^9, 
  3.836605233594309*^9}},ExpressionUUID->"44cb1af9-4674-4162-aae5-\
f0567a335399"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Rz", "[", "\[Phi]1", "]"}], ".", 
     RowBox[{"Ry", "[", "\[Theta]1", "]"}]}], "]"}], ".", 
   RowBox[{"s1", "[", 
    RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.836604088436569*^9, 3.836604108488811*^9}, {
   3.836604140550804*^9, 3.836604154967575*^9}, 3.836605221287613*^9},
 CellLabel->
  "Out[1]//MatrixForm=",ExpressionUUID->"0146430d-a5e8-4ab7-ac22-\
f635bc3c03ee"]
}, Open  ]],

Cell["4. Roundtrip {s1, s2} to {s1, \[Theta]12, \[Phi]12} to {s1, s2} ", \
"Text",ExpressionUUID->"9dec86e6-586a-412c-a534-7a42a6eb7f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"true\[Theta]1", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"true\[Theta]2", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"true\[Phi]1", " ", "=", 
   RowBox[{"\[Pi]", "/", "3"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"true\[Phi]2", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trues1", " ", "=", " ", 
   RowBox[{"s1", "[", 
    RowBox[{"true\[Theta]1", ",", " ", "true\[Phi]1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"trues2", " ", "=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"true\[Theta]2", ",", " ", "true\[Phi]2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trues12", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", "true\[Phi]1", "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", "trues2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"true\[Theta]12", " ", "=", " ", 
   RowBox[{"Get\[Theta]i", "[", "trues12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"true\[Phi]12", " ", "=", " ", 
   RowBox[{"Get\[Phi]i", "[", "trues12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newS2", " ", "=", " ", 
   RowBox[{"s2", "[", 
    RowBox[{
    "true\[Theta]1", ",", " ", "true\[Phi]2", ",", " ", "true\[Theta]12", ",",
      " ", "true\[Phi]12"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"new\[Theta]2", "=", 
   RowBox[{"Get\[Theta]i", "[", "newS2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"new\[Phi]2", " ", "=", 
   RowBox[{"Get\[Phi]i", "[", "newS2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", 
  RowBox[{"trues1", ",", "trues2", ",", " ", 
   RowBox[{"StringForm", "[", 
    RowBox[{
    "\"\<Given {\[Theta]1=`1`, \[Phi]1=`2`}, {\[Theta]2=`3`, \[Phi]2=`4`} --> \
{\[Theta]12=`5`, \[Phi]12=`6`}\>\"", ",", "true\[Theta]1", ",", "true\[Phi]1",
      ",", "true\[Theta]2", ",", "true\[Phi]2", ",", "true\[Theta]12", ",", 
     "true\[Phi]12"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", 
  RowBox[{"trues1", ",", "newS2", ",", " ", 
   RowBox[{"StringForm", "[", 
    RowBox[{
    "\"\<Given {\[Theta]1=`1`, \[Phi]1=`2`}, {\[Theta]12=`3`, \[Phi]12=`4`} \
--> {\[Theta]2=`5`, \[Phi]2=`6`}\>\"", ",", "true\[Theta]1", ",", 
     "true\[Phi]1", ",", "true\[Theta]12", ",", "true\[Phi]12", ",", 
     "new\[Theta]2", ",", "new\[Phi]2"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.836429244965032*^9, 3.836429264721306*^9}, {
   3.836429318604282*^9, 3.8364293222596292`*^9}, {3.836429527743657*^9, 
   3.8364295510078506`*^9}, {3.836429610536976*^9, 3.8364296107263813`*^9}, {
   3.836429975273457*^9, 3.836430031738687*^9}, {3.836430306941831*^9, 
   3.8364303561764*^9}, {3.836443366890767*^9, 3.8364433936668167`*^9}, {
   3.8364434899465227`*^9, 3.836443515198723*^9}, {3.836443618828637*^9, 
   3.8364437000571413`*^9}, {3.836443746646257*^9, 3.8364438163430357`*^9}, {
   3.836443919881249*^9, 3.8364440545119534`*^9}, {3.836444090067937*^9, 
   3.836444107995778*^9}, {3.836444154880652*^9, 3.836444210282526*^9}, {
   3.836444951453721*^9, 3.836444976237134*^9}, {3.836445263759502*^9, 
   3.83644532411519*^9}, {3.836445740767832*^9, 3.8364457448874407`*^9}, {
   3.836445779263156*^9, 3.8364458565799913`*^9}, {3.8364459501424932`*^9, 
   3.836446112533745*^9}, {3.8364465376063957`*^9, 3.836446539251134*^9}, {
   3.836515712254305*^9, 3.83651571972162*^9}, {3.836515817428955*^9, 
   3.836515818798684*^9}, {3.836516462810253*^9, 3.836516490048793*^9}, 
   3.8365165407942553`*^9, {3.836519524041548*^9, 3.836519533336669*^9}, 
   3.836520810691408*^9, {3.836521638101262*^9, 3.8365217323753633`*^9}, {
   3.836594607822989*^9, 3.83659462102553*^9}, {3.8366090810749903`*^9, 
   3.83660908482551*^9}},ExpressionUUID->"17cbc6d8-978b-4a08-b441-\
58a4a3086d4d"],

Cell[BoxData[
 RowBox[{"makePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      SqrtBox["3"], "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   InterpretationBox["\<\"Given \
{\[Theta]1=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"2\\\"]\\), \
\[Phi]1=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"3\\\"]\\)}, {\[Theta]2=\\!\\(\
\\*FractionBox[\\\"\[Pi]\\\", \\\"2\\\"]\\), \[Phi]2=\\!\\(\\*RowBox[{\\\"0\\\
\"}]\\)} --> {\[Theta]12=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"3\\\"]\\), \
\[Phi]12=\\!\\(\\*FractionBox[RowBox[{\\\"5\\\", \\\" \\\", \\\"\[Pi]\\\"}], \
\\\"3\\\"]\\)}\"\>",
    StringForm[
    "Given {\[Theta]1=`1`, \[Phi]1=`2`}, {\[Theta]2=`3`, \[Phi]2=`4`} --> {\
\[Theta]12=`5`, \[Phi]12=`6`}", Rational[1, 2] Pi, Rational[1, 3] Pi, 
     Rational[1, 2] Pi, 0, Rational[1, 3] Pi, Rational[5, 3] Pi],
    Editable->False]}], "]"}]], "Output",
 CellChangeTimes->{{3.8365946151708508`*^9, 3.8365946219584713`*^9}, 
   3.836597518482778*^9, 3.836603665140602*^9, {3.836604088721575*^9, 
   3.836604108500153*^9}, {3.836604140570157*^9, 3.836604155331687*^9}, 
   3.8366087210242977`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"4bbb8e63-fed0-40f8-8a03-ed2d452a1210"],

Cell[BoxData[
 RowBox[{"makePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox[
      SqrtBox["3"], "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["3", "4"]}], ",", 
     FractionBox[
      SqrtBox["3"], "4"]}], "}"}], ",", 
   InterpretationBox["\<\"Given \
{\[Theta]1=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"2\\\"]\\), \
\[Phi]1=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"3\\\"]\\)}, \
{\[Theta]12=\\!\\(\\*FractionBox[\\\"\[Pi]\\\", \\\"3\\\"]\\), \
\[Phi]12=\\!\\(\\*FractionBox[RowBox[{\\\"5\\\", \\\" \\\", \\\"\[Pi]\\\"}], \
\\\"3\\\"]\\)} --> {\[Theta]2=\\!\\(\\*RowBox[{\\\"ArcCos\\\", \\\"[\\\", \
FractionBox[SqrtBox[\\\"3\\\"], \\\"4\\\"], \\\"]\\\"}]\\), \
\[Phi]2=\\!\\(\\*RowBox[{\\\"\[Pi]\\\", \\\"+\\\", RowBox[{\\\"ArcTan\\\", \\\
\"[\\\", FractionBox[\\\"3\\\", \\\"2\\\"], \\\"]\\\"}]}]\\)}\"\>",
    StringForm[
    "Given {\[Theta]1=`1`, \[Phi]1=`2`}, {\[Theta]12=`3`, \[Phi]12=`4`} --> {\
\[Theta]2=`5`, \[Phi]2=`6`}", Rational[1, 2] Pi, Rational[1, 3] Pi, 
     Rational[1, 3] Pi, Rational[5, 3] Pi, 
     ArcCos[Rational[1, 4] 3^Rational[1, 2]], Pi + ArcTan[
       Rational[3, 2]]],
    Editable->False]}], "]"}]], "Output",
 CellChangeTimes->{{3.8365946151708508`*^9, 3.8365946219584713`*^9}, 
   3.836597518482778*^9, 3.836603665140602*^9, {3.836604088721575*^9, 
   3.836604108500153*^9}, {3.836604140570157*^9, 3.836604155331687*^9}, 
   3.8366087210282087`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"71dc166c-4c71-4645-9733-dc1d76d21eca"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8364442053738937`*^9, 3.83644420913306*^9}, 
   3.836444950301751*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"5ed9598e-06ac-464d-956a-ecd64845db55"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.836516627910263*^9, 
  3.836516630321148*^9}},ExpressionUUID->"0a6c7d69-0ff7-4a0e-b32c-\
97a66c5f51e2"],

Cell[CellGroupData[{

Cell["- Try rotating S1 to Zhat in steps", "Subsubsection",
 CellChangeTimes->{{3.836516634782907*^9, 
  3.836516665339265*^9}},ExpressionUUID->"37912096-6979-47e5-8efb-\
29d99e1e7ea9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"makePlot", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", "trues1"}], 
   ",", " ", "\"\<Step1: s2 = T[Ry(\[Theta]1)].s1\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{"true\[Phi]1", "-", "0.001"}], "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", "trues1"}], 
   ",", " ", "\"\<Step2: s2 = T[Rz(\[Phi]1).Ry(\[Theta]1)].s1 = zhat\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8365166727390623`*^9, 3.836516787099311*^9}, {
  3.836516861008615*^9, 3.836516867749992*^9}, {3.836520932991838*^9, 
  3.836520933164756*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d7fab097-b360-4147-8a8a-8654fe290fba"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18369#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18369#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18369#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18393#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18435#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19067#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwVz3k4VH0fBvASpiLabCklW8lOBvPj+5JJtCfppZDMUJGlIVGW7IMjj2VK
2tRoSEhKiEe2SqlQSaKTnYOjVHY9p/u67n8+f923oqv3AZbQggULXKkuouoV
HWf4wnrKxKuRnBoYPmQ2/+dvSFB2lZbj6LUydPOiOFdoWyF6yZGev65peMHX
XK+fcUmDG3uKxgS3xX7Jfz1sqbb9HdZ3xqeyEL2l8XtBdc6c9tcNH/7TqqY3
wXDJmjlwkGYH5QOvmPOUtx/r1b43P8tgWLE8lKwdwO+15O45yu/7rtjCYy1E
tvnu+35wnWEiZ9m6WcrVGlR/yOnR0Gq1H6VWNBYIO9Jlpiiv15Zb6yi7FOVl
Z7zRErhDjf5x8wnKczMmZTPnxVHPbnaZlPVJqFlubfCL8nTJ8nKMtQIFfTEV
6eZ6g0SfBWeM8hWCy9ck9GTQdD2bY0rzh/hAkjpMQjJ/k5EWXxbZnC6RL7QP
ADeCeI1TPvpSVbBbdg2KPOuTuVFwFrbHZYl0/N3pdGI+fn4tWiNPU6RZB0GW
i1nTe8oP2/5SiGAposJsw4lGbij83qnb9IxyFYuZUxO6akjnd5LXJloU0KvE
OMmUi3oH7Iki1NCL6e3CLgVR8KAm35tLecCZm7RV/E3IQT7On2cfDcdjxA0i
KGfPzk9qyqqjZ37K3SKCGKgJn5TmUM4bay0+Nq+BqtrIBnwHFxpKUpi2lC99
ZvnUmaWLsLPX3iRykyBfvIdJo/z8LDzm69LR0SwLh07RNEgXc29hzpMgG+Fi
Z5hOR0bM0wlLXNPAynnDE0PKM1qv19ZP05GDmG6KQUUaPCnpc1Sj3GKn5fL+
GiNkWcCT555JB/mfGTiN8hi5TqbKIRO0Wf3eIn2cB/7K/M66ORJakvLO8oJM
kXnDNBZcmgF8F6f7WylvYB4vzP5mjnL/8TD/vvUmyJp4p/fMkKD7IHP/4OYd
KOH1iyKynw9FvJW3QidJuGG+1zTu+3707tN0m71lIagOSfX4kiQc/cTeUJ1v
jwLNeEY2gY+Ad1TqgVI3CfYN8lvv9B5F2tc7q2PWlIP1WYb6ryYSTsn7Voa2
HkO7Fk8qVWhUQXBFW9XBShKk9XyrZibc0GXLMfPTQjXwUjbjpxqfhLtTL5ss
aB6opi99YfSLOvjgOyIfFktCnp6SMePrSSQ0vGX+3JEXIHGlNGPbSRJcq2lj
9t+9UJp4bLqSyivg0Mj6XCYJ2szCDwMsH6TWKTdzpLwRKnPoMWPrSdCQ0mIb
Nvii9+5Dlx9seAdHJENTb02MQu6hiaF7NmfQ2KpUHcaFJti8q6VO98UoyFk+
Nzcr4CDJlwz++apmEKPtWRN0eRRCuLI4XTsADQsWDaWtfQ+PO7JDhI6NguAe
Ie3FP4vqdF+z33t/gNAvG8NfqY5C4vlmiTd/AtHxslM2n3I+gm6M554tIyPw
Oil4USAnCDWD1ZnCmVZwXJEgLnlvBAoel9fubQxGBZopHXsN2mCfU/Ts3IkR
CDStT4qDC4itY6r1I+IzpPJfRbWvH4HJZkax090QJJNX57OpoR2KF7sbe7cM
g0R8m8Od8VDUvLrgtOvEFzhdmjFFxA7DdOARxQV5YehhL4vrZ9IJnt9/FuQY
DENV7r0vnH3h6EQllNx0+wr0mL21tV0EtN92WPyeDEfnm26FvLLAIaDRkxeS
RECcU19BcsZFdDLNQjOtAwd5M/1jbboErJZ67vOWHoFERJzaFT2/gfKqU2xW
6xBImgoHdH6NQGwvF8kLwl0g5OS+fYXfEGgUO610uxiJeGaPrFt4XXC1UxC5
W2wImubHXYtlotBAwoiKzvpuWCw78SBJMAiJFbP1K0uikPCjsZTcgm445Kjh
5mIyCCN5WjIu1tGIqeN/bpdBD+T4Cv/OfjcAJtprlT0/RiNhZeNG9eIeeCrK
qz3KHoCNgUuE/vWMQZYDvhJ+qBc8bKPUN4z1ww59xozL7xg0+vv2FL20F9h2
5TfWh/ZDpuGhVXdjY1EfvdK2xbQPrs4J9jxb2A/F6k/BSyIOPYnwr5Ar6YOD
RoNZ4tw+eDdm6NOFxSHDwrcHsS39EHylaaPlyj4QcgkhlWW46B0he03qbj90
Rw1k5Sf2wudh+2inFC4SpPLaHsoMwI+88m9hkr2gJZxk+Vg6Hu3yVZirwwbg
l/HDNo3IHrjS/qd1R2o8UnDwnM5cQP1HC6XeT3bDpupEfwfRBGSx+qm6qMcg
iI//zL3G6YZSn/J1WSEJKKrI4sPyD4OAbo/E9nZ1AR838bxPJCD27v5egj4E
E6KzFUWHu8B6sjf0vG0iKlJp+0lLHwKfleNm5m+/wcvEnNErVYnofK0eZ3xy
CO4YrgpfaPQNNOagYpUShoI0FN8YHyBgXUmKLSnA4YPqXYlaZQwpvP5S9syW
gJ1Gj+w8s3FI0fmswFHF0PeBYE9rOwIG85v1B2/j4G2TFtyyGUPRR+0VDh8m
wMtYJrLrOg7Pw6dUknQwdChb9amfEwFr/zj5t6TicEdhJ2PaFEOOU9s6Mk8S
ULkp70Z+GA5iEqV7bhzGEFsk5HrtRQIsCo8b2xzG4YByqp+VA7WTZa3IjCTA
bW1yXbUdDgn/f36QdMSQw4Ekj7ooAhZMeWgxbHGoa1Q7aOaMoWUfL1jWxRKw
pV8zfcseHGglnmZtLAwFlHF1qzECknF+5VJLHKY1+iuEzmDos1VSR2EGAZHx
coHV2jhIXuPVZXMwlDsUkq2ZSYDj9tAmI00cdm9wj7cJwNCM6yP93GsEGG7s
pxWo49CgY7c/+RyGfkwMZmTdJCBUv0XsqgoON3YtrZcPw9D/GmQyL2UTcIb7
2MdXHgdCeV9lRTiG0jV6osUEBFyQe17UJ4tD37+XOc4RGDIo7dganUMAVIo0
O0rjsG2DsnxWNIYso3biQXkEtO1QEjBX4GDwyVlsWyyGfjuXtv+8T4CH9jLn
MgkcJumXSrvjMMS5anX1dAEB0pqMcS1xHEzKHqhExmPopui4wkAhAX+qi9xu
L8HB+HPVXuVEDHX7PGEfKyLgot+5hzI0HP4Dy4GKXA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19109#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
Hh8exB36k1QtXoMJI8F5DPf/APK//24=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19636#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0., 0.865524970855106, 
             0.5008657752594677}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0., 0.865524970855106, 0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1: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
oqf4H9gFru4=
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          
          Polygon3DBox[{{0, 0, 0}, {0., 0.865524970855106, 0.}, {0., 
            0.865524970855106, 0.5008657752594677}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.865524970855106, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.865524970855106, 0.5008657752594677}, {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.6120185761779344, 0.6120185761779343, 0.}, {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {3.05896517717993*^-17, 0.49956692481615117`, 
          0.8662752955208488}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.13364717084680344`, 0.4628336174985955, 
          0.13387858767483748`}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.17921147717528466`, 0.668826338117632, 0.}, {
          1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.05, 1.57], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"0.72`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.52`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 0.72, 0.52], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step1: s2 = T[Ry(\[Theta]1)].s1\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594626959607*^9, {3.8366040894375277`*^9, 3.836604108553336*^9}, {
   3.836604140606325*^9, 3.836604156205562*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"bc4e2387-e3a5-462b-a1a3-677d92b2d95b"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19723#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19723#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19723#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19747#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$19789#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$20421#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwd1Hk0ldsbB3BJomPOnCQNqmMqrtK79dBFxpLKdA6FRBmOKMVFuSU0GUqR
bmTImJLx5dBVpogbSmTIUDK/nAxx4vze89trPf981l5r7/Xda383uzCs3Xh5
eHhOkbOanIGiTfInbN7uTx3DLzRHbD7A8/81Db07DV0+MguwpYbDL6MlxcDV
a3mFwyFgvPIkpZpZjV07w1EJlVQCevkcm+u31ilcnqDWYV6ScUcS5bbC9NyL
Ra6H1IR+k0lqxHbdbQ8oUtwBY6Mj81znn1hwLGW2Yh4LYi4XJTVBlN1BcL1a
3Xu95Ww7Zqq2do5XZg/sl709znVOe2zDILUDG7csioiR04bGydfDXO85X7tb
JOkLZvZRIi9XcR8ovEnr5jrlofeVV8wBrKBpZcFXUh+iROmvuT5N87AL6RzE
Hg8OvS6VMoAhgr+U65PL0rtNZoewyp/XIlakD0JGpGY+13cSIQO91GFMuv6b
1G05Q6ANcR5xXVZpTk8waQyTuFaqnqloAk/0on243vW2ZfoFcwYbG4965iNp
BSnhvmRwBKyz67OPN2Nhl56fWisRbwWBE/yTXE/nT38T1MnCFn1n3YuljkIF
RaGH63xVJveMZn9iol/NdvyWtoYQ/zdlXDcYLNPsps5j/FeDMqLkjgPvCMeT
65lnDjjwJy1hi7KKMemKdmDrple+THpFvaxqPnMV2uiqJOQteQpqC9+QD0bA
VoP+hARBXvSPrXipisMp6OrzauO6hpT1mms2vOh4ZpHzYPIpSJC9ks91mqxG
r+00LxJVFS6xpTqDbFn3aa5TEp9FrtrKh/64P+Bw8KAL6GRebFwiff+sefPx
W/zIlDp/T8b3NNw3Vg1cJN0+3n81256CBD79W17d5AFh0emn57n3OZY9mvqX
BEqL2Wt6s9oXKGHV/lOk/xf2E2+5uAEFx6FO9rfLwDepYthFelTUxgDGZmX0
wV3esYZxFWY+u1xkkq7FSG72/rEdFQRO5Me/vQ5KptI690nP7zQ50UWjopMP
E2j+zZHg+XRS6wzpRoKRJd0ymqhB41tcp9odcNx3TplK+uhHzw1hAXtQdowY
GmLGAMub0f5jhYA/yzw30PO00bJKfcDXyjjo+WtvWQrp6pos50nxvSiymFqp
MHYf1F9WRJmR/pw6kVl4WBd95rtV5TTzAN546kbPLBOgKdgmrHEVQ2mmomzX
qQSYD8izjSM9xu2Gm+OAHvKq+ONApnQSFCR+llIm/bpqpm6/kD56LN62OCX3
Dwh9Ysy8/E0A1cimc1TfAGEhHzE/k2SI6rffpkZ6pvDDYAvGQbRN4+e8Q0kK
RA8Wh6ayCQjwd402jfoTdZgPb+QUPwWPTQ1jsqRHBz7LVKgwRLBsqAJNqTBu
J/88aIk810eXerPTCNWGJf+1qiUN3Dtyw/oWCegrIvjeCx9CU7onqU7D6SC1
+YKwKukzzJAcNz0TJNLCnE9czIDKiLgw/18EpGUK7HhkZ4qkmEkMu6VnIIp7
c6oWCPgeqByRcssMRUfyr3shlgU5VYGarHkCfunuGjHIMUcu4b8uRUpmA3Fh
xnMX6ebJgh7YWwuUv1RnYbA+B84zFWKd5ggYUdLezTdriXZtnxqJVsmFcwLu
fpdnCfjkOcj0EDuCWENaa1125kFjjaVJ4k8Ckg0ydCyVrVC92d/sev3nYCP+
HT1hEdCqrqMVi1shR7HgPMqxfMhIFAl9MkP2Vf+hmDTjo6hsxqyu3foF9Gyt
yc6cJuCSedfvR1+PIolw+2Bp7ZeALLRZcQQBlXbb+Jx9rFGKUXVoePFLWBKW
2hY5RcD2Pa1p1kvWiFWR0+CqXQCP5I+mB00S4Jph/K9K3DGENJp2C1YVgP41
S3PLCQIU2UGK7zcdRyqFkUnnD7wCxqJpLXWc/KeGys+t8eOo973WQvK7V5BY
Y9k0MkpAdum+liyTE+jLgdTHseaFoM1nnvFqhADGfJDxrk8n0ALn4mFWYyF4
5m+9E/SDAO/eFNXb3jZoNaXaXuZEERhn6a/bNEwAW+vdpSq2Dbo8UezN01EE
Bx9MGLV9I4CoMKj8L94Wxbob38xzLoa9d/MDTw0RYCiJTClqdihCTohZN1YM
atY5ihMDBFi5xarLltuhlhROe8a5EpC65nc5sp+Ay9qYBO8xe5QaJ7jDeK4E
RNTbG5b7yP48olRbOWCPPqgpNucGlMJ8m0TL9V4y/8GO7HRvB6SnU0G/OlcK
M/cKDCk9ZE+W8F4/s4aGtmD7rSSvlEGVuV+lxxcCnA/eNWbH0VBjZto9H04Z
1HV+aO/qJHPeM3jGP56GznmKpOeuwuF7Fva+jfQb93NujD+kIfXcpcKR1TjE
26+paSJ9f0hCTfdjGvpy3rbNRQAHXcfigkru/r9/6DKf0VBKn5KgrTgOfjMR
4U9JZ/gcWhdSTkPilqNOsAWHPq8FkbOk99iXGqwM0FDQ3lW5oodwaMnmyV74
TMCsfZhVwDcaunc3PNfCFAfL1kN3pklnoCqnqWEa8l6Iyo0yx6Gjd9J3lPSE
gJjAvnEakmmVyFlthcODZzY63aSzneOzquZoSMt9y9MFOxyqlx7hVaSLqEhP
hArS0VodnUtfz+FwpHnqaTjpF/0EWPMUOrJyKGEoeONgY7M1OJR0t06vBR8R
OqJ2F7vbM3DIqis7cYn0iepbPCfX09GR2j027f44vHZc4T9LettzJSHYSEdo
RVmtPhiH/LO/nS1Ir2ekCpduoiOhxseb+a7gsGb3zr1GpDuMxItoKNNR18N4
KYMwHN71F1EOkO7U1CqySYWOFIT4fpeH47BraeSVBumfFORFHu6ko8mkwKmF
CBxET8eG7+DmxmoXElWlI18en37tmzj8LEmw3Uw6ZsBZF6FOR0fVB1rP38Zh
kbWyQ550TXaSAEeTjkC+/U3+XRyMZWsWJUj/H0hEkWY=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$20463#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
+rm3
             "]]}, 
           Annotation[#, "Charting`Private`Tag$20980#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 
             0.9999995000000417}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1: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
Rdaj
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          
          Polygon3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 0.}, {0., 
            0.0009999998333333204, 0.9999995000000417}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.0009999998333333204, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.0009999998333333204, 
          0.9999995000000417}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0007071066633354083, 0.0007071066633354082, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {3.0603414835689987`*^-18, 0.04997916927067833, 
          0.9987502603949663}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.17670019843750764`, 0.3064071217392409, 
          0.3534002201748316}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0002070552015728081, 0.0007727405322411345, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 0.1, 1.57], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.52`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.57, 0.52], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step2: s2 = T[Rz(\[Phi]1).Ry(\[Theta]1)].s1 = zhat\"", Bold, 
    StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594626959607*^9, {3.8366040894375277`*^9, 3.836604108553336*^9}, {
   3.836604140606325*^9, 3.8366041564879923`*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"a8f10c71-e8a6-45ff-abc9-4340b7ec0b99"]
}, Open  ]],

Cell["This works! Now, trying the same with s12:", "Text",
 CellChangeTimes->{{3.836517683187607*^9, 
  3.836517693586381*^9}},ExpressionUUID->"3e8c353c-b0b2-40d3-952a-\
96a1e4fb5b8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"makePlot", "[", 
  RowBox[{
  "trues1", ",", " ", "trues2", ",", " ", 
   "\"\<Expected s1 s2 and {\[Theta]12, \[Phi]12}\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}], ",", " ", 
   "\"\<Step0: s1 and s12\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step1: s1 and T[Ry(\[Theta]1)].s12\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", "true\[Phi]1", "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\>\""}], "]"}]}], "Input",\

 CellChangeTimes->{{3.836517731550256*^9, 3.83651775412609*^9}, {
  3.836520925591238*^9, 3.836520982360321*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"85110ebd-875a-46f3-888a-c828d88c7789"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1:eJxN2Xc81d//AHBSoSGrEklKWpIi0TpIyYqGlJDRIDsSkoyMbC6KrFSyMjOy
jhll7+wt47rvZGX/3t/H4/d5n/f95z4ez8d9vO+557xer/N6PS6/ntn1B+vo
6OhU6enoGPD3rLX/vTAwV7ipdvCU0wW6/3+tF9/Es4z7m8y26d2Ue+A/z842
Mf6Du0XwV9nmQDPCIzSPzXThfuGtqAhz8jPCc/qV04txd4wvtosJfEm46FhL
bCTur7v2bQ7LcyH88WJNgyXu+8ydNvd8cSdcukGyaiPuvE7R1TcC/Qi/x1cZ
WraKAW+zlnrpkgDCj3osRdrh3kk3baCWRyFckPJOuW4FA84TilkmX94QbrpF
5ALPMgbEL229qRYQRXiZoXxZ2BIG6lKmw/eURxPeMl/txI4740bO577F7wkf
Ph76YXwBA7aUkwy6uR8Ilx3Scjs/j3+vK73Xz8TPhGf5+WAmfzBwCi4W2Pqk
EP4xb2HNHMPA2O1bNRWyqYSr9pcrGNMwcFNjz/faEuSnKl/4K1Ix8ClUWbO+
MI3w41+aBpN+YwBKvS+KzMogXKPWY2KxCwNaIe5vlT9lE37BrWTyezEGJLbH
y/I6QPT55wuPP0MMyByeEVheV0S4wi2LJocCDES3HeAYvoxcIiDSgP0bBphv
+g7F1SJXvdSVWZ2CgeVDo2fnuosJ70mqt/R9h4Ghy1vLQ5ZKCefj/V2maIx/
PlWh5dHJSsJ5u0WN+v7SgGt+waVNl+oJ53aP3DaSNgmyn5WK5be3Eb5n4ILG
1fVUIJi4p+4KtYfwgZ/bVE99GwNDI+13ypkGCU9jUPCzF/oN+BkT6BXYRlC8
LWVtLVk3BBYsK04l/htF8Zx+cd+iTx9I3DFa+0ZvgnBLyojtNoEO4KYG5xxO
TaLzGnM20BBoBIbOhr0LKTTCw+mHLCs3NIKe9N36dl+RT/jLMZ783QCsT9fI
T+cg/2toMjQf3wB8w3PO1hYjH37TrKRyvAH0yu2nHGpCfmDbWwdRyXrAvNLA
bzqD3De5B24NqgbiieHJp05ghF88qqU/plYNeqsy/IvEkF+lB3SFO6uBM/1i
5kUJ5Hfvtelff1cFcupDv58EyCeVHzgfjvkJ6D3Pj2YoIZ9RgzGRyZWARuWy
kn6IXHlefIq1tAzcPW6m+IqCHHA6Bz10LQNT8jFHmUOQswXO3ciWKwNXqHSu
bm+R7315SE+huhRMcgxGP45A3ufwWl2ipQTMOm4z+RWLHLLHeEiNFIHvCoGd
8jnITyQav23clAvE+BiCHFuQ2xsZMTr4fgNHDc6EcLQh18x9cG8/+zeQTeFd
F/WLtE6uVinNXTkg1c58e1Qncg/vDEbPg1mg6LDxXtl+5Iwhu8IwmXTwVbzS
gX8CeUrP+5dy39OAS7v79Bkq8oKM3kPv5NPAjj+j1UqTyJWcrp8XV00F6TLe
SXcw0j5zqmi+yE0C7T6xXFzTyB2CFh88mPwIrrUEWx1cQG5oTckz7fkAvNf3
qzaT/aiyw5O6GNAd1yZms4j8hcDp54/TosFxGhvHpyXkO1Ud5eTH34KVuGsC
lBXkCb1aDzmqQ8BVfgfJfyQvZmPb2/YlCCx/E1K7uYr822WjMmULfyBunRg1
RXI1hahChlhvsGarUntyDfkNVqYJfUMP8EWbl8GI5M3eQQ38fS/Bp/OLDkUk
D5rUOVX08BmYPzdV3k1y4x0X2FI7TMDFgwPsf0l+6LZbSnLdHZCgUPFgheTK
KbvXcQpJwRnbiMI1kl84YSPet3IfBm+5z7tA8h+5lmUa/57AxJ7dzmMk9+NW
5ymyeA6XVaup9SR/fzih13fWCc5dsdVKIbln8+RniZNuMEXkWPMrkk/sEhHv
MvWEvXPTqtdIHt9RN7XBKgB+MJ/TrCPt56p3JO8cNRSW3F5XfI90LrX1F6z5
N4fDyEbTx5PLyLcy/P0jezgS+l2K435C8rMsfHM5J99DxQUWfx1SPBj2ayTF
m36CVgXsTQ3/kM8WFDqrD3+Bx96bDm/4i/xWaHPEpplkmDivx7Z+inS+jAyu
GvSpUDf9udwCKc5LIcON+W1pEBO70lRJyovRPUEqc0IZsFaR58nyKPLOu2Jh
ow+yoUrQLZ6sbtL6fU9rDwxmwwmTJ8elupDHrjootermwEiK/fOSDuTHz9cJ
JWl9g+kBjfkppPqwBdpEbVHLg3d1j2NCDcjHnCUfu8pASLU4bZpeQjr37Sw0
6FUKcxYfbJ+MQs4+YJpsda0KfvfYclb6InKpiYR9pkFVMIfn6YEgUh1+GZqf
dK+tCkZfEuHqOYvcfYNX5hGtasjnNMitTqrzr97aO2ob1MDuV2kZ3QLIj5lV
Sgi9qIOJr+eFL6xH/r1wSGWyrgE6hQym38xH98vYmaiRlIEWWLJhwH4/O/If
tePNMKgb3uXsO2CpQyVcV33wr6XgAKx397hTozFOuM05bxNm+2GocXp6iDf7
N8rfoXxrfelRuGWOsc68d4jwPxUCJe0t47D7+oPDLqb9hDMsdNIih6nQvl4u
SNShk/CQnp3YihYNdowova8UbiY86V18s5Y+DW5qMx6/zoLcQv3T1kwDGnSv
X7Rtm2xCeS1aZilvSYNsEzYBdUnIvxzzHmH2oEEPI7pY+yPIx/sbeEdTaFDH
0smzEe8L/vOY8gB21gUazBvbmJe8HfU5Xq/t3quv0CDg9Kw5OFaH4jmuXT2E
HoMHuoSYx2KR52QJiC8wYzC01stGdR9yrCzqzU1uDF7bUSGfyVWLniO4kaoj
iUGjGl6V3wzVhF8vqr5aaY5B3i22h540VxD+XCj+SIElBs9ceaaaEYz8acXa
yQRrDLZa7wyj3ULeMiP63dgeg0/TcupvtH9H9+a5+gGKOwY7O446dXSXE75Y
s3bXMByDVhIV0SPDqD+ESlw0oSIM5jSN3K0bQv0q86np7YIlGHyZ3Fez4yHy
PR7lt3aWYfCbZK7Zrd+FhAfY6PMPVGDQ7o94ceFYAeFXpp/VcNVhUPbsOMtp
Wh7h036cfJu6MBgrnjzfP4v653Pv9tMtYhhsaN3ycJUO9ecjK5+j//zB4Fyf
aQ4HE+rzGQuiInqnMMi8Z1RiP0syugddNybFTmPwJ6vusBB3EuqrGYc42+cw
eNTR2XrqRBzq9xQOUwLnMejWSufbdBrNF3W/FI1l/2Gw8iU9V+r5WMJdXB2F
AxYwaGLV/OSO/EfCdxla0WqXMCgct63OUgfNOwds9YHiMgZFlao261RHEi5f
xjIOcX9vO8DT0BZOuMwlIaXAFQweyzu6Lor2lvD0I8YMf3A/bl9bsbwQgvqE
BAbOy6sY/O5bwKK2IZjwtn+jUp24MwCLtTkeNN9pc3Noca9hsGKX3gmXq76E
i9srN+L3Gdwc91CA7YEn4SydntFOuC/ymVe8fe6G+rFKWBGPu/DyGjNPoDPK
i7gBuZ+4j9KdzD5x7QXhXdkTewdxX0/voC7o8JRwCkPL9Rncs8M6Ph+9ZUT4
HbOwbrwPgOI1h4WZdNQJX0iXLMb7APjizPThk2kA/ufVGukrC//73j+MKSrh
+oSnV2ygUHFnUuYSO/PegvAdx087teE+InLtzhUrW8InwhQrc3Fvv84uFvfB
kfAvY/IGIbj3s5ZLHfJ5Rbhj/aEMcdxnHBcSuXS8Cd+jtFd7Cd//q4fyg0sF
/AnPsziul4O7mgHvgvWuQMKNP7Q+5cG9AKtSrF8XQjjPU/saVzxOzpRfZpJq
iSA85NLti1txV5i0V6r6EUU4u8Aauw8eh+Oe0s8P9kYTvt7xSNHTRQwWSYbV
RjbFEB5zs1xtAo//ihdMfmr5sYQ3+9oEPsLzS7Jee0+KdzLhpQc2l9zD8/HT
cLtF/bsUwrP2XJm5iufvLN+ImZVaKuE9fXO67JP476VMUR3upxF+fVbI6Ngo
Bv1ZXebVnTMIpyZYuH7F68Px75wz//KzCVeQie9nhhgsPTbNZL2jiPCpJBmh
wXy8bgdaKzbeQX5Xeb1HRi4GH4s0Tx+OQP63zOapZBYGL0pcPVK1v5jwIO01
yY4kDFYJtvM0iZQQzvTJjc78LQbPbyt1HpUvI/ySyEE4ZYDXK4695z49qyQ8
4MfJmJEHGPRdd4e/NRP5b1OWpiY9DBa3MP6jm0HueOws/xtNDJovNp+TNf9B
uNbphVfFKnj+5g7YvjT4SfjtgoTdsWJ4/f8aYpWnXk2426eAV1//0eBFxeQk
M656wmVcRTh3P6bBmwfTBS4PN6H419TL8qujwvU/o+LFOjoJ/75ZdcvrvHEY
ZCuSWRrSTzjL0ToNaZ1RKOT/4bZm3hDhYgm2IqwGw1DEh21Q8Mdvwhd82Rlc
FAYg049bzk3S44SreVnL/6B2wxOXpHffkqcS/rYkrA2KtsKh/Uppsgw0wktm
gSrPjlYolx80nceEvDJq9aHFvxb4ImDv0FEW5AlHvnptLWiBFb1ZP2e5kHe+
zrPfeLkFrvqLvT4hjDw45LI6vXozbDzGlCSnjpzmrrum/LQR1kRtow5/QB5X
86G2UL4G3ojRu5coiKE4EW39vZmxBkr/ENkYeAT5WGVHqmpZNXxEXVdkJoxc
ubA2svhCNfSckDNgFUcer8C+7qJoFRy0nDUekUVexrea0Mz9A3obKmkO6SCv
yLy4J3eoDLJuARv4A5G7fg7R3/e+DI692b5rNAh54qsnRa+0yqDaynP+2DfI
HSbOski0lkJKRusWxgjkbPzpXHcrSuB+b0MJzc/Iqc+lBj/EFUFhyyypG7nI
pRbyW/3rcuAZnmkvs3bkh0fV88+o5kCZLe9U/3Ugr733xa+nPhuem+3ca9uF
fP3BIgfOxiz4RClhQK8X+eUjOgvnmr/CA58s+1uHkOckNJ8Nb0uFHJDDWYqG
3K739ei0eiqcPBvaJo8h5x4ap/NLTYHsNR9FFf8g7z+ADZSnfYEfd6msnvqL
3G/94YSujHgYef9hW+Is8iWP2l0jWe/ho4L2x1xLyGWCXIpFsqPhtPQySwzJ
47yUbWmmUZAz0y9r/zJy62nlO1Nm7+Cpodfbtq0gD+G2lzEwD4UXOjOLbEhu
RDFt+GX+BjKc7rbqIPn97e964ywocMWlcNh1lbQ/U2razE8CYOAn5Zg6kkdv
+cJQNeQLk7ydddnWkFOMiijPhz3h9Vql/YokT043NT4w4gZVVyN+25M87byM
z48RZyiZYpgcS/K6RJ+JhtoX0OQJXiXJz6GyKzLXP4U7f125OEByyKdjbh1j
BEXNlNlmSD44yVQZK68O/cuT+1dIvmhaJqOgLw1qHz3+ukZygR8uZs9u3Qc6
/S9fL5A834UnYvORJ8A7/4/OBMlr6uUWWg/ZARPnojMtJA8+HDxSw+EEJnNn
dmST/MXVZuwV+2vgHZHQqkfy9spN/m1sPsDnmnSuEMl1N8xbB3j4g0mvh9E0
0v4L7VH5W+ceBA6GhVtpkPznyZQHm93Cge+63xcaSXGyX+zgH+fnkcBIjy5C
m+T1/fVBthLRoK08X3mQFG92EdxD3cdiAF1jyOeWReR68ScumXPFArsKRynt
f8hDWV+YuVO/gM3pBUfWppD7J8/bUkeSwR17WhkryQOpSbsU+lPAfLfNV25S
Hg2LneKcH08FX557BO0k5eNChIeNYW86sM6yv5c5RqqHIibXTSqyQIori7YT
Kd99wCHTW7LZYHLIx4SrB/kuQekZyeJs4Gsz0/qZVDc+lMZWYLk54PzfjpwU
Uv0ZcZaT5UjOBdljx0r1m0jnlTuly0cpBNzac1e0ypFv5VB7VnC0FIRw+50I
/YA8l/NE4pJpKViUyspmeo887/oePbH0UrAVyKqYRSJ/chBsDZYoA65Ut0z+
UNJ6Wp5eYrtUDiS1myx5fEnx/3pDwpBmBTh0TdhQ3xr5ROkag6V7FeBkoL+i
KEU6lwviGswDDaCxxjMw4xu6p94VZO60u90ORn+H7ZLQm0T3xVqAe5pDH9C8
NylaZzSB6pKKQcPd2UHQpl/Gr8cwRvju1JiB7L4RYH1pk0LNvRHCD5RqPYyP
HQOMBcce5/MPorp97sOYavMEcHuSW176phc9R98uuM9rEhzPvplbQfmF1k85
e1V4jAZWen5V7PVFfYt/WvsLmUka2CqzOuNlhnxgZC+vyhQN6D/ayTutinzk
RlbstQUakPzGaZ/JgTyRLfvnEhMG+mfXfHacrEN9xciM06AgBrx3p1xkuFxD
+BX7E6aLmhhgPPhRPtwA9WMDXTlV3DoY2H15xcX3CPLgtkZ7UX0MbJRODLGj
or6uk+5bq7IhBoQOlThJmSO32Ol/U/ApBjYv3eRyfVZB+Ffnj78eeGGgC75+
s/qqHPUVD44/4k7HQLi1ZhxvOOpXZ15OFLt8xUD+Bh1h3lvIpyzoLQezMFA9
VmW0kxV52tLtFtc8DHBsPKu37IL64evewu63yjDgaVUmuL2tkHDVvX1bDjZj
oGl0h3WwZS6qP+Jd9rMtGJBhsXm2NvINraeaTjK3DQNYHkbR1UCu5RFJEezE
wJ4F/x8s0jmEVx+tK/Xsx8A1+r2/2FiyCNfUaIp1pGKg0Thya18smhcCH+2P
ypjEwJlfbZ29u5DTed3r6qJhYL9Li2WHN5o7BlLFBNinMKDvzK7hNIzmF5Ee
gT7GWQxU2An/SbRPILxZijJHxZ2P7ba/rl484SvbjVUq5/D9Wcdgte1KHOFJ
8TcrdP9h4Kj+Jm01DjQ3lX0z/sG3hIGn8cGClPj3hNsIuVKzcJ97bKbE6Yfm
MovHsqqyyxjo9P9avXcskvDwwa3t0isYaJALjZh1CCP8b/vPlTTc13lxUZrk
36L6wBakx7WKAftDYfwJnGh+vGzcMFGBe//FqNyLCQGES29jZcXve3BfUOEs
67gv4XyzmKUq7ien9YL9XnoSfrBaa6cb7pelOLo2bncj3PKs/GIa7vUtvx89
S3BC9/LAx93NuAuw9+4rf2mHzvHuQwd8HgffYp/qURLQPP5X3I1vCXeJcJOX
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21066#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21066#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21066#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21090#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21132#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHGYUAHCJrqUxi2xIpBFBIolgWHY1UZFFZUlpsqHum5S1oaLWEiKC
SZO6Qh3BlIkjdce5bq2k47asrquzSaodUSHrlhD0+/7wfX0z75/fvHkzb96b
p+YdzPTbLyEhYQNSUmIvFk2NLNYXbsvOm+yJZYLz7u6u2DRbrYNl2yJjuudD
iqxt6ILs0lnrFmXkmTW6m9DDCWE2vCsayPMdf1mDfrxq8JRVy1nk2eply9Ab
6rQ0BDQd5OerrMXQP4s4nFrppIc87FP/N9D9XGMTaWMGyEfHyKPQ5bwd7jH4
F5AXu47nQS/Z+pcYOGeOXL7/8HXof/OO1sV8ZY18cos0vwNc9cgZ2sO8q8gF
lpYc6G+85Neqxq8jX1UkvdoG3vHgVD3Z0QE5SaGdAl0j2tRFtccZuUxcbdRH
4LnxW56EbTc8l6xcwRZwCztRZUarJ/KKInrbJnDfKfakoos38tLsyJ4PwL+w
b+YELPsg584olL4HbjXnIO1W4YecMeBzfwM4Q/bn7nbGt8h/fLFIXYd77FPi
dBADkHvFiAWrwO0S01PTOljIqcXlt1aA6x6QmBx1YCN/rxQtWgJOoC9IN5CD
kG/xHtssAqest9+QrA1GrppZGP8OuGfKjIDb/B1yNyP5inngjgZnSyYzQpCn
/zQsmoN3qHNaIcTnFvLU+8yRWeBdzYb+jmahyPvFTSMzwHNsrzhwDn6PvCyp
sPsf4Gn1jZvRL7Hf7LWInAY+l+KRIGwNQy6k1Fx8DVx6gFPq85CD/BuN6lYR
8BWT4Wd0VjjyqX152n8Cn605FCBjyUWeJ+dUPwGcOJTfRiRHIO8qihELgSd8
yV+wX8JOtCVYjAJX8FBpnfo1Et9tddajYeDGA58YWyXeRh56OTFpELhWOi+N
GBCFvPXE86d9wKmbqz98pEUjtyRfYHcDv0bVYtKV7iDXOZFw7QVwvSDF1rYZ
7MVtvfq/Ae98UCJUq4tBnmxG57UDn5Fmugcy7uI+PWHeLcBH6ykaf1Vjf8ds
rGoEnlme2b+jGot8Odx5tRb4prbAWiEZe3pfl2818N5LVJXOVeyCt7Ih5cAb
R1j8Q773kBNMy8ueAn/Z8ERIGMB+jjo4XQh86I8b9W/145C7h3bX5ANXCzUM
jijAPmW8VZsLnB9FuvuEGI9ck7BWAN2iqVEtWAa7pN5CMnTaottz4wPY2WUT
LOiG9qVSQtL/6il56tCllgySiErYLyYKH+XAf+VyJId9EvsSWyH4MXCek0od
jY79sv+4K/T8jSI7SXPsOr/nWkNXTjm3zrfAXl6oqgmdVUY9H8DAHrhCFmUD
F6eYdOZ+jX1XVGUNXX3/sX4Jd+wuy86fQ7fVTWcPemBn+BM0oWcxZUg5XtgF
XPt90M/ELV818MNeqT3NywJeF9s05sfGnmQTWwzdnH2aSwnCvs0/ng7dyDZD
eTcYe8oHuyDo4o2brtmh2J8VLLhAj+uc2PYNw+5dGm8F/dgds3z9cOzF5KNG
0IsNyi/tcLFzX1WehC71+uB0XyT2/wDyIY+R
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21764#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
8A==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$21806#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0nk41HkcB/BxC/tQudJax1SUYlpLcvRRS5EUSQ9alhwtheRqNbLM0FSu
nEN51lmukrWFUWwqlUhu89O4xpj51T5bUa0R7c4f+3y/+3me9z+vvz6XwfHI
w8HSFArFQxIZSTZTiLuORSS0O58z33X8F6D8V/St/P32EqfITPRUC7GXDsU1
WUs8uzTDeW14MvKidjtpM4lbXnAmhfEpyJ01XAo0JG4hG1GTlcFE7vVrOJtg
k8BkWIeMtbCQw7CZnIPENa5bu1VeyEZ+253FzCsg4ePJnL2tPDbyW6Fy4ykS
5w0Z+shsKkI+phPz5bTEPQ+l2rhGYK8d3VR/QOKHmUnBU1+w23IE5VISzz6S
sldW/ypyWujrlYB8Esx0Mtt3Hy9BPptienI5l4TJ6Wvd+xZKkU/Fibays0mo
1zKrMYmvQp7m+z5LnyWZK0hsRvBvIp+hrhQbJJLQ+Zuu2aXVTchlTxVqbo8g
4XRYVsYxVjNyBs+wMNyXhHDHmMOHbrchjx+1rNzuREKFOTm/rPkH7p+pTNjT
SMgaKBb6OXcit6E1mJpokUCKmbmfPB4hTwiSNVpaFAHF9qbYgtWFfB+79s0X
rgjyHJa0ovOeIp8oX14v2yqC4hNNxj253cg94znLHjki+BC8o/pcWw/yrxPe
1jFPiiDJVKVKs+0F8i2PI0MZu0Tw0FPaTXz6JfLlB6GRAaoiUL7V8do3sR95
Gy12S9+UEPoy1Ry7YgeQ6z+TKYuvE8K8TUqzVPIgcq2H0VbK8ULw33uH6nB2
CHlJdHN2kI0QWGFB4qbkYeRqshyOeGUOzpd8GqlljCA/wjOnGnfOwTC/z3Y8
ahT/2/0Ej7zzc0B5+eaqS9QYcmXtnxQ+2s6BSsi3vcq+XOSZDQMqTksCSPfX
ME/aTSBXvJicfqxBAGrrBK02luPIrcb9m1edEABtkuN5TesV7n9fyM61mgKo
enLGiK7Iw3chxNMyj2bh3aLKSNh77JTnJR8tYmchMjP3YNiTCeR/BVSkuuvO
wkrcareBuknk/S4GdvLP+CAl77DcsWsKeXbXjznuMXz4IbJMOFCB/QJT8ExP
kw8thpffXladRq4X5GVHvTcDn/2uH9h2Bnu0EbF01GsGRPJXGinj2ItKtOU0
xNOg3NE8Mmk9g5ygC+51F03DoAuz8V0BdoZxd7I3bRo2Wt+NKV7ETr0xTlfo
mYKzG5Syqtz5yC27Cs86+U5B6g1GU08DdqW8HVXreJOQMT9LHVw1izzcvlFb
TnkSvD+n/nztGPZ0q46ZNOoEqJQ/p79qxO66SIuSd+LBmJFfuRpFgPyx987J
zvBXsOfogk/a/v/5/WXbksRx6LZ34fSysau/WJimFxNAL51Kj5vE3hu16rtf
CgiI/dP7af0UdrttbFdGDgHaC4eGZ6ax5w3vGWVdIkBh9kbgwVnsKpEcxysJ
BPR7dLhTSewpwaUFhT4EWNS6Rj2ax87h9XyfoENAXZJ8PV9uDu+h/1x+nCYB
1XEGa9QVsNeu/b3hzBoC8lNOODsoYr9dPWMXpkQAoz3MpFIJe4uVUefRJS4k
GijcD1DFzrz4NGojwQWnxkD1IW3sxOOv3L4Z4YJGpVS6lA520A3+W3OAC/oR
5UOm67F7+p8qU+jmglnazBhLFzvHqDdwrpULWX2aN60Nsettzr3Mu8MFOUZq
fQgVe/doA32okQtH1Pn0nA3Y72Wqtj2o4QJt3D+b3IRd+kGgYksVF7S06IPq
xtgLP9D0bpVxgWFHF8Jm7OyOpH8qSrhQPODXE7YFe3mLV01RERdEPgYp+SbY
/wWePpxF
             "]]}, 
           Annotation[#, "Charting`Private`Tag$22438#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxV1gs0lGkYB/ARKxHlmshtRWsTRbqgnkqL7ZCKLcUShUNtaCs1Kkq51CpS
tk1aSZkUG8clEkpIlDFjXGfmU7Qomy5aVox1zs7zvme/c+bMmd+Z+b73e97n
/3xj5B+6JWAai8UKmHrJsvDgQo6LZz+7uAtQejP1V6pu4ILdMwWR1Vnq6kf+
3pmbwoXqpnDxfF/qyaoxgTwhF5zSLc22WFHfvFDb/rhJM8Ra7J58IEddLyKs
Le+nZuiyzOPsau0kLre2fIl/UTNUNBjs35BN/Q3rnlPqeDMobLbJC4+g3tl8
Ye73DjzwKWgo7HSkfr3J5c7hBB68Fmv1xGpS99lxUM64iQfZw7+mRfR0EE8C
v8WOGnzgu6g75t2j7vh08epuTz6Y+8e6mR+jrnRXtGboKh8+JOt9+8mZ+tf9
zm7h3XyILzFzldOgXsF2PrXbuAUW3NC08RO3Ey+XKZLUBrTAmz1eu5Q41NPs
I16mZrdAaPoRH7lw6svCL7nz+lvg6Nr+fNeV1AcL1kRHmAmgq0b5XT+LervS
q9RTwQJ4XGHNaatrI14Yt6BhhCMA/dhItu456uqGqj809QlA8z5PttidekLC
RNgM01ZQSOzr42hTD35Z7Ju1qxVCVPWaPgtbiTfaRQVey2gFfEfH74VIf4eO
58XroGtJ14HrQsd1432g4322Se8bHeuCdULHOi6X1hV9n7TuuA/ouE+4b+i4
rw+l+4yOfWAs7Qv0j9K+UZT2ETr2GfYdOvYl9ik69jH2NXqvtO8xB+iYE8wN
qb80V5gzdMwh5hJdKM0t5hgdc465R8e5gHMCHeeIhnSuoNtL5w7OIfT/zynq
psVb6r90d0F7HjdlJKSJ+PaqExsLFYWw+Xalt7LgBfEXarNcblgLYWDCOum7
1dSf5Dam1XkJ4bL18+CsW8+J7zVfpWcYI4Rp4vULLVSoLxKnFd25LYTPX22a
13egkc6l4l634CYh1AZGn+F3NhA/oykUbhsWQtoJk/oRoN7jp+V+SFsEEXGL
lnhmPSN+KWoyr9pOBFwdeaN/plMfnPPq42ofEVQPHB0Xh9QTn1/6zrQvSgRs
owxzledPiW9tWLf9QYYIWOXXDM5aUO/dMZReViUCndsc5x3n6+gcvj+p0suI
YBX/hUH0UC3x0LdRjcskIgiS6TGScaPeOnlyPF9XDF2p27gvc2uI6xiaNXis
EMOFJQb5pjOpf0q4GaLvIQaXb37Z2BL8hLjEY726SqgY3AYslw/VVhMfVQ6T
NU4QQ7xt2USkMfUPJiVR3pliUPZuXxEV9Zj4fptmXmnZlKtoxEx0PiLupp7l
assTwyC7gP3FhrpmpbOTqH9qnfIpj44lVRHv1p+tlykRw5Xp88ZUBZX0eZEU
ZxWvzgDn+q07DvEVxLU3HvtwbgEDYSXJQ7/ZPqTrz5J7VmTLwF4DnrH+4APi
0Sy21bgLA2Oe6+52XC0jrlYXm+3nw4D/bN+PApdSWp8ZJndf72PgOFs2YN54
Cc2vwo36uOMM5CSYHC7OKSYedvLWeadEBnQkyVm5nkXEvXstL85PY4DtzglS
ki8k/od9+s/6nClP1HLoKCggrqiYy11ayMCV1xfLDX3ziU/riPYIqmSg2+v6
j28V79HrFv6eV1TPQLvnocDTe3OJ1waNXjTgM3Bgm33azsc5xL1SeqqzuhgY
nTMeFTmHQ5xzwUSyvoeBw3Nj1gzsuUncZen7maw3DFy2iFR+WJlJ6+PQWykY
YiA6pVtXUT2D/t/4U+2vmmEGDOuHnOsarhDXrZGEcUcZYA3H1ZaGXSJ+ena6
xecvU9f1HFmkpplEn9euW2ctlTDwXk0i8y78NPFNY/KyiZMMVI2x1ez2HyT+
39Et/Zxkj/IvKYwjzQ==
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 0}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999875000260416, 0.004999979166692708, 0}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7070714261421149, 0.007070949961324531, 
          0.7071067811865475}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4330127018922193, 0.25, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6967856156337403, 0.39305191240586723`, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Expected s1 s2 and {\[Theta]12, \[Phi]12}\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836597509301633*^9, 3.83659752599263*^9}, 
   3.8365976789356127`*^9, 3.8366036770254707`*^9, {3.836604090034855*^9, 
   3.836604108581183*^9}, {3.83660414062013*^9, 3.836604156871883*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"403dc15a-0a61-4306-a385-7da156bc9a35"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{}, {}, 
         TagBox[{
           GrayLevel[0], 
           AbsoluteThickness[2], 
           Opacity[0.05], 
           Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$22526#1"]& ], 
         TagBox[{
           GrayLevel[0], 
           AbsoluteThickness[2], 
           Opacity[0.05], 
           Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
            "]]}, 
          Annotation[#, "Charting`Private`Tag$22526#2"]& ], 
         TagBox[{
           GrayLevel[0], 
           AbsoluteThickness[2], 
           Opacity[0.05], 
           Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$22526#3"]& ]}, {}}, {{{}, {}, 
         TagBox[{
           RGBColor[0, 0, 1], 
           AbsoluteThickness[2], 
           Opacity[0.5], 
           Line3DBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$22550#1"]& ]}, {}}, {{{}, {}, 
         TagBox[{
           RGBColor[0, 0, 1], 
           AbsoluteThickness[2], 
           Opacity[0.5], 
           Line3DBox[CompressedData["
1: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
seF5
            "]]}, 
          Annotation[#, "Charting`Private`Tag$22592#1"]& ]}, {}}, {{{}, {}, 
         TagBox[{
           RGBColor[0.5, 0, 0.5], 
           AbsoluteThickness[2], 
           Opacity[0.5], 
           Line3DBox[CompressedData["
1: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
hvdRuj3u/wfF2WI6
            "]]}, 
          Annotation[#, "Charting`Private`Tag$23224#1"]& ]}, {}}, {{{}, {}, 
         TagBox[{
           RGBColor[0.5, 0, 0.5], 
           AbsoluteThickness[2], 
           Opacity[0.5], 
           Line3DBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$23266#1"]& ]}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], 
          Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
          Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
          Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
          Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Arrow3DBox[
           NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 
              Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 
             0.5}}]]}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          Line3DBox[
           NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 0}}, {{0, 0, 0}, {
             0.4330127018922193, -0.75, 0}}]]}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Arrow3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}}]]}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          Line3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}}]]}, {
          RGBColor[0, 0, 1], 
          Opacity[0.1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], {
           RGBColor[0.5, 0, 0.5], 
           Polygon3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 0}, {
              0.4330127018922193, -0.75, 0.5}}]]}}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox["\"Z\"", {0, 0, 1.1}], 
         Text3DBox["\"X\"", {1.1, 0, 0}], 
         Text3DBox["\"Y\"", {0, 1.1, 0}], 
         Text3DBox["\"-Z\"", {0, 0, -1.1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"s1p\"", 
            StringForm["s`1`p", "1"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0, 0, 1], FrontFaceColor -> 
           RGBColor[0, 0, 1], BackFaceColor -> RGBColor[0, 0, 1], 
           GraphicsColor -> RGBColor[0, 0, 1], FontWeight -> Bold, FontColor -> 
           RGBColor[0, 0, 1]], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"s1\"", 
            StringForm["s`1`", "1"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0, 0, 1], FrontFaceColor -> 
           RGBColor[0, 0, 1], BackFaceColor -> RGBColor[0, 0, 1], 
           GraphicsColor -> RGBColor[0, 0, 1], FontWeight -> Bold, FontColor -> 
           RGBColor[0, 0, 1]], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"\[Phi]1\"", 
            StringForm["\[Phi]`1`", "1"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0, 0, 1], FrontFaceColor -> 
           RGBColor[0, 0, 1], BackFaceColor -> RGBColor[0, 0, 1], 
           GraphicsColor -> RGBColor[0, 0, 1], FontWeight -> Bold, FontColor -> 
           RGBColor[0, 0, 1]], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"\[Theta]1\"", 
            StringForm["\[Theta]`1`", "1"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0, 0, 1], FrontFaceColor -> 
           RGBColor[0, 0, 1], BackFaceColor -> RGBColor[0, 0, 1], 
           GraphicsColor -> RGBColor[0, 0, 1], FontWeight -> Bold, FontColor -> 
           RGBColor[0, 0, 1]], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"s12p\"", 
            StringForm["s`1`p", "12"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0.5, 0, 0.5], FrontFaceColor -> 
           RGBColor[0.5, 0, 0.5], BackFaceColor -> RGBColor[0.5, 0, 0.5], 
           GraphicsColor -> RGBColor[0.5, 0, 0.5], FontWeight -> Bold, 
           FontColor -> RGBColor[0.5, 0, 0.5]], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 0}, {0.4330127018922193, -0.75, 0}], {1, 1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"s12\"", 
            StringForm["s`1`", "12"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0.5, 0, 0.5], FrontFaceColor -> 
           RGBColor[0.5, 0, 0.5], BackFaceColor -> RGBColor[0.5, 0, 0.5], 
           GraphicsColor -> RGBColor[0.5, 0, 0.5], FontWeight -> Bold, 
           FontColor -> RGBColor[0.5, 0, 0.5]], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 
            Rational[1, 2]}, {0.4330127018922193, -0.75, 0.5}], {0, -1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"\[Phi]12\"", 
            StringForm["\[Phi]`1`", "12"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0.5, 0, 0.5], FrontFaceColor -> 
           RGBColor[0.5, 0, 0.5], BackFaceColor -> RGBColor[0.5, 0, 0.5], 
           GraphicsColor -> RGBColor[0.5, 0, 0.5], FontWeight -> Bold, 
           FontColor -> RGBColor[0.5, 0, 0.5]], 
          NCache[{
            Rational[-3, 4], Rational[1, 4] 3^Rational[1, 2], 0}, {-0.75, 
            0.4330127018922193, 0}], {1, 1}], 
         Text3DBox[
          StyleBox[
           InterpretationBox["\"\[Theta]12\"", 
            StringForm["\[Theta]`1`", "12"], Editable -> False], StripOnInput -> 
           False, LineColor -> RGBColor[0.5, 0, 0.5], FrontFaceColor -> 
           RGBColor[0.5, 0, 0.5], BackFaceColor -> RGBColor[0.5, 0, 0.5], 
           GraphicsColor -> RGBColor[0.5, 0, 0.5], FontWeight -> Bold, 
           FontColor -> RGBColor[0.5, 0, 0.5]], 
          NCache[{
            Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2], Rational[1, 2] 
            3^Rational[1, 2]}, {0.25, -0.4330127018922193, 
           0.8660254037844386}], {1, 1}]}}}, AxesLabel -> {
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm], 
        FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction -> 
      Identity, FaceGridsStyle -> Automatic, ImagePadding -> Automatic, 
      ImageSize -> {360., 360.}, 
      Method -> {
       "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
      PlotRange -> {{-0.9999998830731719, 
       0.9999999999999918}, {-0.9999998592131705, 
       0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
      PlotRangePadding -> {{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.24859475626362457`, 
      ViewPoint -> {2.9188142400778845`, 2.030789311224028, 
       1.9218282198725523`}, 
      ViewVertical -> {0.004902228601158401, 0.03194168767395834, 
       0.9994777119792525}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), Editable -> True, 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
   StyleBox["\"Step0: s1 and s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836597509301633*^9, 3.83659752599263*^9}, 
   3.8365976789356127`*^9, 3.8366036770254707`*^9, {3.836604090034855*^9, 
   3.836604108581183*^9}, {3.83660414062013*^9, 3.836604157192856*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"ab29b128-04ab-4fea-9371-41aa40d01b0e"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$23850#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$23850#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$23850#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$23874#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$23916#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN13k0Vtv7AHAyT0VKuoRcVJSbzE1bUVRmdUPkzaxMEZokGTNlyBRKIkPK
m3ne5jFJoYy9LzIe0S1Do9/54/fd+z1rnX8+a6+z9t7nefbz7O3WbsZ265iY
mD6TLwv5TlQaHBUbIkDb36Zm6pQrh5n+/1GT+lQrSrqtTPGpMaox+J/3zkMl
YdLji02jy6nWyJNiaE/4SZdT42b7w+mMPGdQm5ed9C/qQVrpVA/kdp+WXVYH
CaDbUhkNLXyQu4kvtE2Rrs5Z7DTMeRP5P64NF2tID9sgZB9MvYPc/tvjl09I
7/ezfX6PPQj5bMS7L8GkV43vq0uwCEEefUb9vBbpOxfc9NI4I5C/K/CZejBA
ALVx+fij1Fjk4Ifed0fSg8Ner+4fikOeYZrIqkR6yxNjbQX2eOSPBpI56j8Q
IJvj4Y4tFonIz17iqyt9T+6DhmNIE0cq8mVNZWaBPgLwF6/IHivIQN45H/r8
RS8BZud+mudqPUE+mPza5ATp05sLgngGscu8No/yekeAmkafiHbWLLw/oLg6
t4dcb8lSjqx5NvJUfWsu/y5y31zDnTxZ85EbnmTvnGsggG97TpXps0Lk8nz3
jwuTTkhYUMV/YWeh5KscqSeA+IE1vQndIuQU+akroZAAi6FHLew/Y/+hEOJM
VBHg1H/rX+gqlCAvrZu/wF1MgEQvI4/k0jLkbfpSOo8eE+BlkiAxX1uN3PuY
f7CyBwF+LSaXyFk3Itc2G9NX+TYHRmKoR4UzXiEvpvvn8pycA3fD3O2+1r/F
808eqQ85PwvU9vQUf3V7j3wusiHS6/QM2G2QcWpL1hDeZ41u1waWaeCY6hRo
vvYR+esypbiasEmg4y9jUMUyhrzQIKZoA+snoBV6zmtDyzief42SzIzSOBj6
lNjKcfcT8gp3lS/XrOmgYk+/+BrHFM6v063TFaujINW8O/ew2TTyHUIitND0
QdDh3MD3MXkGuYLr4Wk5237AXBOecSVpFudF8is+l4weUMYsXN99bQ753dAd
W77ktgP6mbnrSpIEcjF+LrXioHbgnTw0oCmFfe/ZlKIrF9oBTfu7nqEM9lbV
wfZ54XYwXjl+hSKLvX2Nc7gupA34NsaXWe7D3qyvMzZv2wq+CHqOdR7Bbp5d
Nuy7rRk8j5J29TqPfYU5IPBEaB3I8023/BqF/ULJcUNbSh0os+oStYnGfiCl
Q9RXrQ6oyB6hdMdg75bdlGjUA4Gjiq5n2n3seeEu/G9jakHEzn+aNzzArq3I
EiC5sRpUBQV91c3EPuC0p/AYfxlYSS+5tLMU++pMvOX6ulJwcYGw21mG/cjT
pqO9bqWgoIP6Uaoce5xtIv1sdwm45mJjJFiJnd1SKABEFQMONQXZlhrs0upZ
k0k8hUDEszopoAn7X33Poy9z5YE3lMuVFt0M39/lvk7BMxfwi0b+HGPwGzUc
dfPDOYDlId8e+zfYHbpizltRs8F0KNsFmx7sx7nFp6XOZoFMZSse9XfYT6mc
l9HOTAfPWQ5ZGfVjtxPM7xnjSweqbW/TnzI4s+XL6O+fH4IH5za/XWVwvxm3
grPxqeDR6Vss999jL2T7cWORngguxa6lZ31g2J875zj4SxKA3N2tVmMMPrFD
dtee0HiwGv2EV3QA+4Z9RAFFPg6cy1xQDmZwzgb1WMpSBOjpeFOnPIhdtv8P
3+2UMMD8tee7GYNTHMRKU4+EghEtEckbDM5GVwx/HRkA3jy+qlHM4B/pfGoT
iv7AMyVY5RWDi7Bvllws8gW9KW9E6AyuZOwcpaJ7BfyU5C9mHsK+YCQXk7/X
DRxXXOfAx+Bi15RLptvsgJnlLi4hBi9eFyJwrMEU2JUGPhBhcA8LfssPHarg
91NBETEGFw8J5SqqOAEF5/rCtjG4lNtqg0O+FfwZ0zmzlcH1r300+n7ICTr+
+aYqyPid/I9co8aXofOksRcXg59szY6rYfeGviaTj38xrFdvm3XLg8rr0DWD
WkMwuKR/uKCMwB0o9mOxoZHBeWKf5G24FAhtLC/l5zH4O8pFoZWmYJhwVjoo
isFrpA46114Nh5/MbVn1GLyn0qY/7W0k9DNbzNvB4K8LKrgPCUVD1sF2jTWG
OBHp0uTa5B4Lu2je+7MY/GHk9qDcvxNhc/0x+1cMcXjTvYLnhVMSlOFJULvL
4LVCtcEFBclw4mXj5aMMnpJnW5ZzIBX2DA4K5zHE/+Zcg7ay3HT4RpD3gD5D
vji8EGjbXJ8Fd4xEDcy8xZ6l9Usmfb4Afo3RmXJtxx7Nk7NTWocKe7v5C8rb
sK93n1C+mkyFMi4FH/+0Ytf6h5lf+OBLmPP51Y3bLQzror95esi/EN44KJ9h
2oi93njSbwtPCdS8LVdrUY3dnXfz91rRSphum7RW/Ax7GtvG6WPOldCgqzck
Jg+7sUlNbntVJbQ/Xph2MZfhPFGh32o1r4JFeaMeG7MZzn+2JtuUpGroqLza
opaBXSDuWmOKIITu3y6o0hKxLwnXsZxnaYAC9ramKbext7Rk8RUttMDITvvF
V9rYC045si6udcMn8kqjkRW4bgr+bs092dkLUzYpR/w3i+tsvQCnq7fEAFza
u6Sl+gPXZQH73RUbVUagS/D9iKUxXMfZqBwJtFIazBg8KEQNwnU/Vb6C/1bM
GBzanXEyTGgSOXwooUZxn4DdjmwWsecnkMcHi9huEZ+Enl4Lh/VCcB9iuOrP
3Bg2BTMu3zeoLKAhj/JJ73o9PQ3vmSwrikiO4PmImAlksszCNXfbP/9+/4Dz
gjVw68j8LDSvDKyUre5FPrkOSPNXzkHvSRVF+mo38jDTo1SKDgFvizno6020
IC8PMcu4cJKAdqtdgZHV2LOsU4WsdAmonzFIdNzHzsydF2hgSMDHMcF2h45h
r28Vd2c3JeCVfzLvMD9tRm5QV2zwyp6Ao/4z5dwOTcgvByhmlPoT0LJmNVJz
qh75B1FdR+0AAo40nvZXhNj7KsJyewMJmML7S3N7InY9o9LUiRACUl5/O7l8
HDtLVJDGYCQB63uFZ4Of1iHfpGB/RjSZgFs1ngRGdtQij+T4K/hHPgHdRP9I
tDZUIP/sG2HP8YKAYz+4UwN9sCsMzOwVKCDgSlKQGdiN/bfs1zsiLwnoUiRb
nR9fjjxdX2krTwkBpUc3sjg64r76ofnOlTPVBNzcpVrgwIf7cLOfPG+S2wg4
+EBOr+kMFfmhGHq1ZjsBJ2D+K3Vu7EawKHqW9OKFFKlzvgXIN15kn5fvJOB1
ypyEhMELHCcGAd6xXQRUd9xwNeC/Z7j/l5+sbeohoLyV5XCNGr6ncFb2CR56
S8BPfsfBtcdPkQdndegXkp5UVbtvHzd2t5ux3nHvCBgef503bSgT+e4VvYi9
fQTsUWIyMb2F71n077Ktfe8JyDbB+WEyOAW7305RkQ8EtP3Q4bL+/APkll3W
Xpakt4acP6GonIzc5YGH0gDpTFu6dL3GE5DnHjeeyB8gILtOHG0E4HvlyV0h
5oOkt1g8Z/oqFIN8NLqjl3WQ/O+LweW8w/dwfOZd6jMkvarjmr+hWjg+T3wK
2JtJ7yuqVC5f9Mf9YfPn1EHSVXcd7Ew+5If7ASFJ1XnSjdZ1LsDk68h3+Wn3
kfUYiq78MRlf8sJxRbH0Ies3ZDYv8WA1voz7ZBfrbWS9h0ccEyO1LZyQl2Sd
aSX7Ayh2EyQEbKLg8aYqXmQ/AaWarveu7DuF+wRp1h1k/wGHCq8yaX5QhP/z
F6u1w2S/Ak0bRKZSg84i/7XBIYHsb+CZmscGcdx2yIuXf5msJ/3ecNSfM8au
yEND/DezkF7crdvM3eWJXJVYGvxGrlfSmsVv2v0q8ttp5zLHSWeuinzZuMkX
+abT6zTLSfej9p5Ukw9AztWvLfyQdPP8uhyJ20HIibSQL7dJZ9Ow7GJ/G4Jc
9Pw66iHSmxW/XOn0ikCe66drGUfGw1pwe0PiaCzy5DAv3wIyPnvlFXwSpFOR
Z271vm9H+vbjet4X9dOQj6u0FAiTftTZyeWAz0PkCge8vnr1E9D43MUJJ9t0
5GERTFReMi8sl72d50sy8Hg/CvszMh8b6FH1cabZyM9IhC/LkH4wFSS6fMfu
f3DB9tEbAtpnct7RepCD3NXoaXVQNwFX7yXpzAzlIvdrLDfbSZ4DJxzKvHit
8pEbvhU519xKwCLtOuHThVTkEpezhKwqCShbt7rr39IS5GzsncVb4gl4Y/0X
mZ4SiP8va2t3ZxwBPZcmBLYz1SFXNAfjN2MJyCcqMnpWGvs9G8VvffcIuCi/
zbDODftBDfEGmzDyPPm6fvdN1nrk64+2yH++RcBs65+GqXsacLz9JW0N7ci4
pS41Wt9qQu54a/83C1ky735+f757aztyJhO9qN7bczB3a7azh3cP8jhhqUmx
rFkoUa8a/WhHP47zMsood94MtGL7FPvjwiDyR3Gcp92cpuGjDF+d+OZR5B0Z
XRPdG6fgrYSVWNHTdOT7/3gYJ6R+gvNFuTyfxMaR250+/M1rdBzKOQQnrxET
yOc/spx1EhmDXyhtKdU+k8hnKDbFmoJjsC2Sn+3ULeySvzkLRXjG4BZbwev9
gdi1Gt1im37QYQIYCJiIwS5+r4btxwAdrhty/jP8DPv87Hz2t0Q67K1R6jn8
EXu35wmfvRvp8PmVL3x1mlPIjeMKl+u46NDQpevU5xPYb7zWUDdgpsMQs6zr
Ww2xD4Qd5LVbpMHQfp4cewvs0jt6OL1f0yCzxza54SvYl3Js/pUPo0GbqWUx
xSzsrq7vI1P8abDi0QHevc+wL74xesB+jRxvUjqy6yXDPEeGVfodaFDBQVZ2
Uw12EY75tHPHaHDkyB6Txl7sCzlKaWUHadD852Hd7EHsjn/fuy6gRINvO07+
HUrDfkGYs7dWkgaPBe931CCwVzG5GG/8iwblHe73bvkP+4a0y0U2AjS4W6dX
hFjBrtevvlrISYN0OZVDNb+xuwzPbGdiosGqW8uq4SzTyP8PzlL9uw==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$24548#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$24590#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {-0.5, -0.7504326376297547, 
             0.43226248551088636`}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {-0.5, -0.7504326376297547, 0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {-0.5, -0.7504326376297547, 
            0.}, {-0.5, -0.7504326376297547, 0.43226248551088636`}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.5, -0.7504326376297547, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.5, -0.7504326376297547, 
          0.43226248551088636`}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.4256026492436812, 0.7949915273615882, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.2954225877990557, -0.44338950355490614`, 
          0.8462453797542667}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"1.12`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"4.12`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 1.12, 4.12], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step1: s1 and T[Ry(\[Theta]1)].s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836597509301633*^9, 3.83659752599263*^9}, 
   3.8365976789356127`*^9, 3.8366036770254707`*^9, {3.836604090034855*^9, 
   3.836604108581183*^9}, {3.83660414062013*^9, 3.8366041574490347`*^9}},
 CellLabel->
  "Out[116]=",ExpressionUUID->"ea75e6bc-09d9-4ff9-8b49-ad7f76c1c81b"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25174#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1:eJxN2Xc8ld8fAHCjQkNWJUJKGlSKRMpBGlY0pISMb6XIJiQZkWwuWlYqWZnZ
45hdyp4Z2dt1n2RFye/pj99zHn++X/f13Os8n/P5fM7nCBtbXrrFxMDAoMXI
wMDMgP4WStbXDx1zl89Z/feHgf/78+yO2R2Um2CN9Hr+PyS3Dv+k3BpqCXJz
75v/ILn8C0kJttQHIErv4FwPyd0Sy5zjQh+DvAGNzDKSP+vZteFVoSeQnGiL
jyb5Liv3Db0fn4J7y3VNtiQXcI+tvRwaBBSbZL+uI7m/ZVujYnkIuClU/bLy
L/JuhllT7UIKEPP5He1Mco8ptZz7H58DUcprjYYV5NJnNl3RDokBFhsl5Pn/
IG9Im40UrIoFlXdVKl/9Rs6yjudhYNkb0LZY685FcifKUWajgrdg5PDLt5NL
pO/1YvT7kvwBKA/re59aRH4MLhc7BaSBnKAA7P4P5BPXrtZRldPBu8KlVSsM
+RVdwc/15elAa6BK1ZyO/P1LDb3GkgxwrPpRsBoNOVR4UxqdkwUOf2wZShlD
rh/x9IXG+1ygW+8ztdyDXGZLorKAKwTy3uXTn8uQK+2fE/nDVAp0Hy7d+wCR
x3bs4R45WwpUr1q3uBYjZ7sSOJxQXwpkQqJNufKR/9k3LrfwvQxonenJrk1D
Pnx2U1XE7wrQm9JoG/ia9Pl01bY7R6uBkMBYpZo5cq+i4jPrzzQCge+SZv0/
6YTnPqiQKursAHxPozePZkwTLpos2HCe1gsEB+V1L6yhoe8d7bxexToEBr9s
1jqWP0G4MEsSoyrnKMhgVg1yER8jfMmWeiz51zi4+TtnUznTMOHJW8frnxtP
AcnM07uWA/oJ99aGC67HpoEtZdRps0gX4Xc97vYtpdHBsQkPU12RZsJ7M3eY
OH+ig0jGYdvqtcgdjtepzObRwVTwOZajY02EB0bmydWX0cHPu/eHFxOR953b
TdnXQgcjz1vVNQ8jZ1tpEraYo4M9m1+4Sso2ovhPjkw9dgQDgam9cFNYLXrO
16zgUikMnBbTN5nQRu7BuJx9WgYDFxgBQ8k25HmNLz8fBRi4cbPD5NLrr4Qz
+p4az1LHwLTGLY/9cV8Ip9N47RRvY2BOG8ZFp1YTfuOwpdoTCgY0FqVnOCoq
CZ9RiRNji8AA4PEIu+2F/DyNwcv7BQY4Qxcu555DPs09FHsvCgM7H+8zVq2t
IHzebfP9b/EY6Hd9piPTVk74Z9XQbpU8DECuOB+F0VLCpYSYw9zaMHAk2fxF
8/oCwsVMT0Rwd2DAxcyMxTUwH8UhRYAp5hsG9Apu3dzNhTzd2WpLTDf+O3nb
FfS25xFeut98p/IABnz8s1h89+YQ/km62lV4CgMsEdtfYUqZhHt2Pp09ge/z
tN43j899ziB864/xWvVpDBRn9e17rYI8U8k/5TqeR9TdL52S1konvDMgnpd3
Fl9nHk29RwUphF9sC7fbi+cv17DlW7em36F8u2ZAqxX3uw6UQovet4R/T+iQ
clzGXUzD1aYhjvDDdE7u93h+fCRy/OG9jFjCVxIuilDw/LtNy+2cyuQLwi8I
u8r+wj2pT/82d20EygP54tpX8Dxexsm5s+NjGIpbh+SYGdzzz5pValgHE77q
pFl/FK8T2qoxJczx/oR/NBBgNsP9MgfrlMldH5Q/Ty27luLe6h/WJNz/mPDF
kzNV33EPmzY8Vnr7AeGn9w5y/cTdfKs8Z3rXfcKTVKm3VnDfd807LbXhOuFz
TlEl/+qrRtoOJh5xBfh/D9/4n8AS7vJHHKX7V/4jPLl3h8cE7jUFtpW6v2wI
/6NVS2vEPYhPh7/U+iHhC+ed9NNwf7M/qS9w3p3wNImDrU9w922d/iBz1Jvw
voVZrYu4T22XkO6x8CX8rdWCXgO+noldDTNr7UIIL7/GVHYTfy9//aMFFmgv
CY9utrg3jdfL+kZ5B+ENkYQHnUngs8F9E/PPH8r7owlXW2IPNsTjQY5daCHv
6BvC7Yq5Wpp+4fEzoJuSaPGe8INvLEbW/sTAfHGJh87IR7Q+i8aca2YwcPVl
a9T6uVTCjTIfnlvC4/wyC7OXLmM64ZjU+ZZqfF9UQObLi5szCK9X47f5M46B
ccEwzQXxLMI1w67y53zHQPcNqVfjt3IJn7pvc1gBr5dygccNBoeQR1NcHpZ3
YSD+r6t6u1Ee4ZkhzUVpeH44fKpBPEU/n/AbRocx8SYMbISOMRu1CwmnWR+3
yCzHwISH7D0vJUh43vKtLdMx+Hvfwk6HfhWEf/bZKKd4GgNcgxapdhe/os/z
2+8Jw/OwwlTSLosw5LFnJHh75TDw+GVRys0O5ELuQ3w6eJ5/utYv+4B+LeHf
n2RkfRfBwJMXLm4GpnVo/Z8tHpJfg4GDltUy4o8aCHePGMq8UkQHn0uGNacb
mlD8rB102c1FBxMnYkbTBtvQOvD077E1pIGa+slWGPad8ManPtfrdCeBkc7Q
T1vRQcJ1j88OC+SOAceT/vfZXEYI37jA0mDVNwxah4scTBTH0e+/dGu/p8UA
+EEVKe9smyTcpfFcmKRrN2Be6qZHj9AI7xpVf1N9qBVE9G7DVvTphK/vMJ+8
xN4KUl4ntuqbIH/auOzUMd0CrHXeb8o2Rc455RjSkNIC5CUrbVVskfuYMcS7
HGgBHw/6j7L5IDe0dfdtxvuAyYEmgfE05IUT6wpTtzSCuKoQLo4l5IDHt27v
RAPwe+b8RmcF+Z4ecbaJ+AYwntCpE8GIEf6y3s9Ra1cDyMsRkV5iQ35xK1Ul
m7ceYJUxz6/wITerE9AcY64F46LraIayyAU2Ou2zaaWCS6W1F6qtkJ84/0Ar
K5wKHoonHii2Rd7usO0V/SoV2FNXjyY5ILfPyGu83PkZtM1JfjZ3Qd7dJebe
9b0K6J1sHKQ8RW4nQ40dHakAy3WrN+5GIs9rGb3RMAwBVOeli5cif5zaX7f1
NgRsx2a3iJYjz5ctsLw6VgIEfaqubqtE7vxDuqxkohiEOJoID1KRK8tNsh+n
F4Lzsw/qeBuQx0unLg7M54LZIB6h9T3Im9o33v7LkA5Ovt7NsIwhX+i3yONm
TQOjKx9if/xAziY4LrObPRWwFMdE9c0g/8JhNCLOlwKSvNalxM8iF3PzcJg5
kgBkWIZ5OheQe7czBLYc/wBGVPdTQheRVz9m5E0/FQ8avqmZK/9Cft+u1ea6
yjvg6eV2KGQJ+aGEzQ22hrFg+107ev1v5JLqXzcY1kaDPU4mQO0P8jdOg/xN
HZFApZJ9EpL8YKEYUwz9BVA6I64euoL8sEs99c9SBMg8YM78g+SfA4vZtdeG
g0dJzDxn/yJnBtarC/whoOPXuEI3yanbjY94XggEBnzc+nyryDck3BbhvOUL
pF00mi+SfFnIivrioTdg7/aNdSf5oT+rbPyhHoCzGlITST7OcDT3yMVHAEsY
PPeF5GsYXXVEXe1BT+7UziGS577q+iB21QxQmNsuzZFcum7/IVZDHXDd8tX3
FZI/OjG7/2gGgEuZsmWr5O/9wZKmGWkCa3UzV5ZIzqrBK3XijTXMpK6l0Eg+
KnHx+nk7J7j18HH3DpJ3XuKSSnjrBqdeqVUXkHyAo0phX8AT+HFCxTSC5HNu
S8m8hv7QrXFfljTJL+wrCq8QCYaC6jsNfpPWX9tUYMlheygstD5snEfyYuyr
WiNTBDR/227PT/ITVWdZFdqiIL+9S50XKU5Up13Uv9bEwIgz105vIvmkr+LD
vX2xkEtklSuAFIelsq/qo1vi4Bq3A6X2y6R4eMQapF0UD+OuVGlPkeJfttFA
MM0/FbYGOobeIe2v9yOd1o2v02DFng3lN0n7cV5o1NJOOx3mCJ6fu0Dav9qU
GZrrfxmwt3/BiGsaeTCH56KORxa8NC9udnCcFOefeeZ+FeVCWpK11ydSfqg4
OMvqsLUUqiolDrBB5HtCHdSar5fCmRQl8aEi5PckWmf3R5XCGxprfLIKkJ+W
uXDg6+4y+LPS0V42B/lX0U7+FolyGGawKtuVgvzU5gqPcZVKyPrem8HqBSlf
ce88+f5BNTwjsRfOmCIPZLou3J5dDUNqjsaN3kJe1sbyi2GuGo5ZsLe0GCO3
Wm49qWxVA90Oygk/1yPt34JBp8emX6D+8aUnZZqk/P8pwq5QpxZeK07aES9F
+r/UUlMseRuh9/uQJ59+obp2ZW+myNmRFqjkJcGz4x7yNV9iEqW6uuFWPeOc
oAZUx8OcJLIrIgbg5w1aG58VorovHvz2ml7hMGQXa9BVNER9gkQA55BozRiU
SnKS4DBFfQVrzVWPFsVJuBTIxeypivqQI2cUd1xVoUFtPweVGhrqW4Z3q2co
M9Phi/JXHVCynfBzRWGzhax0WD4PtPi3In8UsnNYDG/pqmP+3rb+hfoial/O
l3leOkw68MlvUzHyv8FSz44cosPuZ4Uu684ibz7ImnJOhw7DI87qMOq0El4X
s5k28pYO6U+NVjXsmwm/HGd8M1kUgwl1b+tLVFBfp1gjsS70AAZZJdvHNrAg
v0NjKrU8hMGJ6q50rUrUH/pOnTPlkMagRkl9dJk88iHbefNRZQwmqnIxnZZE
fab/XXW9YUMMVgr9TWrlqyGcYyNYKxyKQWr2acGC4UrCJ55v2T4ehkGvDxEm
u94g1155KBz/HIPJT2xKn+gjp2S1b2SJwqDrlBy7TDvqk3f735XR+4BBTuFM
3hvUcpT/bXMULuP7ivZQYehtQinKV/yzfpadGFRYKmoPbkD9vNLG11q/ujC4
f1yn6IQW8pPz3Tud8H1ef/NjUG8jOhfYqCcNGvdhcM3eUlee5hy039/bDrQP
Y/DsAcOlk62fCOeG3B4KdAzmJbXKRXag88u03MsOFTwfOfc9G5/VQc5V905S
Dc9ffMOTDEHpaYS/267599hPDA7swQarMtC5Kfq/2x3J8xgMWrM/qScrEb3f
4s57vHie/e1Tv300B53LZhX/sMfhrhTmWSaRG0s4T3ZQzm48Xyf4aTjRLWII
Pzb8bPNmvK47zGpcn7F8Tbh8d3apI+4RfC5Kplbo/Mh8/LtdF+5mFIumb1bP
CV/xLBnxwuvHf1te9yVYUwgPfa8Rh59PYd6MtgGbDTqfpvh7GHHidSt240fm
r8OBhF+qV9+thjvFrJTycASdc7X+Ro254J6aaWG+ZxSdi2XT7qbG455xSimg
ZtQD9Us2eJbEvSE5YKqp/hHh276dPz347zk0LjW2RnvUL1lqcP7rA6CQoZVD
nBmqF1WpA//6gKFp1up4FR3C6+/c+/SvD1i2qFRSNVEE/3fDgcfP/vUBIjWe
lg+u/ke4f9EPwyncizz5ozYcsCH8vkfpiTbc6xrPLbXvcyZ8umBuay7u4fvD
R+u43dFzopLajXF/dKEVe8L1jPCAi4oF4rh3Vq8P7uAMQM/xux1Lx9ffaO2i
Q4gPmrfsfRVpp4u7uKDmz4anaD4TyDQm34zHyZejabc2eEcSbmbMEGWA+26p
vT88HkYT3lFVpDGEx1vjQGOYkwyaFzE0R3xow+u9cxTf8PeDaL7kTHVTMMD7
WuPEI2eseOMJ35BZfGAVr/cvOR5ZPqV9JPy6C72SA/fg1EUn2mgq4YvfHT/x
4fsolJayXXUgjfCPD33CtuH7cUTqGM/iJJqbOeS43MyewOBSlI/j3T40l0vz
Yjdwx/e7hsT9S/epaI43PRxwn7cXgwFgn8VV5Vy0Po5z7R/wvLFdVHFOtgz5
qZ9deWl4/nlbEU/FCtCcMHfiYIVJCwZHPc4pc6eiOSSfwcJ5/Sr8fRXMGAlR
SgiP4As68vItBjdxaz8oFkPzz2WFnFzWNxgs4DmS/NsC+SagrGkZjcHCS4LG
UpnIvWje2cIvMWizF2wKl0HzVVmDFlv+QPz3tNmf4TxTRfi+i4fumuDnPfhs
bdKwHpVwHmbG82oKGJyqWGW2fYrmw811vqFZ+XQYLC+tyzaI5tXjY6+2yxhP
w9fF2ducr3USrndzWrLBbApSV0OeZriieXuHSaWwMfMETNA0bboxP4Te15n1
qnU3R+GO9LjB3P5RwlmKD94rEh6Ceyr0byfGo/m/t01BVcXzPrjm5NsJrdYp
wg/nXimgUr7BHSbO4f1+6H5hpfcbdWdgIwymyF04NIHuIzYp/Z3zs8Q9o/OR
0jRykzvbBGa1GuHg6E4BzRnksvk8LtncjXD0ck78xSXkA/OrAVuPNsBkztwv
v1lJ91870k4zn62D5aNz7kOipPupve9UIk1r4HmXIxbLesh3nF3xDDxQAwd7
8r7yGSJfp5gc4UyrhuEdzS6SJsjF95W7K1hVw26G/HaNu8g3/L7C6/WACq23
BV8RtUfeA589//ukCn7yePftlh/ySAe9BIHIMsh66/AdvkzkRWsNDwlcLYNz
j6fKPD8hr534araNowzOWDPaDuUg514nZ/zHsxRm/L7W5lWI3NeuUnRLRwm8
5H/o6dVK5C3jWx3CbQug1s7+jXtbSfdZ7I4PVkfz4W7pHpf5NuRYIUYx0s2H
c7UMsgUdyAWXgmvYFfOgvk80RbQb+UXGnd842XNgrVhDhe8A8mbz6E398RlQ
T7cl3o10H3fiW0d33/YMGHpnd0zWNPLdnm22Xf54Xfe72dNDutcz8eDSdR9J
hYPpUiJcM8ipzod+JLskQYlekX6WeeRCnNeCjYwTYasCZYFGcl8mZrvN5xPg
yhZzzeoF5GIm6w20ueNhSuIVqtEv5PaJ4aKUxDewMt+8Roh0v7lwz1KdJygW
Oop70XJI3h38qXbnRDS0vqespUy6P2069zJq3vUVjBza1KlIum9l8uOltKi8
gD87v6xkkNxl3yvhJJ4IOMUZZsxLurcdOB1TcDopBJ41b5qikvw/UVU5jslA
qLiZg4OTdC98dNY4POixLxSax2y1SH5Wgbtn3RZvuLdWf5s3yRvbxu48SHKH
tnIqyxkkF+Hq21X12BkuD77b0Ury/Hh7Y0qSNQy9cduVRnKZyPuP85KM4E9p
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25174#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25174#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25198#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25240#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25872#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
iQ7Nf6/WX6+gwv9fBplR
             "]]}, 
           Annotation[#, "Charting`Private`Tag$25914#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[-1, 2], 
               Rational[-3, 4], Rational[-1, 4] 3^Rational[1, 2]}}, {{0, 0, 
              0}, {-0.5, -0.75, -0.4330127018922193}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[-1, 2], 
               Rational[-3, 4], 0}}, {{0, 0, 0}, {-0.5, -0.75, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[-1, 2], 
              Rational[-3, 4], 0}, {
              Rational[-1, 2], 
              Rational[-3, 4], Rational[-1, 4] 3^Rational[1, 2]}}, {{0, 0, 
             0}, {-0.5, -0.75, 0}, {-0.5, -0.75, -0.4330127018922193}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[-1, 2], 
            Rational[-3, 4], 0}, {-0.5, -0.75, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[-1, 2], 
            Rational[-3, 4], Rational[-1, 4] 
            3^Rational[1, 2]}, {-0.5, -0.75, -0.4330127018922193}], {0, -1}], 
         
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{Rational[1, 4] 13^Rational[1, 2] 
            Cos[Rational[1, 2] (Pi + ArcTan[
                 Rational[3, 2]])], Rational[1, 4] 13^Rational[1, 2] 
            Sin[Rational[1, 2] (Pi + ArcTan[
                 Rational[3, 2]])], 0}, {-0.4253269863099454, 
            0.7947307435329902, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{(-2) 13^Rational[-1, 2] 
            Sin[Rational[1, 2] ArcCos[Rational[-1, 4] 3^Rational[1, 2]]], (-3)
              13^Rational[-1, 2] 
            Sin[Rational[1, 2] ArcCos[Rational[-1, 4] 3^Rational[1, 2]]], 
            Cos[
            Rational[1, 2] 
             ArcCos[Rational[-1, 4] 
               3^Rational[1, 2]]]}, {-0.4695354007940221, -0.7043031011910331,
            0.5324412165243131}], {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.02`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"4.12`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.02, 4.12], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836597509301633*^9, 3.83659752599263*^9}, 
   3.8365976789356127`*^9, 3.8366036770254707`*^9, {3.836604090034855*^9, 
   3.836604108581183*^9}, {3.83660414062013*^9, 3.8366041579389467`*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"213f88fb-f402-4e0c-94a9-0a40a07643a3"]
}, Open  ]],

Cell["Trying to rotate zhat, s12 by theta1, phi1", "Text",
 CellChangeTimes->{{3.836595467121703*^9, 3.8365954796108217`*^9}, 
   3.836596411416246*^9},ExpressionUUID->"59d7f155-5cdc-465f-b904-\
67d7d1117ac5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"makePlot", "[", 
  RowBox[{
  "trues1", ",", " ", "trues2", ",", " ", 
   "\"\<Expected s1 s2 and {\[Theta]12, \[Phi]12}\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.001", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}], ",", " ", 
   "\"\<Step0: zhat and s12\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "0.001", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step1: Ry(\[Theta]1).zhat and Ry(\[Theta]1).s12\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Phi]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "0.001", ",", "0.99"}], "}"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Phi]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step2: Step1: Rz(\[Phi]1).Ry(\[Theta]1).zhat and Rz(\[Phi]1).Ry(\
\[Theta]1).s12\>\""}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.836593716726535*^9, 3.83659379059923*^9}, {
  3.8365946645695753`*^9, 3.836594696981983*^9}, {3.836594776169248*^9, 
  3.836594780137088*^9}, {3.836594811519808*^9, 3.836594831612536*^9}, {
  3.83659517045779*^9, 3.836595170717238*^9}, {3.8365962163165417`*^9, 
  3.83659625979986*^9}, {3.8365963633812113`*^9, 3.8365963682033854`*^9}, {
  3.8365964938350687`*^9, 3.836596528470729*^9}, {3.836597466599279*^9, 
  3.8365974859786367`*^9}, {3.836602244549303*^9, 3.836602318260977*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"1b287da8-2405-44a1-8989-ba1a12d1d1d7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$26836#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$26836#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$26836#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxF1Hk0lGsYAHBKwp2iRSiRFJWKRErpSaFbykSaTuK6DaWk1JWyJMaWXGTJ
kpK9ezKWEIooIvvSRov0jRiGGR+RfXQ/59z7vs85zz+/P553e55XhelscXqO
iIgIk8q5VM78mg0ScmaeLg74wdgt8l+M+Jh1zfriKqeGMpou/O+SPTsjZv1S
icaHcJox8jrtGvFZ97+Xr1wRSUe+/vSw0QzlmkX1d91px5C7epeaCikX0o/8
iqBbIbfxU1sxTbmD2SG9jEhb5PePfFgyQbkZW0noRDuNfIvyCoMxyi17vJ6N
Zzkg7+D82vyTcnejzkP+dEfk8hYPnQYp133nx42PdEa+44QDvYvygG2teUya
K/JlhumlxOx5L5zMUre5inxqn+9IO+XtGRtZ/KxryC8UKDx/T3nYeCzble6B
fFr2RV455dwN7+oDIr2Ru/n0G0RQHpg/nHCYFoA8dlppWzDl2jIz1tlPsF9f
/2PUl/LVc91GF9oEIletufbWZdblNz1pzrqJPOW26JDF7DuKlerT6cHIa/UU
G8QpNxf3cjWOvI28Yhlv0miGBIY133IuLRq5oqTBR13Kz42kvjNywC6ie+OK
GuXhdW/VAiuwry6q4YlTPlWWs1/CPQZ52xCrulJIQkipgq0UNxb5nZOpdB3K
s8dM9s57GY9ceSIrqnOKhMboy3a9O5KQjx4fGfEcJ8HDvFneVJCOfNv1/Npz
JAl7ksfczH9/jHwrrTBC9jvVJ8pzJm56FSB/JghI63hDgj6pr6uqUoJ8SCUr
TaeMBBXGBD9T6yXys/LCsKk0EjbJcHRo818h9wr/WWocREJtfrZuY2MVcmZW
od/kORK0mB5mNswa5OEill10YxJcxQzmZmvUI7duCTnqp0zVB/N1rIpG5KwQ
jbZVYwPg4SbbFbqmBbm23wbZ+OoBmPNhX8wZ1htcx9/Rtj52AM48G3carHyL
nJOaJLXjzwHIOxLsyVB5j/xn3K3F3LUDUKhb9XfHlQ94TtvsYANfANNNioy1
Oa3Ir35lnRp4JIAEe5MlRqIfkb9skjhUdlYAOsu3n1XV/4Rcqqk5zk1JAFLs
lhKJ4M/IrWgh8r1v+NAi7D9zo+ULvudgObbhTT5oSzZZDAnbkfexHcratPnA
M/ZI2mXYgfvkS+/lBqIfnO97xSee/4b80mSuvW1oP7yXMEy0MyGQZ8i2pIVp
9oNpbkquCQd73PSC+sH3fbD7QO1TnjMHecsi/ckLzn2wsaE9+aREJ3Kddtpy
T4k+CF/PiHp9D3vnXYZ+eDoP1JLV6bqq35HHHGPzNuvxoKBO1Kc8H3vH/vRy
48ZeYLX7OP61vQuf93RfWwOzF8JCPMZtnmKfeeh/1YrfA4mmeV9z93QjJzSC
atU9e6B6pd4gqxR7saanTqSQC0tylrir7eUiN6qtXPkogAvWdbJFLiXY7R8P
+WYu4ELMFUuGQLMHebx39ouvQd1A/Grd7MbG7jLezHWX6oZ5asWDcoq9yAu8
ouL7bnSBxrqDJeujsHs9zl1wfPg7fCT3HJsR4+H/c5g4yrv4HXLW2l+2c8JO
izhRMdLeCYYpRJrDJ+xXRJ9vuGXRCQ8eHHiuv6sPefPgQM63Gg7EleevORyP
fZo/IWBu4UCQv5fCRiF2QTFxXy6FANuCRXX2jH7knzN8E6MSCRjlerryj2O3
r1x5QzqBgIT7qd0uJ7CHGR1rFo8jwOSo0lJfa+w/djIrhkMJUDSyf3SPiX18
RQn52p0ATrBZ3quL2NO1ckMtzKl16++q9QRiFxMsXF5nRkDgHQs7hyDsZb1L
/QwPEVDabGvfcwv7qmjNfs39BJQlOOZzQ7CHRu5Y+psBAaxcrn9nJHaFFOem
4nUEJG1M/dH0AHsd0aWupUbAHWUlF9Mk7D+trf5IVyXAoOxZUXUy9n/krJm3
lQjIUTIJfZGGPZVvWX1qKQFWZ0+cy8zArnn+jGTrImqfud5S6pnYK/emrTso
TYDoSKZzchZ2R5mSmS1SBFhHSQdGP8bOk0ksSJ9PQOut3XrSedjNvKsOKMwj
YJDtkBmUjz2Es7UkZA4BKdU3u0ULsHNKSUlqmsCOfa/ToxD7v3oHPdE=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$26860#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$26902#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHGYUAHCJrqUxi2xIpBFBIolgWHY1UZFFZUlpsqHum5S1oaLWEiKC
SZO6Qh3BlIkjdce5bq2k47asrquzSaodUSHrlhD0+/7wfX0z75/fvHkzb96b
p+YdzPTbLyEhYQNSUmIvFk2NLNYXbsvOm+yJZYLz7u6u2DRbrYNl2yJjuudD
iqxt6ILs0lnrFmXkmTW6m9DDCWE2vCsayPMdf1mDfrxq8JRVy1nk2eply9Ab
6rQ0BDQd5OerrMXQP4s4nFrppIc87FP/N9D9XGMTaWMGyEfHyKPQ5bwd7jH4
F5AXu47nQS/Z+pcYOGeOXL7/8HXof/OO1sV8ZY18cos0vwNc9cgZ2sO8q8gF
lpYc6G+85Neqxq8jX1UkvdoG3vHgVD3Z0QE5SaGdAl0j2tRFtccZuUxcbdRH
4LnxW56EbTc8l6xcwRZwCztRZUarJ/KKInrbJnDfKfakoos38tLsyJ4PwL+w
b+YELPsg584olL4HbjXnIO1W4YecMeBzfwM4Q/bn7nbGt8h/fLFIXYd77FPi
dBADkHvFiAWrwO0S01PTOljIqcXlt1aA6x6QmBx1YCN/rxQtWgJOoC9IN5CD
kG/xHtssAqest9+QrA1GrppZGP8OuGfKjIDb/B1yNyP5inngjgZnSyYzQpCn
/zQsmoN3qHNaIcTnFvLU+8yRWeBdzYb+jmahyPvFTSMzwHNsrzhwDn6PvCyp
sPsf4Gn1jZvRL7Hf7LWInAY+l+KRIGwNQy6k1Fx8DVx6gFPq85CD/BuN6lYR
8BWT4Wd0VjjyqX152n8Cn605FCBjyUWeJ+dUPwGcOJTfRiRHIO8qihELgSd8
yV+wX8JOtCVYjAJX8FBpnfo1Et9tddajYeDGA58YWyXeRh56OTFpELhWOi+N
GBCFvPXE86d9wKmbqz98pEUjtyRfYHcDv0bVYtKV7iDXOZFw7QVwvSDF1rYZ
7MVtvfq/Ae98UCJUq4tBnmxG57UDn5Fmugcy7uI+PWHeLcBH6ykaf1Vjf8ds
rGoEnlme2b+jGot8Odx5tRb4prbAWiEZe3pfl2818N5LVJXOVeyCt7Ih5cAb
R1j8Q773kBNMy8ueAn/Z8ERIGMB+jjo4XQh86I8b9W/145C7h3bX5ANXCzUM
jijAPmW8VZsLnB9FuvuEGI9ck7BWAN2iqVEtWAa7pN5CMnTaottz4wPY2WUT
LOiG9qVSQtL/6il56tCllgySiErYLyYKH+XAf+VyJId9EvsSWyH4MXCek0od
jY79sv+4K/T8jSI7SXPsOr/nWkNXTjm3zrfAXl6oqgmdVUY9H8DAHrhCFmUD
F6eYdOZ+jX1XVGUNXX3/sX4Jd+wuy86fQ7fVTWcPemBn+BM0oWcxZUg5XtgF
XPt90M/ELV818MNeqT3NywJeF9s05sfGnmQTWwzdnH2aSwnCvs0/ng7dyDZD
eTcYe8oHuyDo4o2brtmh2J8VLLhAj+uc2PYNw+5dGm8F/dgds3z9cOzF5KNG
0IsNyi/tcLFzX1WehC71+uB0XyT2/wDyIY+R
             "]]}, 
           Annotation[#, "Charting`Private`Tag$27534#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
8A==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$27576#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0nk41HkcB/BxC/tQudJax1SUYlpLcvRRS5EUSQ9alhwtheRqNbLM0FSu
nEN51lmukrWFUWwqlUhu89O4xpj51T5bUa0R7c4f+3y/+3me9z+vvz6XwfHI
w8HSFArFQxIZSTZTiLuORSS0O58z33X8F6D8V/St/P32EqfITPRUC7GXDsU1
WUs8uzTDeW14MvKidjtpM4lbXnAmhfEpyJ01XAo0JG4hG1GTlcFE7vVrOJtg
k8BkWIeMtbCQw7CZnIPENa5bu1VeyEZ+253FzCsg4ePJnL2tPDbyW6Fy4ykS
5w0Z+shsKkI+phPz5bTEPQ+l2rhGYK8d3VR/QOKHmUnBU1+w23IE5VISzz6S
sldW/ypyWujrlYB8Esx0Mtt3Hy9BPptienI5l4TJ6Wvd+xZKkU/Fibays0mo
1zKrMYmvQp7m+z5LnyWZK0hsRvBvIp+hrhQbJJLQ+Zuu2aXVTchlTxVqbo8g
4XRYVsYxVjNyBs+wMNyXhHDHmMOHbrchjx+1rNzuREKFOTm/rPkH7p+pTNjT
SMgaKBb6OXcit6E1mJpokUCKmbmfPB4hTwiSNVpaFAHF9qbYgtWFfB+79s0X
rgjyHJa0ovOeIp8oX14v2yqC4hNNxj253cg94znLHjki+BC8o/pcWw/yrxPe
1jFPiiDJVKVKs+0F8i2PI0MZu0Tw0FPaTXz6JfLlB6GRAaoiUL7V8do3sR95
Gy12S9+UEPoy1Ry7YgeQ6z+TKYuvE8K8TUqzVPIgcq2H0VbK8ULw33uH6nB2
CHlJdHN2kI0QWGFB4qbkYeRqshyOeGUOzpd8GqlljCA/wjOnGnfOwTC/z3Y8
ahT/2/0Ej7zzc0B5+eaqS9QYcmXtnxQ+2s6BSsi3vcq+XOSZDQMqTksCSPfX
ME/aTSBXvJicfqxBAGrrBK02luPIrcb9m1edEABtkuN5TesV7n9fyM61mgKo
enLGiK7Iw3chxNMyj2bh3aLKSNh77JTnJR8tYmchMjP3YNiTCeR/BVSkuuvO
wkrcareBuknk/S4GdvLP+CAl77DcsWsKeXbXjznuMXz4IbJMOFCB/QJT8ExP
kw8thpffXladRq4X5GVHvTcDn/2uH9h2Bnu0EbF01GsGRPJXGinj2ItKtOU0
xNOg3NE8Mmk9g5ygC+51F03DoAuz8V0BdoZxd7I3bRo2Wt+NKV7ETr0xTlfo
mYKzG5Syqtz5yC27Cs86+U5B6g1GU08DdqW8HVXreJOQMT9LHVw1izzcvlFb
TnkSvD+n/nztGPZ0q46ZNOoEqJQ/p79qxO66SIuSd+LBmJFfuRpFgPyx987J
zvBXsOfogk/a/v/5/WXbksRx6LZ34fSysau/WJimFxNAL51Kj5vE3hu16rtf
CgiI/dP7af0UdrttbFdGDgHaC4eGZ6ax5w3vGWVdIkBh9kbgwVnsKpEcxysJ
BPR7dLhTSewpwaUFhT4EWNS6Rj2ax87h9XyfoENAXZJ8PV9uDu+h/1x+nCYB
1XEGa9QVsNeu/b3hzBoC8lNOODsoYr9dPWMXpkQAoz3MpFIJe4uVUefRJS4k
GijcD1DFzrz4NGojwQWnxkD1IW3sxOOv3L4Z4YJGpVS6lA520A3+W3OAC/oR
5UOm67F7+p8qU+jmglnazBhLFzvHqDdwrpULWX2aN60Nsettzr3Mu8MFOUZq
fQgVe/doA32okQtH1Pn0nA3Y72Wqtj2o4QJt3D+b3IRd+kGgYksVF7S06IPq
xtgLP9D0bpVxgWFHF8Jm7OyOpH8qSrhQPODXE7YFe3mLV01RERdEPgYp+SbY
/wWePpxF
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28208#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxV1gs0lGkYB/ARKxHlmshtRWsTRbqgnkqL7ZCKLcUShUNtaCs1Kkq51CpS
tk1aSZkUG8clEkpIlDFjXGfmU7Qomy5aVox1zs7zvme/c+bMmd+Z+b73e97n
/3xj5B+6JWAai8UKmHrJsvDgQo6LZz+7uAtQejP1V6pu4ILdMwWR1Vnq6kf+
3pmbwoXqpnDxfF/qyaoxgTwhF5zSLc22WFHfvFDb/rhJM8Ra7J58IEddLyKs
Le+nZuiyzOPsau0kLre2fIl/UTNUNBjs35BN/Q3rnlPqeDMobLbJC4+g3tl8
Ye73DjzwKWgo7HSkfr3J5c7hBB68Fmv1xGpS99lxUM64iQfZw7+mRfR0EE8C
v8WOGnzgu6g75t2j7vh08epuTz6Y+8e6mR+jrnRXtGboKh8+JOt9+8mZ+tf9
zm7h3XyILzFzldOgXsF2PrXbuAUW3NC08RO3Ey+XKZLUBrTAmz1eu5Q41NPs
I16mZrdAaPoRH7lw6svCL7nz+lvg6Nr+fNeV1AcL1kRHmAmgq0b5XT+LervS
q9RTwQJ4XGHNaatrI14Yt6BhhCMA/dhItu456uqGqj809QlA8z5PttidekLC
RNgM01ZQSOzr42hTD35Z7Ju1qxVCVPWaPgtbiTfaRQVey2gFfEfH74VIf4eO
58XroGtJ14HrQsd1432g4322Se8bHeuCdULHOi6X1hV9n7TuuA/ouE+4b+i4
rw+l+4yOfWAs7Qv0j9K+UZT2ETr2GfYdOvYl9ik69jH2NXqvtO8xB+iYE8wN
qb80V5gzdMwh5hJdKM0t5hgdc465R8e5gHMCHeeIhnSuoNtL5w7OIfT/zynq
psVb6r90d0F7HjdlJKSJ+PaqExsLFYWw+Xalt7LgBfEXarNcblgLYWDCOum7
1dSf5Dam1XkJ4bL18+CsW8+J7zVfpWcYI4Rp4vULLVSoLxKnFd25LYTPX22a
13egkc6l4l634CYh1AZGn+F3NhA/oykUbhsWQtoJk/oRoN7jp+V+SFsEEXGL
lnhmPSN+KWoyr9pOBFwdeaN/plMfnPPq42ofEVQPHB0Xh9QTn1/6zrQvSgRs
owxzledPiW9tWLf9QYYIWOXXDM5aUO/dMZReViUCndsc5x3n6+gcvj+p0suI
YBX/hUH0UC3x0LdRjcskIgiS6TGScaPeOnlyPF9XDF2p27gvc2uI6xiaNXis
EMOFJQb5pjOpf0q4GaLvIQaXb37Z2BL8hLjEY726SqgY3AYslw/VVhMfVQ6T
NU4QQ7xt2USkMfUPJiVR3pliUPZuXxEV9Zj4fptmXmnZlKtoxEx0PiLupp7l
assTwyC7gP3FhrpmpbOTqH9qnfIpj44lVRHv1p+tlykRw5Xp88ZUBZX0eZEU
ZxWvzgDn+q07DvEVxLU3HvtwbgEDYSXJQ7/ZPqTrz5J7VmTLwF4DnrH+4APi
0Sy21bgLA2Oe6+52XC0jrlYXm+3nw4D/bN+PApdSWp8ZJndf72PgOFs2YN54
Cc2vwo36uOMM5CSYHC7OKSYedvLWeadEBnQkyVm5nkXEvXstL85PY4DtzglS
ki8k/od9+s/6nClP1HLoKCggrqiYy11ayMCV1xfLDX3ziU/riPYIqmSg2+v6
j28V79HrFv6eV1TPQLvnocDTe3OJ1waNXjTgM3Bgm33azsc5xL1SeqqzuhgY
nTMeFTmHQ5xzwUSyvoeBw3Nj1gzsuUncZen7maw3DFy2iFR+WJlJ6+PQWykY
YiA6pVtXUT2D/t/4U+2vmmEGDOuHnOsarhDXrZGEcUcZYA3H1ZaGXSJ+ena6
xecvU9f1HFmkpplEn9euW2ctlTDwXk0i8y78NPFNY/KyiZMMVI2x1ez2HyT+
39Et/Zxkj/IvKYwjzQ==
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 0}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999875000260416, 0.004999979166692708, 0}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7070714261421149, 0.007070949961324531, 
          0.7071067811865475}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4330127018922193, 0.25, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6967856156337403, 0.39305191240586723`, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Expected s1 s2 and {\[Theta]12, \[Phi]12}\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594782517227*^9, {3.836594815072386*^9, 3.8365948330559473`*^9}, 
   3.836595171799533*^9, 3.836595491988694*^9, {3.836596238414459*^9, 
   3.8365962605017843`*^9}, 3.836596368804096*^9, 3.83659653004524*^9, 
   3.836596635696518*^9, 3.836596807846525*^9, 3.836596889740795*^9, 
   3.83659753123298*^9, 3.836602232249907*^9, 3.836602378381898*^9, 
   3.836602410615973*^9, 3.836603694097663*^9, {3.8366040913522997`*^9, 
   3.836604108603342*^9}, {3.836604140652053*^9, 3.8366041582890387`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"6ae4fd58-f5c9-499b-8c36-a3523d09c70d"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28296#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28296#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28296#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
0QzAnQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28320#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
u/Ua5Tq0/wcz9JtO
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28362#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
hvdRuj3u/wfF2WI6
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28879#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwV0ns4lPkXAHBKhUaptKlEukhqTYWV2eqkRbsRJY1fIbuDqFW23FmXcSsl
aXSRlBLbZlzCCokTEYPcbxnqHZd5XYYhl8jt9zrPc/75POf5nnOe81VluZg7
LJKQkGBRuZjK9Lnc1aFfjQ5tYn9B3y+nCufmF0IMq0udqwpp24F2RuFUBWMf
jgWadi/4X/m7mqJoOvA4mRmSwDiCMuTPdxY85FGWSjEHQE/+AX6xNMaKfeVL
F5yeU/nQm2YIgrxih0iGOe50GDWYo3zW7MT8HbNjMDP+Y9VuHhPdAwqMZyl3
NDXRTeaYgeSvGssrLa3QJlht4wzlplzlWWfaaSjSTPIOZrAw7kTTminKLUi/
vMlUS2hTsjCqZ9vjXpWNB79R7m3QaRJidhZS0kLFm3nn8bNgXnOccp2GYGEs
xxYSWpPLCiz/REXzf5yHKQ/9qTmTRXMAbdljUT6Mq6h3xtGse2HfS1apO2zO
A9fDc6/qOVf8QT+pgKC8PXk3W5TqCDYWmzPK2G44/UvQWDvlkZMPuO5mF6HP
Q9JAgeeBl7LXv22kXKjRUBnKcYGeoapArqUvzqzFzCLKw7JGHx+nuUOWhqup
EyMIvQIHDt6hfJ/8nHXaf+6wt+2hEqMqCB/MKP90g/Iti70mVth4QKvP/orl
54Lx751fJ4IWXPHH/2pSPcF8mwjT2CG4tdyz3nXhjlIFDDMzHxjViZ76Wh6G
CbclR8wpP7nUz92QEwCV61fzXC1vIk9XqWop5UxrkcViWijEHN8/tYPBweIf
+r4bzInhwtjzBgPHUGjT2hZPD+egkszBVh3Koyrq1cKKQ8Hb3VpFt5WDEjr+
bmqUTxemH5X2DoNseXqKoUc0bskp71tKeUTBeltZ4TWYEJT1/J55F1tG2GUl
s2JI+2Z0ZMm7G3C7ZYvJbY0HeNfquZk25R/vXbHr1YuCMSmnwLINcagylRrd
OS0Gn5M1isaD92BeV0zXn03ACcuxMd9JMRx+9s3r5K9PweFukWaBVgr+9HcW
74KY+icqi6au+SXBmfpVDM+4TNSivb6ztksMDDFDZ6sqF6xrvH9P9s/BvMHQ
xM91YlBlTolS9rwCuoxmB0/2LY6opiZqF4rhR3mBNm1ZFrwvl/d09XmHToqz
kdOJYuBlpel8/JgNw2ZWdtOCYvSLGi8wvC6GPSwfUxtWLvi/H29crlyKrNTX
wd8viMFd6uDitF35MDp1IK7yWhlGSVh0mxlS78NJdXZxAaTfZITVlfLQujbi
VLAKta/X2u5b296B35vlhyvHK5Edsatl87chWNT0y/3z7CIgv7BCF5tX475g
jbWxZUNwPm/SebikGLa2e8tq6deidchF28oHQ5B54oYvU7UE/jU51zNwuQ4F
z5/K6v0+BK91Sm9+disFBVMpwcTdehyPCV8t3D4EM9VKzO3pH8C3zq10S1ID
urfYgYZoEB7bG60xkCyHo1O3m8d4jejRwf5j6OUgaG/Y77SVwYMI+pbLfa1N
+K5a2qTQaRBkubX50jcq4EX4Otvq6WaUra6J8VIehNrZgfP+tZWgnnf/2LUf
WvEsLUKxt04E+2SqzUdmqyBVJGf4YOMndLqxjqt/TQR9hj5PD+hXQ7L3I3uO
Vhv2cx0LW/aJwCXOLzb+zxoo2RjhNq3DRxV+75UqYgAapfXj7Yxq4Qlzvtph
Tzv+9T3D3vbWABhnJGQYCWrh0KciH+6BDkxeW5sYSR+AQ7/xcvtc6uDI6wnr
PK3PGDMjVznc2A+7q9qfWUnXgxVdTq/k5y9Yu4rx/ZJLP0TtZEZ/eFQP3p65
cxGbCNRup23wle4HtWc7zHS2NsDxYY38Zg6BnQ+ZjKikPsiukAwsymqAfzt6
TZbIC/D+aW6fpm4fsNsDL17d3wj01/GHxEEC/Hw0qcjwYy9ERvhM2uQ2Qluu
m3vOiAD7Hfpbqli9EG+c2ZFxuAlcVJ+9KHPsxLl/QjzOikgo26Q7zC5ogv9k
Vkx8buhEYtd13g5fEtakr/FWO9IMVwfKNQuNuvAN3VebMysE64q1Oa75zRD9
0FyhMr0LDXglm16GCuG+mwVzkN4CXbc/9LxU6Eb7VyNBKXJCIOabNb24LcD3
+ifiRUA3xgakYcf1Hlii9mZ4nVIrqKe63Nsj6EbXyRqht2wP7FI/lr8zuhUa
4zvum/7ag9l+0bH9/t3QKj58ek7qE5yIVFvXldyDfq8y5CxHuyB9u/0VO+dP
8JStsPiylBAvjRKn+i53gX4Ckej4iaofUtVrYQmRdudM8Vh7Jzx58ttbxoE2
yJ6RETjnCtFN8q1GuHknxBRlbTse2wazcWr8bhkSa4aH0r+UC+B6iN/63bNt
4D8dyAuxJXFGNDXI2isA2+xVFfZMPgzrxzryUkgcfEPErUsgYELo6y6y5MMG
1fyHSmkktiUHxUfHE/A47nmP6xk+jE2Fx7ikk2hfssl/5WMCjE4pKwRZ88Fd
WW1GIZPESIPTNUtjCFAysH/5iMWHjq/LrGxySPz6M6t49BYBghumme8v86Fm
/4hbdxGJkxvzxR+8qb6VD9XIMD684zgvqWomMWlPxi3zkwSE3TW3c7zOB+PE
0jLFVhKlBldsqDAloKDG1p4M58OrjCtMh08kFvYqBOubEFD4+GKWMIIPUX45
rbN8Ejffow/QjxLAzhCGdHL4UL6Z+9duAYm3OHoKyw8S8HT386/VT/iw7FDh
QMAAiesTXKrfqBNwV0XZ1fgpNb/GxBWeiMQKonvHHjUCDhbm5ZQ948PlAxYl
q4dIHLc+ey5pKwHpyka3MJEPli88PyYOk/hinTXrtjIBZ53OXEhJ5kPdC7kr
H8ZJfC6yKPtDgZozI0B2RwoflrxX/9+KbyTS/zwv07yKAMmxFJdnqXwILTq1
nDlJYsmRRPVjKwmwjl4Zdu8VVX+iuqn7O4kX5fPn9soS0Bx+SHdlJh/EFoqD
u2ZI7JOPz05aRsAw1zHlehYfvqk51l6dJdE0oPS39UsISCi71iOZzYcUydyA
vDkSIwRa+RGLCLDjPur0ec0HOVXp6fl5EgUFYhkJCQL+D4yV/ZU=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$28921#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 
              0.5}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 0}}, {{0, 0, 0}, {
              0.4330127018922193, -0.75, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0.001, 0.001, 1}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0.001, 0.001, 0}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[{{0, 0, 0}, {0.001, 0.001, 0}, {0.001, 0.001, 1}}], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 
              Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 0}, {
             0.4330127018922193, -0.75, 0.5}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 1}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0013065629648763765`, 0.000541196100146197, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.03534060950936697, 0.03534060950936696, 
          0.9987502603949663}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 0}, {0.4330127018922193, -0.75, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 
            Rational[1, 2]}, {0.4330127018922193, -0.75, 0.5}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[-3, 4], Rational[1, 4] 3^Rational[1, 2], 0}, {-0.75, 
            0.4330127018922193, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2], Rational[1, 2] 
            3^Rational[1, 2]}, {0.25, -0.4330127018922193, 
           0.8660254037844386}], {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 0.1, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Step0: zhat and s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594782517227*^9, {3.836594815072386*^9, 3.8365948330559473`*^9}, 
   3.836595171799533*^9, 3.836595491988694*^9, {3.836596238414459*^9, 
   3.8365962605017843`*^9}, 3.836596368804096*^9, 3.83659653004524*^9, 
   3.836596635696518*^9, 3.836596807846525*^9, 3.836596889740795*^9, 
   3.83659753123298*^9, 3.836602232249907*^9, 3.836602378381898*^9, 
   3.836602410615973*^9, 3.836603694097663*^9, {3.8366040913522997`*^9, 
   3.836604108603342*^9}, {3.836604140652053*^9, 3.8366041585381536`*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"9d7d151f-1e1c-4d3d-874b-5c09989e0bf1"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$29503#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$29503#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$29503#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0WkwHGYYB/AlZdeZxIaEpkRok86QZSlFaptdE+KOVgURda+jlmwci2Wd
E6wkaiTBBq3mMHFLKKa7ljgyTFIsiaQYTVyx6qgkSJa+b6d93zwz/y+/eT78
53n0A1keIfIEAsEFZBfISLtlDoGwQivI+no8RVX6FeG/YcteZkM33n2F7tau
RPvf63ukWdA3mcmdTu3ayHPIbpnQzX08lludDJC/nVVJh57GqpCdav8c+dwA
Pw26UbHNgRELY+TVeye40Kc5NO06bxPkt0SLHOhW3Hmq5ZgZct5NMQv6XNfx
oFOPrXGfsKpvoQeXbtVFvmJgv9FNgR6x03KZ5+yI/AIzdWNnZ5nWuskT5wnc
kRfW38+AfvJpZln9k2+QizjcxW3gOqkbCfvOeCE3YxnRoAcNztsc6vdBbvlc
P1cGvEgh/6yizA850y+15j1w0s/W1lc7vkd+9K+G/nfAhyrD2Fq+gdifLUi2
gDfJq+lGrAUh5+um398ETvj7M6FfTQjyya3hog3gN3xX8oQOYcjJ8/70t8CH
JeoOImI4cvtr56ZeA6eIpDFFwgjkVxp10taB0z26eiVeUchVtaQLa8AP7bFR
aCFHI1+vJvmswp5fVsR81MRCrsfRKFwGrmtI9ee0xSCfVk77dQl46flaq2fF
schXz9BeLQInqzHvxgadRy60Fk8sAD/I7lbyprORW/x4ZHIOeP6TuzvxGheQ
b+pqSGaAGz7orU6dxB5l35zzAniZf4PNWEcccu1yPadp4ILT/NDgvHjkFzmf
9E8C722yiaNHJCAvpitb/QF8brDZXPlkIvJKm77OceAK2W8ukcgc5PltS+/G
gDcMRfd9t4o90pntLgHOaMkte96ZhFxyVaF8CDjr5seHHfnJyBc1t0oeAT97
RDmdFJ6C/OWYyb0B4J40YqrMgov8dN3txH7gpsEFrnStVOTHflrz6wH+MMVF
+Nss9lgDS9su2J9SOHW4OQ25Eb+uWwj8GGNhNtKBh3z89Z/RHcD7h4zrp+ux
8wMMOlqBx9rb+u7opSN3DOsj3ANuYKA5ufcSdlUBJbYBuDd/tFm0jt1QwOHW
AO9RbwzXDM5AXvt4f+sd+Pcpd7biIPaDt6yWfwFe2BvpKTXNRP6p2ExYCXyt
/yk5qRK7LjNMJAA+ZbrvaBUxC/mwSUAt9MDsgYcsJewHfL3LoAeNpkceV8Hu
IbFLgM6NWKwbVcfO9yZRoF8MbfqCpIWdVH+ivAz4tcLdjB8MsZvncJNLgfP2
KPpZnsC+ymOEQ4/vFWzvYmC3nSB6QZfFUSt/t8Oe155Phc4U+7wId8A+Q+Qt
lADXJ1aEC9yw1y7peEHvsHoTJ3cOO0uuzw76Ojdl/yN/7N3xsVToju1ybaUB
2LVzxGr/7usovTcL+eAOlq4PrgNv5KhkhEZ9cGevpUboLim5BmbR2G+P51VA
d41X7NlhYVeQFydB13WXEUvY2PPveDOhiygJ1SFx2KsaVjyhByuuOFITsDvr
5DCgb46ESbcTsWfNaJtCD70+WTCQhP0fZUV9KQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$29527#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
mYw=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$29569#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
Nj/Plgmwzq1ZM7eO5rH/AytAeNk=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$30201#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwV1mk4VVsYB3BFpYi6SJJQaTBLwynylim5JCFDhgwVXaRCiEIkY5SZFNJg
TiikV8ZL4SZDHB3nFM5xohMlQ+Eu+3nWl9+Hvdd+n//67y3tcOHEmaVcXFyP
yOImy6XymHnvHQuNiWzXb2OODq+nFxYvDijC+aKciL2wbeuk9n3aIZzOWZ+y
6CZSBw97RujCnhiqrh/tOB6/5+I0T3w/sqJamMdh5fLaaw8NLfHN2IT9H+Kp
of5RVhEnISJ5euU52mmkPCyNmyFecEzi94i8NfjKrHP+LXIG33YU/pgk/lL7
iNUr5mk4qZ+mcdvQBTGWETZOnCbkU3U04iz0XlHxtKJ5YJ7KuO4w8e43z9Nu
n3KB6w6lmltmL+ESm7aLA8RnMmkfO+VdId1dMemriBd6Phls6yF+I7o+tpDp
AVZ2b9P8DH3xiEu1ZCNxrT8XfVQivIH2H5eBHi0Qj+7btjGF+AmhR7T/Jq4A
8/Dfq2VHg3DqS8fHSOKPFXpzL5zyhQdjpqf4ZoPRvKWyKYD4WXsu4zx5f9g+
Gxb8TiQUFZ8fVLcjLl5u/jWKGQjVmAZ6huFYJCkeuJ744THNsaHwm2Byd75W
kBaLxgUZl53mOeB/ratYUSMMXj0fuPTbKQ7jcneb6hNXePqd5j0RBrPWQyXD
X+NQeHL1OSXifEHZzstOhUPjx/auqpk7+EQuesvUHAcqhZWeb5CPAn2eg3qn
RRLwq2nHlD9xyQs6omuZsXDNwI4VY5CC5WqyAg5/ONBg63iz9lYidMUxCvd8
eoBRWDodN8MBW6EZATd2IgzI93AbbstE/Rdfqi2Jpz+1Zq8zSAKFzUo9jhcy
0VfrfJwU8ZJJnhhnwWTgDnb6fntJFtbRQxzzpjnQEyNJ4U5MgeEav2KGTDa+
UJUuLZviQJxwVZxQdjoU7FoT4uKeg23/JvDem+SA6yPaOl3bTODLybH7Pf8U
t0Uxosq/k7n1/eyX8H4MFzduTO6JeYbjGfPRIoMceEhraI489wze56+i9PNX
oklBt5ZrLQd0iwvtUr6Xg87WiaKvsm8wJVOzuSKeA98mD/K5Ml8Be/z21duZ
Dfi7+Njx5WYc8DNzeCe99w14us3pDdc246RJdLgzPwd8K7jVmuTqge/JPPeI
chuyJS6suV70DV5y9blrr2qC5t99xtIa71HylU+EgO43OCF7q4ZR0AzBFun5
r/d9QNUP49vlesZAK1P9S/+1dzDktyzKyKQLHfR32XgZj4Hf4+/VDKF2mOMk
3OPS7MFt2Z0Ou/4dBTVZqxeNTf+BlKGMeYVEL8rwmv5S2TsKPvxqFBmxDng7
If2hcB0VZfhe9KlFfgWbqOrVTgYfQM06rjP6cz/miCzjUqWz4YKgQNuD2E5Y
kXA9mdpEQyXbWzx3NrDhS5bhuFdDF7TaB9qu/puOAcISxqEGI5B/f+WSW/3d
IHCeNT8szsCjrYxxThALlEUlGd+4PoJow/Szyl8MNHOc2EVJY0JtcFXo6xW9
EKG1VMul6jP6Bdy+PFIxDJ1CK4SWiPUBJHjnjYR9QbF/lKvMq4bge+PXTTvE
qBArxx2TfmQQW0t2TRm8GIRHNdG89D9U0I2+PLxiYhA7HASviL76AtuD8rcI
M/uhxPhsiWHmELZ+t17bmvUZUrW2cXmVfYIEn10ZNWrDyJMuzqUWzwCjb2+s
OJdpYFbgqGXYMox7zSu8Jm/Q4Vfdo7NTuwdAyYZnU50VE/VzKf0Xc2mQZhPb
trx/AF7MWx5p7mHimt5NmRHO/XBEyjpI8zAdaFmKjQ6mLJxy+KEEI73ALTB7
2CeSDm9tcmq86ljok+/wOdOlB9zX3ZWnNtOhQy3boFtqBDXrVU6e4uuCZT/O
Ph5fxgDlyfdijX4jaNhuEe3m0QH6Mu1VXXsZEKOVk/qjbgTNLsvwrP3ZDsef
rv3GsWPAfrOCGp8lbNyRFWjkKvQWGukO6e9DGJA/fSErn8JGBUuRAzGvGqC1
6lDO2H0GDJnryh6yZ+PMuO7bzS9rwDtHo8GwjAFND3WSNYLYeLSXcdk9sByE
TyvWRROXpnOfziB+7GrZmQDzctBQ1jZoJT5yrN9njvi2eYn6SMVyMAqjLuiX
M8Bi7v29imA2WhoNtzzqLwP8ETl66AV5r/XRpTtD2Jgbx5DoppTB2br4vnUV
DKgc2i00cpONY5tnGzaMPwce+9H5868Y4Fj4LnQwko0SIttvaNk/g7ej+bbp
xHVnnF0Vo9j4S95ASJPyDG7MOR1tJW7T0Jt9hXjM+g6VQ4LPoDynHBWqGXDI
UmUZbzQbl9cc2KRWXQyPgqqVRogfLQuJk4pho7rO+g45sWLg7zi2UR8Z4Kqm
0K4cy0ZF1lOZH5kFwEhqlix9wwC/qNmO1rtsHLFvfp0W+AQ8e/5S6iYe153e
yhXPRrHnd1I3Kj8B2TvVrVPE3VmFkqrE20N/9qcPPIbP23ZX7K9lgOg/Ei0J
xBeoV++laTyGtXK39V4SV+dbSjFJYOMDw4s6d/7kwOuS43oP6hig4sTyLkwk
95mq5ZzxyQazdyaGVcQ9SmeZ3cSvfXfdStueDZbW+Ywu4vbt54vniT94ljJg
1pMFsodOvVxZzwB9n9NHDJLY+DjWe1xrbxY0ncyQcCVexRMWPUA8zF+8asPP
BxDK3N0k3sAAmsqs73AyG5071+q7DKTDrWu6b5SIV/P5n+ZJIXlTvO9goJEO
7cYP9bWIV9ENM6SJX8jj/1fxXhqY1mjyuRB3S6VJWhHXsL8ePm6VCi0Dc1pF
xPfxZR6oIy7WH3byQncSZJwVvLutkQGJ0RJtXqls3MJlkmTUegem/y0OUiW+
x8h4Zzhxs2PD1jvl74DydNICEN99/i01jXhJLaVoaWQcbLmx96k5caXuWF0k
rmkitKpULxYKj+c/DyK+PcFUdZ64m1rHmq23ImEdv+fGSOIpQkV6/GkkDzLX
j7zXiYBa5+vC8cQ78gzKxIgPlkb2BHCHg5zM6ZKHxFV7jeJ3EedvLt3Sde0m
+Etr59QQ3zXg5mJN3LiA9neAVxBwRhOXNhGXvy71/QzxiA/anz6KBsK+PC3q
u8V9augVuxMPENk5ds4zADLNcue7iY+K/eoPIF7U5vLh/dwVkPjleJRK/J+G
q0dDiGeeaS8K1fSCTRPeggPE/Qq8OOHEc0tjxyhhl2D89pPVQ8RDYhuYd4iX
x9tWq0mfh5XLmnSYxGP0xA8kEjfhyfK6n+sE+/w1ZljEScc2JC8+18Bm+zJn
W2hhCexgE8dm6chU4mt/xAW2+JnAt8OUjkUvvtQRnkacvtAVu0n8MBQGV04t
+vPcX28WPXuzp7/93GYcf5qQvOhbPWJUF31uU7Zce4o+BlQ2l44szqcphZZC
vFu0K3nzAQucqjxpsLifior1dUnEtfhuXS68a4/0MnW7YeI3zfkY8cQX6v1F
/151DpMqro59IS5SfpESR1xOPUSQGeiKOjuW+X8ifnVH6t0w4hn11vICLy6j
UZ2Rfy/xIyHWSUHEQw4r5Vtd8kbjph9TncTrlO92+hGnaAaHPFLwxdF4PfsW
4o5/2/4+T9xvq/SY2sNreKtg5lg98WalH4P2xEPtTHNriwJRupXnZTXxM8Zz
KyyIH9sRzzi7Ohh7R3b+KSR+wefS7OHFvEXWPSv4NwTbxsoMFnO4pX0kdjGH
3GmhVaoQgYVXDoos5lb4m4ruHMmtr0qr24f0SFSal7L0Ji64f2L3GPFPU7wn
Ls1G4SmduRN2i/OhfHrdQjwhPiWsoOw2frwkLChHXODcPyH+xPdxDWrzJ97B
rALRp0/JeXR8x+muJOdxZL5/4RR/Mp4tFnTWIv2Q83bp/SzSD9T7L833+Gei
ekbseVni4Zyb+wKIT+/3sHrdmonM8cSZNcTdxVW3mBP3nnYf0ZXMwu2Oe6v7
SS89c1vxk5e49prZ7JO1Waiu/qHPnThz86urTqSvLOOOG3vwPsQF2laPANKH
Hq46W3+TnmxKtqiOiH+ED/xrebVrSP+UHvj8KI6NUm7Wtob5edi0wXLHlUoG
/Pqs4Dh9i40pGaJTLaMlyLovNf3iMQMM4a3CiCsbJwaTVtaNVqPCTe3hTdEM
6GnLzRPTYWOqjfbLRrN69M18Hc3rRr6DvH/a/hJho9e1vLcux5ux+6mFvY0m
Axj/Ua/t6RrBeceHAgu5bfhAZv1BVSEGKDyXvHIvZgSzMsNc3rW9x80ctxJZ
Gh0eCwyVqcMIjvJvco/b3YkuWTwqEvfooCWO12ifWFiy/CHdo6EbV1mpRXlZ
0uHnh29qaT4srOlaG/tZqhd1ItLtKBZ0kFx1PbDGm4VcQ5rlJ+R68dNnm6LZ
k+S/ooufa8iThakOdWtr9/Ri/aqd9QGmdPjEa1Msd5GFmVEO5zL0e9GTf7Yu
wIgOsvs8e4pcWNivzr5h6NmLblKnZM7o0EHtXanBXSsWqihWUEKbenGrd3z5
e2U6uPdc1WhSIw5Xj1i49WHC7cc7Q5To8OaZClfnfhYKh+t6FV7pw83pDhv2
KtLB6U37/MA+Fl7G0Vbu4D4MTJv1TJajw18XuZ9PqrLwoXjAfF5iH2pf7hU0
30aH8j9LZ0TlWZivnGAygX1oNJkyVCVOh+N7dFdSNrJQ+vtkyMm/qBiisZly
dgMd7mqOPqBsYOEvpv/++xupaBj+h3eNGB3iV/t6U9azcEVooRBzGxUP7e2Q
cVhHh1nTMOoeYRa+jmzc56lGRTBVNuRaS4dlemq3t/OzUNW8ek+IExUVfnrf
fSRIhz0vqKKbV7GwoDNKoNGdil+2nrUwEKDD8suDNHFeFgY7XVy1wpeKCa0u
tol8ZA58HjtW87DQ1Uvp/M1oKlI2xN8/sIoOQQlCeTxLWbgw6Nhan0TFrw/u
2NF46RDecNr19wITf2g5nliaRcWdJz0yglbQwXeJs+v4HBN/b6BOa+RTMXAX
xXrrcjqsLNufN/ybifUzPjV+5VT8H6Pnbb4=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$30243#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {
             0.5007497498750209, -0.7494996250833645, \
-0.4330127018922193}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.5007497498750209, -0.7494996250833645, 
             0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.9999985000002083, 
             0.001999999333333383, -0.001}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.9999985000002083, 0.001999999333333383, 
             0.}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {0.9999985000002083, 0.001999999333333383, 
            0.}, {0.9999985000002083, 0.001999999333333383, -0.001}}], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {0.5007497498750209, -0.7494996250833645, 
            0.}, {0.5007497498750209, -0.7494996250833645, \
-0.4330127018922193}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999985000002083, 0.001999999333333383, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999985000002083, 
          0.001999999333333383, -0.001}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999880000196667, 0.004999981666681667, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7074248731620636, 0.007074484549344403, 
          0.7067531397171146}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.5007497498750209, -0.7494996250833645, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {
          0.5007497498750209, -0.7494996250833645, -0.4330127018922193}, {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.7949433076759431, 0.424929567788864, 0.}, {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.47023946901014807`, -0.7038332137169739, 
          0.5324412165243131}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.02`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.3`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.02, 5.3], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step1: Ry(\[Theta]1).zhat and Ry(\[Theta]1).s12\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594782517227*^9, {3.836594815072386*^9, 3.8365948330559473`*^9}, 
   3.836595171799533*^9, 3.836595491988694*^9, {3.836596238414459*^9, 
   3.8365962605017843`*^9}, 3.836596368804096*^9, 3.83659653004524*^9, 
   3.836596635696518*^9, 3.836596807846525*^9, 3.836596889740795*^9, 
   3.83659753123298*^9, 3.836602232249907*^9, 3.836602378381898*^9, 
   3.836602410615973*^9, 3.836603694097663*^9, {3.8366040913522997`*^9, 
   3.836604108603342*^9}, {3.836604140652053*^9, 3.836604158828464*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"6ab3055a-9306-41b3-908e-ccdd94e070a1"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31167#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31167#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31167#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
29FYMdj/AU5GFJo=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31191#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
1/8HGSHDnQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31233#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1XdU01cUB3As1IVVGcpSEKtgDLWYgIgBfpYpIqcybASpNoIMRZFhLYUi
ginKUCEQywhiWCKEpeJgFEFUCFNkVGsQEIoaAZlNWL2/c9r3+s65/3z+uefd
973naR/1czz2mYyMjBuULNS4C8uS2i0mfixxlxYtUzaT+ffIJ7w3J32KW7fM
iqVI/Of3dv9qRvpB4bwsg7UR+QU5BoN0AW/IPEqig3zqmIER6Ue+Nj3fHk9F
Xr9oUo905aSuOUMWDbm1/CiFdD1RzwrbKDpyqkmFDunjfs803AQGyOnKz7RI
152mGUdIdiCn8QSrSKcxjQOa4xnIZxWLB7eCG5TfOUlnmSNX4FS+IV1iIBw3
mcB+ZVfaS9JNB2uCraMskAsXGptIVzFwZLsILJEbu8+WkH71cGfKOYk18rm4
BH/S+6SZVcJ4O+QxgWlNFPACF89P21mOyHlJzdWkJ6/REQ4UY6++WX+b9LWb
arKSZZyQM/jqyaTrd8cyF2VgX9KnyyJ9veRQeavIGbl80sjgFvAdC4dC/NyY
yFPq6fW64Hzdh90FTDfknUFXhjaB0/ntgUq67siP5hCM9eCKB7rbo4J8kbep
DjYogrPstPVv1AcgF80yDeXA0829iz6Wn0VuzjpwabxLTMycHJ+86xKKfPzh
E20R+GZb9pShIBz5Y82nlXXgSvfVDvZqRyJXEflK8sGzV36k7/VlI/9Nk10V
C56b5p+7ZSgKecJppXBf8Pfhrs6PjaOR+2o9n7cFt2K8elt0LhZ5TW/Ofm3w
5o7GvFXTl5FTAi32/90J7zVfZ7mWfxV58J9Kcc/AXe9UMw73xiM/ta7fngsu
fGkQ3qTOwfeNWRPgAZ75hOqqQSQiL3v9hRoVvPKGjUg7NAnnYZvk3FiHmHj+
/aWpxVlc5Gb+X7aXgF97ZfR51ttrOIexj0ZPgf9sf13kpZWMPONAxYWvwPmp
J4KXW6Ugfyf43bb/hZiQbSuT84hMRV7uqd6XAl6Q+MfRtII05GedRPP7wVui
TQpnWnjIV+VpcOfaxcTs8n0dq1dcR96tYF9aAN7FKb0SoZaB91EkLnUArzK1
1mc+wL4QXjs/8VxMjFHCBsy+u4H8lok/OxV8V/VOFncI+0jVmKEReGwD455N
FB/PWSoT1tkmJixr5z94a2QiX2pX0hAEbptYcoxXgL1HzSJmCbhZT7MCdW8W
cv6roMT0VjGRWsvo2/IaO+Ov2RAK+OqnF13PhWYjlw6bL3vQIiYOVVeqWivk
IG9QVey1ARcQfJkNmdj1+yLe1DeLiUtlcS8cvslFrs2JNXIAH/BUsZ54gb30
48oNwiYxcT3n4dLhoJvILXw+qFmS3vBtpFQhD+fnRJh2baOYyCnbt+inLOx9
zq0LdPCrfnGzdha3kKtzBHvyhZDPyX168V3Y2dzLbhvBzdznzrzzzkeeW64Z
H90A/8XpO+7XFhcg/6UisldSLyZs7srPlCVj/6ywwXka3HrhU79NGnYVxa6n
E+CPVNMbu9OxL6btFoyAW2Xb8KSZ2KPbnM4MgPsl9DDMCrGXccKlreAmepqn
6mqwr7cd7c4Fv9hRktP+AXsFd8AyG9xpzOaixzB2DjOjmA/ONcr0mRzFLqF5
RvHAi3XyqCpT2M0d6DQO+KTcWIGrjAC5q357aBj4kH5gVq8y9je3tQZCwBXd
XSICVLB/urXdPhh813G5H2TVsQvHs9cFgSf13VTfrIV9eLTlvg/48Xdb47wp
2FkKe7S8wG23G/lIqNhjstlsD3D3TUutordhV6Q4OBwB95qensmnYw9R7Slz
A+9vXNtlsgN7UQhtnSv4vZ3Skqad2Esd7c4zwQsN+bGHGf/ry6MMOoPHV630
GjHF/g9TwwFB
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31865#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
aNj/Plr1nw==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$31907#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.8995766157710634, 
             0.0571131539829523, -0.4330127018922193}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.8995766157710634, 0.0571131539829523, 
             0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.49499159253601793`, 
             0.8573705869218146, -0.001}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.49499159253601793`, 0.8573705869218146, 
             0.}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {0.49499159253601793`, 0.8573705869218146, 
            0.}, {0.49499159253601793`, 0.8573705869218146, -0.001}}], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {0.8995766157710634, 0.0571131539829523, 
            0.}, {0.8995766157710634, 
            0.0571131539829523, -0.4330127018922193}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.49499159253601793`, 0.8573705869218146, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.49499159253601793`, 
          0.8573705869218146, -0.001}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.8573630872058663, 0.4950045825008351, 0.}, {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.353725719149961, 0.6126852092237817, 
          0.7067495666855792}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.8995766157710634, 0.0571131539829523, 0.}, {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.8995766157710634, 
          0.0571131539829523, -0.4330127018922193}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9009349043057256, 0.028570932844989145`, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.8447661336619927, 0.05363329529199243, 
          0.5324412165243129}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.02`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.06`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.02, 0.06], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step2: Step1: Rz(\[Phi]1).Ry(\[Theta]1).zhat and \
Rz(\[Phi]1).Ry(\[Theta]1).s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594782517227*^9, {3.836594815072386*^9, 3.8365948330559473`*^9}, 
   3.836595171799533*^9, 3.836595491988694*^9, {3.836596238414459*^9, 
   3.8365962605017843`*^9}, 3.836596368804096*^9, 3.83659653004524*^9, 
   3.836596635696518*^9, 3.836596807846525*^9, 3.836596889740795*^9, 
   3.83659753123298*^9, 3.836602232249907*^9, 3.836602378381898*^9, 
   3.836602410615973*^9, 3.836603694097663*^9, {3.8366040913522997`*^9, 
   3.836604108603342*^9}, {3.836604140652053*^9, 3.8366041590582542`*^9}},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9974aa6d-0d6f-498c-a9b3-9d8ea66037c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"makePlot", "[", 
  RowBox[{
  "trues1", ",", " ", "trues2", ",", " ", 
   "\"\<Expected s1 s2 and {\[Theta]12, \[Phi]12}\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.001", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}], ",", " ", 
   "\"\<Step0: s1 and s12\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.001", ",", "0.001", ",", "1"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"-", "true\[Phi]12"}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step0: s1 and s12\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "0.001", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", "0.001", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"Rz", "[", 
     RowBox[{"-", "true\[Phi]12"}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step1: s1 and T[Ry(\[Theta]1)].s12\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Theta]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "0.001", ",", "0.99"}], "}"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Theta]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"Rz", "[", 
     RowBox[{"-", "true\[Phi]12"}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Theta]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "0.001", ",", "0.99"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"Rz", "[", "true\[Phi]12", "]"}], ".", " ", 
    RowBox[{"Rz", "[", 
     RowBox[{"true\[Theta]1", "-", "0.001"}], "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", 
    RowBox[{"Rz", "[", 
     RowBox[{"-", "true\[Phi]12"}], "]"}], ".", 
    RowBox[{"ToCartesian", "[", 
     RowBox[{"true\[Theta]12", ",", " ", "true\[Phi]12"}], "]"}]}], ",", " ", 
   "\"\<Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"7a7e40ce-af64-4ec4-96df-43f08ddf7fb7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$32829#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1:eJxN2Xc8ld8fAHCjQkNWJUJKGlSKRMpBGlY0pISMb6XIJiQZkWwuWlYqWZnZ
45hdyp4Z2dt1n2RFye/pj99zHn++X/f13Os8n/P5fM7nCBtbXrrFxMDAoMXI
wMDMgP4WStbXDx1zl89Z/feHgf/78+yO2R2Um2CN9Hr+PyS3Dv+k3BpqCXJz
75v/ILn8C0kJttQHIErv4FwPyd0Sy5zjQh+DvAGNzDKSP+vZteFVoSeQnGiL
jyb5Liv3Db0fn4J7y3VNtiQXcI+tvRwaBBSbZL+uI7m/ZVujYnkIuClU/bLy
L/JuhllT7UIKEPP5He1Mco8ptZz7H58DUcprjYYV5NJnNl3RDokBFhsl5Pn/
IG9Im40UrIoFlXdVKl/9Rs6yjudhYNkb0LZY685FcifKUWajgrdg5PDLt5NL
pO/1YvT7kvwBKA/re59aRH4MLhc7BaSBnKAA7P4P5BPXrtZRldPBu8KlVSsM
+RVdwc/15elAa6BK1ZyO/P1LDb3GkgxwrPpRsBoNOVR4UxqdkwUOf2wZShlD
rh/x9IXG+1ygW+8ztdyDXGZLorKAKwTy3uXTn8uQK+2fE/nDVAp0Hy7d+wCR
x3bs4R45WwpUr1q3uBYjZ7sSOJxQXwpkQqJNufKR/9k3LrfwvQxonenJrk1D
Pnx2U1XE7wrQm9JoG/ia9Pl01bY7R6uBkMBYpZo5cq+i4jPrzzQCge+SZv0/
6YTnPqiQKursAHxPozePZkwTLpos2HCe1gsEB+V1L6yhoe8d7bxexToEBr9s
1jqWP0G4MEsSoyrnKMhgVg1yER8jfMmWeiz51zi4+TtnUznTMOHJW8frnxtP
AcnM07uWA/oJ99aGC67HpoEtZdRps0gX4Xc97vYtpdHBsQkPU12RZsJ7M3eY
OH+ig0jGYdvqtcgdjtepzObRwVTwOZajY02EB0bmydWX0cHPu/eHFxOR953b
TdnXQgcjz1vVNQ8jZ1tpEraYo4M9m1+4Sso2ovhPjkw9dgQDgam9cFNYLXrO
16zgUikMnBbTN5nQRu7BuJx9WgYDFxgBQ8k25HmNLz8fBRi4cbPD5NLrr4Qz
+p4az1LHwLTGLY/9cV8Ip9N47RRvY2BOG8ZFp1YTfuOwpdoTCgY0FqVnOCoq
CZ9RiRNji8AA4PEIu+2F/DyNwcv7BQY4Qxcu555DPs09FHsvCgM7H+8zVq2t
IHzebfP9b/EY6Hd9piPTVk74Z9XQbpU8DECuOB+F0VLCpYSYw9zaMHAk2fxF
8/oCwsVMT0Rwd2DAxcyMxTUwH8UhRYAp5hsG9Apu3dzNhTzd2WpLTDf+O3nb
FfS25xFeut98p/IABnz8s1h89+YQ/km62lV4CgMsEdtfYUqZhHt2Pp09ge/z
tN43j899ziB864/xWvVpDBRn9e17rYI8U8k/5TqeR9TdL52S1konvDMgnpd3
Fl9nHk29RwUphF9sC7fbi+cv17DlW7em36F8u2ZAqxX3uw6UQovet4R/T+iQ
clzGXUzD1aYhjvDDdE7u93h+fCRy/OG9jFjCVxIuilDw/LtNy+2cyuQLwi8I
u8r+wj2pT/82d20EygP54tpX8Dxexsm5s+NjGIpbh+SYGdzzz5pValgHE77q
pFl/FK8T2qoxJczx/oR/NBBgNsP9MgfrlMldH5Q/Ty27luLe6h/WJNz/mPDF
kzNV33EPmzY8Vnr7AeGn9w5y/cTdfKs8Z3rXfcKTVKm3VnDfd807LbXhOuFz
TlEl/+qrRtoOJh5xBfh/D9/4n8AS7vJHHKX7V/4jPLl3h8cE7jUFtpW6v2wI
/6NVS2vEPYhPh7/U+iHhC+ed9NNwf7M/qS9w3p3wNImDrU9w922d/iBz1Jvw
voVZrYu4T22XkO6x8CX8rdWCXgO+noldDTNr7UIIL7/GVHYTfy9//aMFFmgv
CY9utrg3jdfL+kZ5B+ENkYQHnUngs8F9E/PPH8r7owlXW2IPNsTjQY5daCHv
6BvC7Yq5Wpp+4fEzoJuSaPGe8INvLEbW/sTAfHGJh87IR7Q+i8aca2YwcPVl
a9T6uVTCjTIfnlvC4/wyC7OXLmM64ZjU+ZZqfF9UQObLi5szCK9X47f5M46B
ccEwzQXxLMI1w67y53zHQPcNqVfjt3IJn7pvc1gBr5dygccNBoeQR1NcHpZ3
YSD+r6t6u1Ee4ZkhzUVpeH44fKpBPEU/n/AbRocx8SYMbISOMRu1CwmnWR+3
yCzHwISH7D0vJUh43vKtLdMx+Hvfwk6HfhWEf/bZKKd4GgNcgxapdhe/os/z
2+8Jw/OwwlTSLosw5LFnJHh75TDw+GVRys0O5ELuQ3w6eJ5/utYv+4B+LeHf
n2RkfRfBwJMXLm4GpnVo/Z8tHpJfg4GDltUy4o8aCHePGMq8UkQHn0uGNacb
mlD8rB102c1FBxMnYkbTBtvQOvD077E1pIGa+slWGPad8ManPtfrdCeBkc7Q
T1vRQcJ1j88OC+SOAceT/vfZXEYI37jA0mDVNwxah4scTBTH0e+/dGu/p8UA
+EEVKe9smyTcpfFcmKRrN2Be6qZHj9AI7xpVf1N9qBVE9G7DVvTphK/vMJ+8
xN4KUl4ntuqbIH/auOzUMd0CrHXeb8o2Rc455RjSkNIC5CUrbVVskfuYMcS7
HGgBHw/6j7L5IDe0dfdtxvuAyYEmgfE05IUT6wpTtzSCuKoQLo4l5IDHt27v
RAPwe+b8RmcF+Z4ecbaJ+AYwntCpE8GIEf6y3s9Ra1cDyMsRkV5iQ35xK1Ul
m7ceYJUxz6/wITerE9AcY64F46LraIayyAU2Ou2zaaWCS6W1F6qtkJ84/0Ar
K5wKHoonHii2Rd7usO0V/SoV2FNXjyY5ILfPyGu83PkZtM1JfjZ3Qd7dJebe
9b0K6J1sHKQ8RW4nQ40dHakAy3WrN+5GIs9rGb3RMAwBVOeli5cif5zaX7f1
NgRsx2a3iJYjz5ctsLw6VgIEfaqubqtE7vxDuqxkohiEOJoID1KRK8tNsh+n
F4Lzsw/qeBuQx0unLg7M54LZIB6h9T3Im9o33v7LkA5Ovt7NsIwhX+i3yONm
TQOjKx9if/xAziY4LrObPRWwFMdE9c0g/8JhNCLOlwKSvNalxM8iF3PzcJg5
kgBkWIZ5OheQe7czBLYc/wBGVPdTQheRVz9m5E0/FQ8avqmZK/9Cft+u1ea6
yjvg6eV2KGQJ+aGEzQ22hrFg+107ev1v5JLqXzcY1kaDPU4mQO0P8jdOg/xN
HZFApZJ9EpL8YKEYUwz9BVA6I64euoL8sEs99c9SBMg8YM78g+SfA4vZtdeG
g0dJzDxn/yJnBtarC/whoOPXuEI3yanbjY94XggEBnzc+nyryDck3BbhvOUL
pF00mi+SfFnIivrioTdg7/aNdSf5oT+rbPyhHoCzGlITST7OcDT3yMVHAEsY
PPeF5GsYXXVEXe1BT+7UziGS577q+iB21QxQmNsuzZFcum7/IVZDHXDd8tX3
FZI/OjG7/2gGgEuZsmWr5O/9wZKmGWkCa3UzV5ZIzqrBK3XijTXMpK6l0Eg+
KnHx+nk7J7j18HH3DpJ3XuKSSnjrBqdeqVUXkHyAo0phX8AT+HFCxTSC5HNu
S8m8hv7QrXFfljTJL+wrCq8QCYaC6jsNfpPWX9tUYMlheygstD5snEfyYuyr
WiNTBDR/227PT/ITVWdZFdqiIL+9S50XKU5Up13Uv9bEwIgz105vIvmkr+LD
vX2xkEtklSuAFIelsq/qo1vi4Bq3A6X2y6R4eMQapF0UD+OuVGlPkeJfttFA
MM0/FbYGOobeIe2v9yOd1o2v02DFng3lN0n7cV5o1NJOOx3mCJ6fu0Dav9qU
GZrrfxmwt3/BiGsaeTCH56KORxa8NC9udnCcFOefeeZ+FeVCWpK11ydSfqg4
OMvqsLUUqiolDrBB5HtCHdSar5fCmRQl8aEi5PckWmf3R5XCGxprfLIKkJ+W
uXDg6+4y+LPS0V42B/lX0U7+FolyGGawKtuVgvzU5gqPcZVKyPrem8HqBSlf
ce88+f5BNTwjsRfOmCIPZLou3J5dDUNqjsaN3kJe1sbyi2GuGo5ZsLe0GCO3
Wm49qWxVA90Oygk/1yPt34JBp8emX6D+8aUnZZqk/P8pwq5QpxZeK07aES9F
+r/UUlMseRuh9/uQJ59+obp2ZW+myNmRFqjkJcGz4x7yNV9iEqW6uuFWPeOc
oAZUx8OcJLIrIgbg5w1aG58VorovHvz2ml7hMGQXa9BVNER9gkQA55BozRiU
SnKS4DBFfQVrzVWPFsVJuBTIxeypivqQI2cUd1xVoUFtPweVGhrqW4Z3q2co
M9Phi/JXHVCynfBzRWGzhax0WD4PtPi3In8UsnNYDG/pqmP+3rb+hfoial/O
l3leOkw68MlvUzHyv8FSz44cosPuZ4Uu684ibz7ImnJOhw7DI87qMOq0El4X
s5k28pYO6U+NVjXsmwm/HGd8M1kUgwl1b+tLVFBfp1gjsS70AAZZJdvHNrAg
v0NjKrU8hMGJ6q50rUrUH/pOnTPlkMagRkl9dJk88iHbefNRZQwmqnIxnZZE
fab/XXW9YUMMVgr9TWrlqyGcYyNYKxyKQWr2acGC4UrCJ55v2T4ehkGvDxEm
u94g1155KBz/HIPJT2xKn+gjp2S1b2SJwqDrlBy7TDvqk3f735XR+4BBTuFM
3hvUcpT/bXMULuP7ivZQYehtQinKV/yzfpadGFRYKmoPbkD9vNLG11q/ujC4
f1yn6IQW8pPz3Tud8H1ef/NjUG8jOhfYqCcNGvdhcM3eUlee5hy039/bDrQP
Y/DsAcOlk62fCOeG3B4KdAzmJbXKRXag88u03MsOFTwfOfc9G5/VQc5V905S
Dc9ffMOTDEHpaYS/267599hPDA7swQarMtC5Kfq/2x3J8xgMWrM/qScrEb3f
4s57vHie/e1Tv300B53LZhX/sMfhrhTmWSaRG0s4T3ZQzm48Xyf4aTjRLWII
Pzb8bPNmvK47zGpcn7F8Tbh8d3apI+4RfC5Kplbo/Mh8/LtdF+5mFIumb1bP
CV/xLBnxwuvHf1te9yVYUwgPfa8Rh59PYd6MtgGbDTqfpvh7GHHidSt240fm
r8OBhF+qV9+thjvFrJTycASdc7X+Ro254J6aaWG+ZxSdi2XT7qbG455xSimg
ZtQD9Us2eJbEvSE5YKqp/hHh276dPz347zk0LjW2RnvUL1lqcP7rA6CQoZVD
nBmqF1WpA//6gKFp1up4FR3C6+/c+/SvD1i2qFRSNVEE/3fDgcfP/vUBIjWe
lg+u/ke4f9EPwyncizz5ozYcsCH8vkfpiTbc6xrPLbXvcyZ8umBuay7u4fvD
R+u43dFzopLajXF/dKEVe8L1jPCAi4oF4rh3Vq8P7uAMQM/xux1Lx9ffaO2i
Q4gPmrfsfRVpp4u7uKDmz4anaD4TyDQm34zHyZejabc2eEcSbmbMEGWA+26p
vT88HkYT3lFVpDGEx1vjQGOYkwyaFzE0R3xow+u9cxTf8PeDaL7kTHVTMMD7
WuPEI2eseOMJ35BZfGAVr/cvOR5ZPqV9JPy6C72SA/fg1EUn2mgq4YvfHT/x
4fsolJayXXUgjfCPD33CtuH7cUTqGM/iJJqbOeS43MyewOBSlI/j3T40l0vz
Yjdwx/e7hsT9S/epaI43PRxwn7cXgwFgn8VV5Vy0Po5z7R/wvLFdVHFOtgz5
qZ9deWl4/nlbEU/FCtCcMHfiYIVJCwZHPc4pc6eiOSSfwcJ5/Sr8fRXMGAlR
SgiP4As68vItBjdxaz8oFkPzz2WFnFzWNxgs4DmS/NsC+SagrGkZjcHCS4LG
UpnIvWje2cIvMWizF2wKl0HzVVmDFlv+QPz3tNmf4TxTRfi+i4fumuDnPfhs
bdKwHpVwHmbG82oKGJyqWGW2fYrmw811vqFZ+XQYLC+tyzaI5tXjY6+2yxhP
w9fF2ducr3USrndzWrLBbApSV0OeZriieXuHSaWwMfMETNA0bboxP4Te15n1
qnU3R+GO9LjB3P5RwlmKD94rEh6Ceyr0byfGo/m/t01BVcXzPrjm5NsJrdYp
wg/nXimgUr7BHSbO4f1+6H5hpfcbdWdgIwymyF04NIHuIzYp/Z3zs8Q9o/OR
0jRykzvbBGa1GuHg6E4BzRnksvk8LtncjXD0ck78xSXkA/OrAVuPNsBkztwv
v1lJ91870k4zn62D5aNz7kOipPupve9UIk1r4HmXIxbLesh3nF3xDDxQAwd7
8r7yGSJfp5gc4UyrhuEdzS6SJsjF95W7K1hVw26G/HaNu8g3/L7C6/WACq23
BV8RtUfeA589//ukCn7yePftlh/ySAe9BIHIMsh66/AdvkzkRWsNDwlcLYNz
j6fKPD8hr534araNowzOWDPaDuUg514nZ/zHsxRm/L7W5lWI3NeuUnRLRwm8
5H/o6dVK5C3jWx3CbQug1s7+jXtbSfdZ7I4PVkfz4W7pHpf5NuRYIUYx0s2H
c7UMsgUdyAWXgmvYFfOgvk80RbQb+UXGnd842XNgrVhDhe8A8mbz6E398RlQ
T7cl3o10H3fiW0d33/YMGHpnd0zWNPLdnm22Xf54Xfe72dNDutcz8eDSdR9J
hYPpUiJcM8ipzod+JLskQYlekX6WeeRCnNeCjYwTYasCZYFGcl8mZrvN5xPg
yhZzzeoF5GIm6w20ueNhSuIVqtEv5PaJ4aKUxDewMt+8Roh0v7lwz1KdJygW
Oop70XJI3h38qXbnRDS0vqespUy6P2069zJq3vUVjBza1KlIum9l8uOltKi8
gD87v6xkkNxl3yvhJJ4IOMUZZsxLurcdOB1TcDopBJ41b5qikvw/UVU5jslA
qLiZg4OTdC98dNY4POixLxSax2y1SH5Wgbtn3RZvuLdWf5s3yRvbxu48SHKH
tnIqyxkkF+Hq21X12BkuD77b0Ury/Hh7Y0qSNQy9cduVRnKZyPuP85KM4E9p
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$32829#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$32829#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$32853#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$32895#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHGYUAHCJrqUxi2xIpBFBIolgWHY1UZFFZUlpsqHum5S1oaLWEiKC
SZO6Qh3BlIkjdce5bq2k47asrquzSaodUSHrlhD0+/7wfX0z75/fvHkzb96b
p+YdzPTbLyEhYQNSUmIvFk2NLNYXbsvOm+yJZYLz7u6u2DRbrYNl2yJjuudD
iqxt6ILs0lnrFmXkmTW6m9DDCWE2vCsayPMdf1mDfrxq8JRVy1nk2eply9Ab
6rQ0BDQd5OerrMXQP4s4nFrppIc87FP/N9D9XGMTaWMGyEfHyKPQ5bwd7jH4
F5AXu47nQS/Z+pcYOGeOXL7/8HXof/OO1sV8ZY18cos0vwNc9cgZ2sO8q8gF
lpYc6G+85Neqxq8jX1UkvdoG3vHgVD3Z0QE5SaGdAl0j2tRFtccZuUxcbdRH
4LnxW56EbTc8l6xcwRZwCztRZUarJ/KKInrbJnDfKfakoos38tLsyJ4PwL+w
b+YELPsg584olL4HbjXnIO1W4YecMeBzfwM4Q/bn7nbGt8h/fLFIXYd77FPi
dBADkHvFiAWrwO0S01PTOljIqcXlt1aA6x6QmBx1YCN/rxQtWgJOoC9IN5CD
kG/xHtssAqest9+QrA1GrppZGP8OuGfKjIDb/B1yNyP5inngjgZnSyYzQpCn
/zQsmoN3qHNaIcTnFvLU+8yRWeBdzYb+jmahyPvFTSMzwHNsrzhwDn6PvCyp
sPsf4Gn1jZvRL7Hf7LWInAY+l+KRIGwNQy6k1Fx8DVx6gFPq85CD/BuN6lYR
8BWT4Wd0VjjyqX152n8Cn605FCBjyUWeJ+dUPwGcOJTfRiRHIO8qihELgSd8
yV+wX8JOtCVYjAJX8FBpnfo1Et9tddajYeDGA58YWyXeRh56OTFpELhWOi+N
GBCFvPXE86d9wKmbqz98pEUjtyRfYHcDv0bVYtKV7iDXOZFw7QVwvSDF1rYZ
7MVtvfq/Ae98UCJUq4tBnmxG57UDn5Fmugcy7uI+PWHeLcBH6ykaf1Vjf8ds
rGoEnlme2b+jGot8Odx5tRb4prbAWiEZe3pfl2818N5LVJXOVeyCt7Ih5cAb
R1j8Q773kBNMy8ueAn/Z8ERIGMB+jjo4XQh86I8b9W/145C7h3bX5ANXCzUM
jijAPmW8VZsLnB9FuvuEGI9ck7BWAN2iqVEtWAa7pN5CMnTaottz4wPY2WUT
LOiG9qVSQtL/6il56tCllgySiErYLyYKH+XAf+VyJId9EvsSWyH4MXCek0od
jY79sv+4K/T8jSI7SXPsOr/nWkNXTjm3zrfAXl6oqgmdVUY9H8DAHrhCFmUD
F6eYdOZ+jX1XVGUNXX3/sX4Jd+wuy86fQ7fVTWcPemBn+BM0oWcxZUg5XtgF
XPt90M/ELV818MNeqT3NywJeF9s05sfGnmQTWwzdnH2aSwnCvs0/ng7dyDZD
eTcYe8oHuyDo4o2brtmh2J8VLLhAj+uc2PYNw+5dGm8F/dgds3z9cOzF5KNG
0IsNyi/tcLFzX1WehC71+uB0XyT2/wDyIY+R
             "]]}, 
           Annotation[#, "Charting`Private`Tag$33527#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
8A==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$33569#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0nk41HkcB/BxC/tQudJax1SUYlpLcvRRS5EUSQ9alhwtheRqNbLM0FSu
nEN51lmukrWFUWwqlUhu89O4xpj51T5bUa0R7c4f+3y/+3me9z+vvz6XwfHI
w8HSFArFQxIZSTZTiLuORSS0O58z33X8F6D8V/St/P32EqfITPRUC7GXDsU1
WUs8uzTDeW14MvKidjtpM4lbXnAmhfEpyJ01XAo0JG4hG1GTlcFE7vVrOJtg
k8BkWIeMtbCQw7CZnIPENa5bu1VeyEZ+253FzCsg4ePJnL2tPDbyW6Fy4ykS
5w0Z+shsKkI+phPz5bTEPQ+l2rhGYK8d3VR/QOKHmUnBU1+w23IE5VISzz6S
sldW/ypyWujrlYB8Esx0Mtt3Hy9BPptienI5l4TJ6Wvd+xZKkU/Fibays0mo
1zKrMYmvQp7m+z5LnyWZK0hsRvBvIp+hrhQbJJLQ+Zuu2aXVTchlTxVqbo8g
4XRYVsYxVjNyBs+wMNyXhHDHmMOHbrchjx+1rNzuREKFOTm/rPkH7p+pTNjT
SMgaKBb6OXcit6E1mJpokUCKmbmfPB4hTwiSNVpaFAHF9qbYgtWFfB+79s0X
rgjyHJa0ovOeIp8oX14v2yqC4hNNxj253cg94znLHjki+BC8o/pcWw/yrxPe
1jFPiiDJVKVKs+0F8i2PI0MZu0Tw0FPaTXz6JfLlB6GRAaoiUL7V8do3sR95
Gy12S9+UEPoy1Ry7YgeQ6z+TKYuvE8K8TUqzVPIgcq2H0VbK8ULw33uH6nB2
CHlJdHN2kI0QWGFB4qbkYeRqshyOeGUOzpd8GqlljCA/wjOnGnfOwTC/z3Y8
ahT/2/0Ej7zzc0B5+eaqS9QYcmXtnxQ+2s6BSsi3vcq+XOSZDQMqTksCSPfX
ME/aTSBXvJicfqxBAGrrBK02luPIrcb9m1edEABtkuN5TesV7n9fyM61mgKo
enLGiK7Iw3chxNMyj2bh3aLKSNh77JTnJR8tYmchMjP3YNiTCeR/BVSkuuvO
wkrcareBuknk/S4GdvLP+CAl77DcsWsKeXbXjznuMXz4IbJMOFCB/QJT8ExP
kw8thpffXladRq4X5GVHvTcDn/2uH9h2Bnu0EbF01GsGRPJXGinj2ItKtOU0
xNOg3NE8Mmk9g5ygC+51F03DoAuz8V0BdoZxd7I3bRo2Wt+NKV7ETr0xTlfo
mYKzG5Syqtz5yC27Cs86+U5B6g1GU08DdqW8HVXreJOQMT9LHVw1izzcvlFb
TnkSvD+n/nztGPZ0q46ZNOoEqJQ/p79qxO66SIuSd+LBmJFfuRpFgPyx987J
zvBXsOfogk/a/v/5/WXbksRx6LZ34fSysau/WJimFxNAL51Kj5vE3hu16rtf
CgiI/dP7af0UdrttbFdGDgHaC4eGZ6ax5w3vGWVdIkBh9kbgwVnsKpEcxysJ
BPR7dLhTSewpwaUFhT4EWNS6Rj2ax87h9XyfoENAXZJ8PV9uDu+h/1x+nCYB
1XEGa9QVsNeu/b3hzBoC8lNOODsoYr9dPWMXpkQAoz3MpFIJe4uVUefRJS4k
GijcD1DFzrz4NGojwQWnxkD1IW3sxOOv3L4Z4YJGpVS6lA520A3+W3OAC/oR
5UOm67F7+p8qU+jmglnazBhLFzvHqDdwrpULWX2aN60Nsettzr3Mu8MFOUZq
fQgVe/doA32okQtH1Pn0nA3Y72Wqtj2o4QJt3D+b3IRd+kGgYksVF7S06IPq
xtgLP9D0bpVxgWFHF8Jm7OyOpH8qSrhQPODXE7YFe3mLV01RERdEPgYp+SbY
/wWePpxF
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34201#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxV1gs0lGkYB/ARKxHlmshtRWsTRbqgnkqL7ZCKLcUShUNtaCs1Kkq51CpS
tk1aSZkUG8clEkpIlDFjXGfmU7Qomy5aVox1zs7zvme/c+bMmd+Z+b73e97n
/3xj5B+6JWAai8UKmHrJsvDgQo6LZz+7uAtQejP1V6pu4ILdMwWR1Vnq6kf+
3pmbwoXqpnDxfF/qyaoxgTwhF5zSLc22WFHfvFDb/rhJM8Ra7J58IEddLyKs
Le+nZuiyzOPsau0kLre2fIl/UTNUNBjs35BN/Q3rnlPqeDMobLbJC4+g3tl8
Ye73DjzwKWgo7HSkfr3J5c7hBB68Fmv1xGpS99lxUM64iQfZw7+mRfR0EE8C
v8WOGnzgu6g75t2j7vh08epuTz6Y+8e6mR+jrnRXtGboKh8+JOt9+8mZ+tf9
zm7h3XyILzFzldOgXsF2PrXbuAUW3NC08RO3Ey+XKZLUBrTAmz1eu5Q41NPs
I16mZrdAaPoRH7lw6svCL7nz+lvg6Nr+fNeV1AcL1kRHmAmgq0b5XT+LervS
q9RTwQJ4XGHNaatrI14Yt6BhhCMA/dhItu456uqGqj809QlA8z5PttidekLC
RNgM01ZQSOzr42hTD35Z7Ju1qxVCVPWaPgtbiTfaRQVey2gFfEfH74VIf4eO
58XroGtJ14HrQsd1432g4322Se8bHeuCdULHOi6X1hV9n7TuuA/ouE+4b+i4
rw+l+4yOfWAs7Qv0j9K+UZT2ETr2GfYdOvYl9ik69jH2NXqvtO8xB+iYE8wN
qb80V5gzdMwh5hJdKM0t5hgdc465R8e5gHMCHeeIhnSuoNtL5w7OIfT/zynq
psVb6r90d0F7HjdlJKSJ+PaqExsLFYWw+Xalt7LgBfEXarNcblgLYWDCOum7
1dSf5Dam1XkJ4bL18+CsW8+J7zVfpWcYI4Rp4vULLVSoLxKnFd25LYTPX22a
13egkc6l4l634CYh1AZGn+F3NhA/oykUbhsWQtoJk/oRoN7jp+V+SFsEEXGL
lnhmPSN+KWoyr9pOBFwdeaN/plMfnPPq42ofEVQPHB0Xh9QTn1/6zrQvSgRs
owxzledPiW9tWLf9QYYIWOXXDM5aUO/dMZReViUCndsc5x3n6+gcvj+p0suI
YBX/hUH0UC3x0LdRjcskIgiS6TGScaPeOnlyPF9XDF2p27gvc2uI6xiaNXis
EMOFJQb5pjOpf0q4GaLvIQaXb37Z2BL8hLjEY726SqgY3AYslw/VVhMfVQ6T
NU4QQ7xt2USkMfUPJiVR3pliUPZuXxEV9Zj4fptmXmnZlKtoxEx0PiLupp7l
assTwyC7gP3FhrpmpbOTqH9qnfIpj44lVRHv1p+tlykRw5Xp88ZUBZX0eZEU
ZxWvzgDn+q07DvEVxLU3HvtwbgEDYSXJQ7/ZPqTrz5J7VmTLwF4DnrH+4APi
0Sy21bgLA2Oe6+52XC0jrlYXm+3nw4D/bN+PApdSWp8ZJndf72PgOFs2YN54
Cc2vwo36uOMM5CSYHC7OKSYedvLWeadEBnQkyVm5nkXEvXstL85PY4DtzglS
ki8k/od9+s/6nClP1HLoKCggrqiYy11ayMCV1xfLDX3ziU/riPYIqmSg2+v6
j28V79HrFv6eV1TPQLvnocDTe3OJ1waNXjTgM3Bgm33azsc5xL1SeqqzuhgY
nTMeFTmHQ5xzwUSyvoeBw3Nj1gzsuUncZen7maw3DFy2iFR+WJlJ6+PQWykY
YiA6pVtXUT2D/t/4U+2vmmEGDOuHnOsarhDXrZGEcUcZYA3H1ZaGXSJ+ena6
xecvU9f1HFmkpplEn9euW2ctlTDwXk0i8y78NPFNY/KyiZMMVI2x1ez2HyT+
39Et/Zxkj/IvKYwjzQ==
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 0}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999875000260416, 0.004999979166692708, 0}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7070714261421149, 0.007070949961324531, 
          0.7071067811865475}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4330127018922193, 0.25, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6967856156337403, 0.39305191240586723`, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Expected s1 s2 and {\[Theta]12, \[Phi]12}\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.83660415937096*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"65e1fe35-28f7-40b1-8fdd-fa878aaafa33"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34289#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34289#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34289#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
0QzAnQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34313#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
u/Ua5Tq0/wcz9JtO
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34355#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
hvdRuj3u/wfF2WI6
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34872#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$34914#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 
              0.5}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
               Rational[-3, 4], 0}}, {{0, 0, 0}, {
              0.4330127018922193, -0.75, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0.001, 0.001, 1}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0.001, 0.001, 0}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[{{0, 0, 0}, {0.001, 0.001, 0}, {0.001, 0.001, 1}}], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 0}, {Rational[1, 4] 3^Rational[1, 2], 
              Rational[-3, 4], 
              Rational[1, 2]}}, {{0, 0, 0}, {0.4330127018922193, -0.75, 0}, {
             0.4330127018922193, -0.75, 0.5}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 1}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0013065629648763765`, 0.000541196100146197, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.03534060950936697, 0.03534060950936696, 
          0.9987502603949663}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 0}, {0.4330127018922193, -0.75, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{Rational[1, 4] 3^Rational[1, 2], 
            Rational[-3, 4], 
            Rational[1, 2]}, {0.4330127018922193, -0.75, 0.5}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[-3, 4], Rational[1, 4] 3^Rational[1, 2], 0}, {-0.75, 
            0.4330127018922193, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2], Rational[1, 2] 
            3^Rational[1, 2]}, {0.25, -0.4330127018922193, 
           0.8660254037844386}], {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 0.1, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Step0: s1 and s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.8366041596102037`*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"101cbd59-db11-4aaf-8ece-409ef012f020"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$35496#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$35496#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$35496#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
0QzAnQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$35520#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
u/Ua5Tq0/wcz9JtO
             "]]}, 
           Annotation[#, "Charting`Private`Tag$35562#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHFYcB/BtlDhiR5PSUW3GsbXWEbPiToO0WGQXu2PLroiyrlBrHcui
IZK14kockYrUEZI0ZIwQxxSJUiSNKylVxJk4NzLVRBx19b2Z9r28md8/nz/e
e/N+39/T8o9gBe4jEAgMUDKgquheiwmNr2yjCmboiS6Lxwn/rbidxwvQjY7q
XVukydn+70kqGvPQC3IDL8/R1JA3p7q+hD5JvxPyqkETubEPbwq62s6K/CxN
Fzmtv2cc+lO7t4xROgX5l/LTo9Bdy+/k9TMNkXcMKw1Cj5MVZ48bUZFbTAra
oV+3px96ZGGBfPSSKA96yWar8inbE8jNfYtY0HWPy4xc6HZEnubvuxkPnEvk
JRR30ZFP+Z7Oh26iYXZR25iJ3KY8RAW6mMO1irDwQC6qMEoUAQ+c/kWcT/VE
HnpTMhEH/ElsX3fSBge5VVrUYejdg+5z/lunkMcY6nNigXtmpG4o9/gif616
QCIEXmUlx3Ry9ENu2UvKjgEuba8kynX5Iz+555AXDXz/sLEjWT8AeUS5PD8K
uKqZ7gv76kDkHl/8YB0JPHXP3d6VEoyc/WmqggA4a+xHzZbMEOQuDqVVfODy
sjVc0oFQ5EQVN/dw4Bu3/iT+HRWGPDEntzMM+Pg2V6N5/TvkX3u7GoQCLyNq
SflCPvKse9tFIcBn27imaaMRyMmhvw4FARd4ixf6qgXIs8Pq1QOBOwhG3ij4
RyJ/Sc1l84BnKA5OtRyMQl7B0fP0A66y7/lK2O/YnwXrhfgCl8lUbWekRiNn
Lp085gPcrU1aa0SLQW5mui3jDfxMS2TKBVkh8hs2/GkvmCuXzo+UmrCzCrIS
vgG+SR96kBMXi9xksELfA/jMcqiBk0Eczj+lcYgJ33+PHC98jp28qm7pBs89
lDdRViRC7mlS10AH/lPdddldejxy5fT9S87AKWySHYeYgDxcsceSBvvV6WY7
34FdRmgqtgc+MNj/+VJ0InJfha1zJ4BLVrUUpEe/R+7jLCixAa6+1try2QJ2
rlnVmWPAOR7JsYzKs8gLRfrGlsD94nWVV4OTkHO069XN4L/hQOb3qicjNwxK
r6YCH/pH+rR8DLsGtSzkCPC24vZkNu0c8pQr4doGwJnuCZIrpdiX+ikpZOAk
el8Gaw87ZTdAiQTzfL8/ttIrBc/L+uMtHdgXl3d+llzsfekGy9C3P9BgPPLG
/iR+uRf67T6eztxp7M8kPpeg545IBzQDsX/M3laBTrrbr1cYiZ3fYaiqDXyl
YXlUkoH9/CRPFvoEcb1TNQt7df61d1pwfsWEezezsTv+RhiG3tSlIunIwZ7m
9/Aq9IhiXZPdq9i/clz7BPr5HHKGsAL7w7dq8tDr7uoIP7yFnWVtvqEJc/7i
8Lf5t7G35AlGoHfdOGheW4m9RDBUCL0n6K+Z5RrsA/NLF6Fnes/2JtZiV1vb
EUHXDhtpUryPfWlKiwM9bexBtl4j9phmqjN0Q+saUVPTe/scsbOCzq4v5Tn+
/N651gwK9DdOl13/aH7vntNe6tBfr5+1CmjF/i9rIlpV
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36079#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
Ltjk85wAv1SiKCND4v+oSLZV
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36121#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {Rational[1, 2] 3^Rational[1, 2], 0, 
               Rational[1, 2]}}, {{0, 0, 0}, {
              0.8660254037844386, 0, 0.5}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {Rational[1, 2] 3^Rational[1, 2], 0, 0}}, {{0, 
              0, 0}, {0.8660254037844386, 0, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0.001, 0.001, 1}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0.001, 0.001, 0}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[{{0, 0, 0}, {0.001, 0.001, 0}, {0.001, 0.001, 1}}], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {Rational[1, 2] 3^Rational[1, 2], 0, 0}, {
             Rational[1, 2] 3^Rational[1, 2], 0, 
              Rational[1, 2]}}, {{0, 0, 0}, {0.8660254037844386, 0, 0}, {
             0.8660254037844386, 0, 0.5}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.001, 0.001, 1}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0013065629648763765`, 0.000541196100146197, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.03534060950936697, 0.03534060950936696, 
          0.9987502603949663}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{Rational[1, 2] 3^Rational[1, 2], 0, 0}, {
           0.8660254037844386, 0, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 0, 
            Rational[1, 2]}, {0.8660254037844386, 0, 0.5}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.866014578489444, 0.004330108976748834, 0}, {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.49997500020833263`, 0.004999916667083332, 
          0.8660254037844386}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 0.1, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 1.05, 0.01], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Step0: s1 and s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.8366041598004427`*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"ceb3260e-598a-4024-8acf-28b11f6e4e6a"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36701#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36701#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36701#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0WkwHGYYB/AlZdeZxIaEpkRok86QZSlFaptdE+KOVgURda+jlmwci2Wd
E6wkaiTBBq3mMHFLKKa7ljgyTFIsiaQYTVyx6qgkSJa+b6d93zwz/y+/eT78
53n0A1keIfIEAsEFZBfISLtlDoGwQivI+no8RVX6FeG/YcteZkM33n2F7tau
RPvf63ukWdA3mcmdTu3ayHPIbpnQzX08lludDJC/nVVJh57GqpCdav8c+dwA
Pw26UbHNgRELY+TVeye40Kc5NO06bxPkt0SLHOhW3Hmq5ZgZct5NMQv6XNfx
oFOPrXGfsKpvoQeXbtVFvmJgv9FNgR6x03KZ5+yI/AIzdWNnZ5nWuskT5wnc
kRfW38+AfvJpZln9k2+QizjcxW3gOqkbCfvOeCE3YxnRoAcNztsc6vdBbvlc
P1cGvEgh/6yizA850y+15j1w0s/W1lc7vkd+9K+G/nfAhyrD2Fq+gdifLUi2
gDfJq+lGrAUh5+um398ETvj7M6FfTQjyya3hog3gN3xX8oQOYcjJ8/70t8CH
JeoOImI4cvtr56ZeA6eIpDFFwgjkVxp10taB0z26eiVeUchVtaQLa8AP7bFR
aCFHI1+vJvmswp5fVsR81MRCrsfRKFwGrmtI9ee0xSCfVk77dQl46flaq2fF
schXz9BeLQInqzHvxgadRy60Fk8sAD/I7lbyprORW/x4ZHIOeP6TuzvxGheQ
b+pqSGaAGz7orU6dxB5l35zzAniZf4PNWEcccu1yPadp4ILT/NDgvHjkFzmf
9E8C722yiaNHJCAvpitb/QF8brDZXPlkIvJKm77OceAK2W8ukcgc5PltS+/G
gDcMRfd9t4o90pntLgHOaMkte96ZhFxyVaF8CDjr5seHHfnJyBc1t0oeAT97
RDmdFJ6C/OWYyb0B4J40YqrMgov8dN3txH7gpsEFrnStVOTHflrz6wH+MMVF
+Nss9lgDS9su2J9SOHW4OQ25Eb+uWwj8GGNhNtKBh3z89Z/RHcD7h4zrp+ux
8wMMOlqBx9rb+u7opSN3DOsj3ANuYKA5ufcSdlUBJbYBuDd/tFm0jt1QwOHW
AO9RbwzXDM5AXvt4f+sd+Pcpd7biIPaDt6yWfwFe2BvpKTXNRP6p2ExYCXyt
/yk5qRK7LjNMJAA+ZbrvaBUxC/mwSUAt9MDsgYcsJewHfL3LoAeNpkceV8Hu
IbFLgM6NWKwbVcfO9yZRoF8MbfqCpIWdVH+ivAz4tcLdjB8MsZvncJNLgfP2
KPpZnsC+ymOEQ4/vFWzvYmC3nSB6QZfFUSt/t8Oe155Phc4U+7wId8A+Q+Qt
lADXJ1aEC9yw1y7peEHvsHoTJ3cOO0uuzw76Ojdl/yN/7N3xsVToju1ybaUB
2LVzxGr/7usovTcL+eAOlq4PrgNv5KhkhEZ9cGevpUboLim5BmbR2G+P51VA
d41X7NlhYVeQFydB13WXEUvY2PPveDOhiygJ1SFx2KsaVjyhByuuOFITsDvr
5DCgb46ESbcTsWfNaJtCD70+WTCQhP0fZUV9KQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36725#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
mYw=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$36767#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HdQE2YUAPAoDYHKATGCYkWWokXwJBCoUmSlELBQjVD2HmUEKFIwUim1
wFktSyhD4AonBBvCkD3CaNEee4WG1UYo7SFFMWyUCPT7/uD7+u7eP7979+7e
vXdPwy+SGXiQQCBcASlF2I9ZM2P65tLXcn+a7suQUujO3t6MmSCPu2DXKmu2
70UuP29AP1k1eNq2VQV5nmb5KvSGOh0tgZEq8otVdmLoH9w6mlHpqo485v3g
F9ADPe6kGI1rIR8bp4xBV/Bz/o4xrIOc4zFRCL1M8i8pbNEAuWL/0evQ/246
Xpfw6SXkUxL5V7vA1Y6dNbpfaI5cYG0dC/2Fr+JG1YQV8nUl+Zkd4B33TtdT
XGyQy5PbqdC14s3c1XrskMsm1t5+B7wgSeJD3LHHc8kpFEuA0x1Fldn8q8gr
Si3atoEHTLOmlNyZyLl5cT1vgX/s1BIbsnodOXuezH0D3HbRWcazwgk5Y8D/
7hZwhtxP3e0MZ+Q/PFumbcJ99SnHdpBckfsmiAXrwB1TsjIyO9yQ0zi8G2vA
zx8iTI05eyB/oxwvWgFOtFiSaaB4IZc0PbRfBk7dbA+SqvVGrpZTkvQauE/6
vIDd4oPc01ix4hVwF4MPy6ayfZFn/TgiWgSep3eGHOXvhzzjLnN0AXhXi2Gw
i6U/8n5x8+g88HyHK86xhwOQl6eWdP8DPLO+cTv+OfbwXnrcHPDFdO9kIT8Q
uZBac3kWuMxALNf/fhDyz7Wq+SLga6YjTyxCv0A+faBQ9w/gCzVHQmStg5EX
KrjWTwInDRW1kSghyLtKE8RC4MmfDC85rWAnORDpY8DJ3qr86V9C8d1W5z4Y
AW4y8J6JbUoY8miblNRB4DpZTZmkEBZyvvrTx33Aadvr378zCkduTbnE6gZ+
jabDtFCOQK6nnnztGfALEUr8tnnsnLZe/V+Bd94rE2rURSJPs7Roagc+L8P0
CmN8ifv0xPi1Ah+rp2r9VY39NbOxqhF4Di+nf1ctCvnqTbf1WuDbugI7chr2
rL6ugGrgveY01c517IKXclE84I2jocNHAm4gJ5rxyh8Df97wSEgcwH6ONjhX
Anzo96D6l/rRyL2iu2uKgGtEG0beKsY+bSKpLQA+fFv+20ekr5BrEzeKodOb
GzUiZbFLXVhKg2607PnU5BB2VvlkKHRDJ660UP5/9dRCTejSKwapJGXsl1OE
D/Lhv3I/ls86hX2FRY58CLzJVbXOyAK7TfCEB/SirVJHKSvser8V2EFXST+3
OUzHzitR04YeWk67GMLAHrZGEeUBF6ebdhZ8hn1PVGUHXfPgiX6CF3b3VbeP
oDucz2INemNnBBO1oecyZeXzfbEL2E4HoJ9NXL1qEIi9UneuKRd43Z3m8UAW
9lT7OxzoVqwzbGoE9p3hk1nQjR2yVfYisae/dYyALt4K98iLxv6keMkdemLn
5E5ADHY/bpIt9BPfWBbp38TOoRw3hs4x4JnvsrGzZypPQZeePTzXF4f9PzhW
dXE=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$37399#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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

             "]]}, Annotation[#, "Charting`Private`Tag$37441#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.49999975000002084`, 
             0.0004999999166666153, -0.8660254037844386}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.49999975000002084`, 0.0004999999166666153,
              0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.9999985000002083, 
             0.001999999333333383, -0.001}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.9999985000002083, 0.001999999333333383, 
             0.}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {0.9999985000002083, 0.001999999333333383, 
            0.}, {0.9999985000002083, 0.001999999333333383, -0.001}}], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {0.49999975000002084`, 
            0.0004999999166666153, 0.}, {0.49999975000002084`, 
            0.0004999999166666153, -0.8660254037844386}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999985000002083, 0.001999999333333383, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999985000002083, 
          0.001999999333333383, -0.001}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999880000196667, 0.004999981666681667, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7074248731620636, 0.007074484549344403, 
          0.7067531397171146}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.49999975000002084`, 0.0004999999166666153, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.49999975000002084`, 
          0.0004999999166666153, -0.8660254037844386}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4999937500130208, 0.002499989583346354, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9658775304002216, 0.009659097276057904, 
          0.25881904510252074`}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.62`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.62, 0.01], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step1: s1 and T[Ry(\[Theta]1)].s12\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.836604160034974*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"0af7ee51-872f-4f6c-ab4d-8c92023d161f"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$38345#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$38345#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$38345#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$38369#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$38411#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
TfD/AnEt25Y=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$39033#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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

             "]]}, Annotation[#, "Charting`Private`Tag$39075#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.0004999999166667018, 
             0.49999975000002084`, -0.8660254037844386}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.0004999999166667018, 0.49999975000002084`,
              0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 
             0.9900005049998747, -0.001}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 0.9900005049998747, 
             0.}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 0.9900005049998747,
             0.}, {-9.99966500008203*^-6, 0.9900005049998747, -0.001}}], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {0.0004999999166667018, 
            0.49999975000002084`, 0.}, {0.0004999999166667018, 
            0.49999975000002084`, -0.8660254037844386}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-9.99966500008203*^-6, 0.9900005049998747, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-9.99966500008203*^-6, 
          0.9900005049998747, -0.001}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7000325350748348, 0.700039605905766, 0.}, {1, 
          1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-7.145856104995345*^-6, 0.7074638152857592, 
          0.7067495666855792}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0004999999166667018, 0.49999975000002084`, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0004999999166667018, 
          0.49999975000002084`, -0.8660254037844386}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.3537301230870318, 0.35337656971116993`, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0009659256653013913, 0.9659253433261954, 
          0.25881904510252074`}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.57], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.62`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.62, 1.57], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.8366041602642593`*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"66e0765b-6548-4dfe-aa78-ecbe557b3f21"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$39979#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$39979#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$39979#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1nk01XkfB3CMnWzX2hMyjCwtJCahz72aGGtDSmESUdZHVwuuaIQuPSri
Zgkx1x1kuWrSQ7gUYUrZkyzpWrJ1r9QkS4/5zTnPfH+/7zmff17nez7ne96f
zx9fLd8wV38hAQGBCKy+wUp0TPSKUiUf6jrEacMSPnsF/n8qOw87/u0n5YUy
3a0B/vHoXvt0RcxLl37fSbI+gJzC4x4jYT7aqiIXQ3VHXqmjyZbHvME1xXCB
4o38UMx6vCzmMmKsk8bJJ5AXCySMSGP++D41OIh6CvmZe1EaophTTi0fHKKE
ITdZnRURwryIykyRYFCR6zEFwr9W8EHreq/Bd8lnkI8eVXu1iLlPkG+0JzUC
+YtnQsMDmFPPW2Y1Uy4iPxmUPd2JOWldhcLL+QW5u2F/VBvmPaKB51Yy4vB8
si0NqjH3tXwtrZAcj79/V+fjK5hv/kxLsaLSkcut6PdqYO59tY12iXId+T4r
XQNZzPd7BVxrUU/Fc0t7KrJezgcjRllBWw7uAYHSDiOYv33uKvg8Iw25/44L
GzIwj8ibiulLSkc+MOcYPlvGhwfB5g/7Tmfi8wrexNlzhw+vuRcWUsi3kWez
+WJqmKfeuVEp1o67ueFg0+dSLIeXOe+bthQgL4cPF6swP1VubrGHjbtkqa2J
OuaLnNjd+pxC5FUeOmFDxXwQl50vWxpiIl/YNEyeK+LD+FrXmpNKCfL/OtbF
HsnjQ/+CK9nZpgp5pN3BJd1kPsR4K1x4oleDXDXmfVJNKB8UNnnefjHSiNy6
rbk23JYPxSaKLlWqLciDhtMcn/yLDw5Sne7Wn9uQu02UBXSO8yBQNatFYHMH
8rKI1mCTIh58s53uYabShXybHtNmhw8P1DVMo+KWupFHdYj8z1SOB8r2wtUn
VnuRk5cKr07WvwclBfbOsYF+5Ll9Gn5yfu8hUJgqUs8aQB5Ic158vDoP5Ldq
5yMyBpGnhezJ3Jg+D11bPHR+9RxC7nRZvrxNbR4YbHPjc5QR5CIa2hf6cubg
q1O3g6XyG+RP+JO0q+pzELowcmPAZwy50N1MuvO1WThuoFu03+YtcgttEqVH
cBaEmLVjJBUunkNWZ4OX7wzkk7p1HD7hfvp+5KkSzjT8EJLk8137OPIrnL6b
1ZrTYEWXEe9KmsBzyLawbw55B4MrmwLl3CaRNwR2NLIap4Dt8We8u/QUvldC
NrlhclMwNpxuWlGH+1DUrkP+jpOgLyPvW3/mHXItTVNfydQJMCyOY6eoTeN+
O+Q/ZpxxkAxb/MJoxZ1ySCSSPcuFtdbl5MuBM8jjZNy2F2/mQlycRoruKu4b
xTu98slvwTY3XHM1bRb5t/spkbLBY7Crsf7Gssoc8t90DW3ohm8gyj5cuzcD
91zNZe19biNAvSRTM6Y4j/xHk2/tdRlDsCzMifghEfe6TJelNyWDwCnskCYv
4a4um3/22ssB2HtOL3Onx3vkjNd2stliL+EeQ8tG5T7uJ62qbp6X6gPzr71S
yRt4yG+NJl5S29oDDjozxl5HcW8cLdPK1uwCE4txWzUm7swo8zN7jTogVMwo
icsl3B+qfbjs3Q47dcebf1Xm43MMdrRrNmuB4/sSiixtcC/jWR2QO9AEx45+
NGIG4W4mlETX59VAhBP5SNNl3Fkp+wU9U6ugdkK0hJOLu7HH0WBlahXs9by+
uE7wCR1lRrdLFcjb+D4i5+FepHNW35ZUBYoJ43NNBF9z+7H12FY21HruPluX
j/urrD7Jme8rIOaiu0t2Ae7L24frS51LgaW64/svTNw/nL16SEGuFKp9QMKg
iNDf3TCF1l0C00qx3p4E16sRGLBzK4GfG+Kz6gnOSxz+On60GKZ8bllGsXC3
Nbp3UsyfBW+EfnYc+g339chZd/noQqggMRKtS3Hvj2a165oWwgNeaE8AwS0j
IiYt+AXgJs5NuEbwfPX7ev4nCuDLxuyNrwh+uK/6z1OZ+SDltUPC7w7uwlXh
C/TdOdA0GbR4rAz3++6nM0rLs8GJV5wVTfDTVIu6p5uzwUTtfFEmwZPMuLek
JLKAV908/5zgKlulP9EHGaDaqUQ2Kced/q7ULZSWBna22z6MEdzPZI9/Ei8V
fvrDeuEjwa36zLWZvqmQYM11E63AfVOOtx+bcQ3yHzQ46xM8/OOW5zSzK8C8
PiIcQPDO2EiPco1kiCowNzpP8JZR+9AR0SRw36b+KJ7g9InW3XsHEuFidRQp
j+AF746srUTEQe5aHK2d4DNzn+z1j/8CJodJPd0Ej5UOTa9MjYWvIQbXXxO8
dvnLoJ8xDUoMZsxnCR758ODuRsFI0ElM3fKB4I7VeVpqPedATLiBtkRwGp3Z
+CycCpmfi1z+/pf943c/+JLsLv8bAk2P94sSfPQuS2FFNwjmtxdwJAnuT/W5
cafNH6S7/DbIELzYdbrYI8AHysQrH8kRfG1VtVtRwQNuPoseUiD4H3vIvWcO
ukCazAsPRYK7HO8XZOlTwOlpESgRvHWhuDDm3QQnbGU9meh/ATvSr3A=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$40003#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$40045#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$40667#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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

             "]]}, Annotation[#, "Charting`Private`Tag$40709#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0.43326248534421974`, 
             0.249566862370287, -0.8660254037844386}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {0.43326248534421974`, 0.249566862370287, 
             0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 
             0.9900005049998747, -0.001}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           
           Line3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 0.9900005049998747, 
             0.}}]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {-9.99966500008203*^-6, 0.9900005049998747,
             0.}, {-9.99966500008203*^-6, 0.9900005049998747, -0.001}}], 
          RGBColor[0.5, 0, 0.5], 
          
          Polygon3DBox[{{0, 0, 0}, {0.43326248534421974`, 0.249566862370287, 
            0.}, {0.43326248534421974`, 
            0.249566862370287, -0.8660254037844386}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-9.99966500008203*^-6, 0.9900005049998747, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-9.99966500008203*^-6, 
          0.9900005049998747, -0.001}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7000325350748348, 0.700039605905766, 0.}, {1, 
          1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {-7.145856104995345*^-6, 0.7074638152857592, 
          0.7067495666855792}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.43326248534421974`, 0.249566862370287, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.43326248534421974`, 
          0.249566862370287, -0.8660254037844386}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.48302755753275084`, 0.12916802492855986`, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], {0.8369988483123416, 0.4821261554987793, 
          0.25881904510252074`}, {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.57], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"2.62`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"0.52`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 2.62, 0.52], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Step2: s1 and T[Rz(\[Phi]1)Ry(\[Theta]1)].s12\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836604092402431*^9, 3.836604108641355*^9}, {
  3.8366041406762*^9, 3.836604160491804*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"ac363472-69c1-41ee-97c6-9a5bb5d41150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"undoR", " ", "=", "  ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Rz", "[", 
      RowBox[{"true\[Phi]1", "-", "0.001"}], "]"}], ".", " ", 
     RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", " ", 
  RowBox[{
  "trues1", ",", " ", "trues2", ",", " ", 
   "\"\<Expected s1 s2 and {\[Theta]12, \[Phi]12}\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", " ", 
  RowBox[{
   RowBox[{"undoR", ".", "trues1"}], ",", " ", 
   RowBox[{"undoR", ".", "trues2"}], ",", " ", 
   "\"\<Tranpose[Rz(\[Theta]1).Ry(\[Phi]1)].s1 Tranpose[Rz(\[Theta]1).Ry(\
\[Phi]1)].s2\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.836602804810166*^9, 3.836602814747401*^9}, {
  3.836602845520164*^9, 3.836602945528481*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"79a7493b-afc2-4572-9345-c5a7b2091d61"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$41611#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$41611#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$41611#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$41635#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$41677#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHGYUAHCJrqUxi2xIpBFBIolgWHY1UZFFZUlpsqHum5S1oaLWEiKC
SZO6Qh3BlIkjdce5bq2k47asrquzSaodUSHrlhD0+/7wfX0z75/fvHkzb96b
p+YdzPTbLyEhYQNSUmIvFk2NLNYXbsvOm+yJZYLz7u6u2DRbrYNl2yJjuudD
iqxt6ILs0lnrFmXkmTW6m9DDCWE2vCsayPMdf1mDfrxq8JRVy1nk2eply9Ab
6rQ0BDQd5OerrMXQP4s4nFrppIc87FP/N9D9XGMTaWMGyEfHyKPQ5bwd7jH4
F5AXu47nQS/Z+pcYOGeOXL7/8HXof/OO1sV8ZY18cos0vwNc9cgZ2sO8q8gF
lpYc6G+85Neqxq8jX1UkvdoG3vHgVD3Z0QE5SaGdAl0j2tRFtccZuUxcbdRH
4LnxW56EbTc8l6xcwRZwCztRZUarJ/KKInrbJnDfKfakoos38tLsyJ4PwL+w
b+YELPsg584olL4HbjXnIO1W4YecMeBzfwM4Q/bn7nbGt8h/fLFIXYd77FPi
dBADkHvFiAWrwO0S01PTOljIqcXlt1aA6x6QmBx1YCN/rxQtWgJOoC9IN5CD
kG/xHtssAqest9+QrA1GrppZGP8OuGfKjIDb/B1yNyP5inngjgZnSyYzQpCn
/zQsmoN3qHNaIcTnFvLU+8yRWeBdzYb+jmahyPvFTSMzwHNsrzhwDn6PvCyp
sPsf4Gn1jZvRL7Hf7LWInAY+l+KRIGwNQy6k1Fx8DVx6gFPq85CD/BuN6lYR
8BWT4Wd0VjjyqX152n8Cn605FCBjyUWeJ+dUPwGcOJTfRiRHIO8qihELgSd8
yV+wX8JOtCVYjAJX8FBpnfo1Et9tddajYeDGA58YWyXeRh56OTFpELhWOi+N
GBCFvPXE86d9wKmbqz98pEUjtyRfYHcDv0bVYtKV7iDXOZFw7QVwvSDF1rYZ
7MVtvfq/Ae98UCJUq4tBnmxG57UDn5Fmugcy7uI+PWHeLcBH6ykaf1Vjf8ds
rGoEnlme2b+jGot8Odx5tRb4prbAWiEZe3pfl2818N5LVJXOVeyCt7Ih5cAb
R1j8Q773kBNMy8ueAn/Z8ERIGMB+jjo4XQh86I8b9W/145C7h3bX5ANXCzUM
jijAPmW8VZsLnB9FuvuEGI9ck7BWAN2iqVEtWAa7pN5CMnTaottz4wPY2WUT
LOiG9qVSQtL/6il56tCllgySiErYLyYKH+XAf+VyJId9EvsSWyH4MXCek0od
jY79sv+4K/T8jSI7SXPsOr/nWkNXTjm3zrfAXl6oqgmdVUY9H8DAHrhCFmUD
F6eYdOZ+jX1XVGUNXX3/sX4Jd+wuy86fQ7fVTWcPemBn+BM0oWcxZUg5XtgF
XPt90M/ELV818MNeqT3NywJeF9s05sfGnmQTWwzdnH2aSwnCvs0/ng7dyDZD
eTcYe8oHuyDo4o2brtmh2J8VLLhAj+uc2PYNw+5dGm8F/dgds3z9cOzF5KNG
0IsNyi/tcLFzX1WehC71+uB0XyT2/wDyIY+R
             "]]}, 
           Annotation[#, "Charting`Private`Tag$42309#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwV1mk4FFocBvCKpISytZCiaFFSY4vMG5JLlktUlmwJiaxZG8uYSrKNJXEJ
pWSfaLnuhJuEW6JUSl0hXbsZUpZRucd5nv+X34f/c86X9z1yLj6Wp5YsWrQo
mAwfmU0HJjxK1JypVd0FY37LpnTm5hcOF+3mD1gPUgC5tdu/Squ9oe65wXq8
4OGU5Gy/FHPQksbYXNUv1EvNjQIL7l82XPmk7Bgcv6xRsTDnUN+e02v7SVwz
y0bbLMURtgayazpVv1Hfl2+W/kH88FWvLV7sk1DQoxsu15ulUsI8h2eJR3Qe
/cQqc0eRZ7zkPvNfVO8eKZ3phfv4UpT3pfggqvBrznNVfogX5XmNExcTvm9J
rffDhytnH7iwBbBcMcJolPiOb9v/cWQHQCvVLWhWdzm4/o+LBoind35pyi8L
RrlC4FMFcxEENYZ++5f490GamlxKJH48tDz0SFUCvCdVlY+Ji9q4zOQ+jYKN
zqv+pSGSeChfX1xNXHf2gcTu+mjQBB5SzNlSiJbSULxLXF1dKsyEHQMrMeG6
Ht11aNS3LrxO3PiLTHxM2SW4b1YVmzeThfILt/YA4mYur3y7mUlgSkcop6hu
wWTq0hYB4kldhkGqhsmosOVqUTq2oOZbMm/qFxf02IZvIU+ToTSnM/U6WAF3
ei6U9hPnqxhQWlzPxNy3HB8JtiL+tinLaiB+85mIqQg7FZGKqduYutvBr8XL
DSNuYsgqXVeWAfGlxfHBZspQprwwa/vJxaNGft+B5Fy00MwCJymq2HqhCdI/
uIjXltTrXpkH3h/Ja2KvqEJJLX7v7BwXMZNVdGOLPLQWtNjL9KkirG88pYO4
WDxLftOHPJzU5Tbqp6jh1MPs7CTiz73c2U0j+WClCXISxtXxSy35NY/HRSpf
p84y0QIsk+zdJlK2D/bjES/vz3LRqX9xmmp9B4/4qfZVCkB4Q5NQ7RQXVfQJ
V0VfFnwy5+OzVxiggTr/1xouF2fM8071uf2JnOcu6b/tN8e9/Y3ClR+4iEwS
r/+05m9cYNsIZ2daIW8yo/lHLReC/O3i9iYNyJM92J80Z4PYTr/NVte4cPq+
L/QTpRk7RKyEeDwHsA7Kjah5ceEenqZg4dECU+eXcr7KLphwuBtTQeFilE8s
Mf3AS8gWGpRVv3BFs3+4ns8kB7zqsBtVCu1IXbzZsFLLHaMT6StrKzjofXbC
rkH5DabkPQvL357G/JWUwskTHCgN7hFesaoDWYf2Udg6XlgiCtGW5RyUBPPC
L39+B7bMFuNPKWchc16dtpo1Bj8PPimdjk50ONzgHbjsC4tVOyseHBoD/SJF
nZf/ERf1t6yJrPDDf3UVKxd1jULicQmzPL4LM0HJLYlD/jgsoNIW4DKKn+sd
diq5dcObfScgc20gyntaGjQ/j0A+YoPa9JUe6M90RGgon8PeeVOt8pMjeLs2
gc3y70XT2OG+BOsgHNvhZP2zfRjyf16bzTD4jOia43OMk8FYfDtaR8pgGCKC
95UFFfrg+EyOdSk6BIk3bg/wFwyhs7XVhG+uD+cUag77pIbCrLKtsejXINIy
VaJzar5Akba3OjY+DDabxAJkHAaxeTKyYjDuP1gljF+zSA1HnIfyD7uiAYQr
hLUtN+iHfW0xPSX6PF42xllH8vrxifkqTn6qH57+24P0XWlwti4oZhj1w8RO
a58QawDr7V9v3G8ZgdVmS0WjYv6Dg7XQxovHBnFG5WZ7zrZI1ISvyaU+/YIm
TVqOicAQqoX6RJX4o1CaJfTGZKIPrlfP+/UUDyGt975VlHcUYukabjel+xA2
wVGZ1hlGwhh2FjyPwpTQrUNM88+QiWdxzTuGIZB9NFxhVzSMQ1KbDbx7MVMg
ol94YgTe79zoDTHRaDzEPJiU3oMXfs8p9R9HYKNcYhj2JhpSyV3fNc93w+59
n9+6E6O4tYKmrLeVDoOJ0ChKXhcGPBtSrreOImsDbXTIh473iXsqU//9CMc7
mRV1umNwFtc+nllNR5D2NNt6pBMaBbpSd2+N4ZjE6vjkWTre7bqVbS7xHiJz
6va0RRwYT9c5lVFicNqsQK/8QAdoQr55b205MCzHVKR3DBKHfdefwRv06+3d
71XIQUKcSDbjegx6PaRvati148ySwLCBCQ58XCyEVVpjoGGjre1l9BLjryPN
rPdy0fpAK9BrOgZn72ZEeIS2wORrieIfbiRvEu7J9q5lwMUuJ8ootxm3fTsE
WVe56C46tbpQg4GCLt1RyzMNKD+q3RDI5kLL8JXnbnMGfm7Yv/hy6N+4T5to
+fCOi9cC/a72zgyEqw9uoO6uhlV/iaUYhwtKWt6lNB8GslUtgl6xWWgZSjO0
Iq533qq2lvgHn2OS+7NZuBcbV5dOfFeT6K1B4vMCDgG3z7OwKCtDcyFvpqYy
6dq+DASV2J4N02EhkbbBXGKc7JEZoXURz3fb9ZEaUYGrCkuEpye4CPOdDhTz
Z+DR1lgem1GGXJXPTx2+c7FOkOV0IJCBd0vHLjgzi3D2t9T1TOKqpjsynIgf
eCV/cptlEUyLVL/WE294k0mLIp41odfFESvCd22DHQokF1Wqj9rWER94vbE0
LO0ODJtja/qI89O0juw7R/YP2LUlZBTiSNeMj9EMF9TN+nqyQQwYmDvx38y5
hfuO/84/IHn8uNZFrDSYgYz2mdGkonw4B66o7CKu75zQ0UDcVBb3xl3yYSZp
2MxHcp3fZ0i9i/iYc42ihUw++NcObTIj/tdXSsvKEAZ0jz4RW52Uh6dXHtE/
Ej8rJmDkTnxFH2zWD12Hnb6IYCfpGd3SA1eWhzKwLWRiOzciC4IJb3jfiScG
mInJEBe/4uBSOJGJPqVcCzHSV+4yl9SUiXsIG8k4umbCSR9KRsR7KoN/tyA+
K2O78YXRNVgFZydWED9ca/I+hXiwRFPZTYmr0LrhLOlI+jB4gL6bL4wBleY7
h3SKmdgws/c3f+I64etCRYmHhvZ2cmSYYLsu7mYQLzXtcJAmXkgvXJeXlIwL
69M07xC3aX78aw/x+2U4wjeciKh/Lv0xQPyIqm2yLfFdg9QyemQcYpmanO/E
fdpk2CeJ+8fpUnpdL8Oa01fAR/rfWoSf7kX89CpfHRjHovrEduoG4mqt+HKe
+DCzc3JW4iLiIjw2GRF/tNGDd424fEB2pGdxNJ7oDaRYEv89/bBA7sK7tj6q
eZoUhcXvHU7bEU9IsCwvIH5dnHJUdzgCsi0aemeIp2Y+ay8nrlm/07IkMgwP
u64d9Cc+EK5tXkXc669vsY7GIWhW+FocQnyW1ub+kLjADmMjcckgBHbH34wh
bpfq5F1L3K64ghla7Idk6Va1WOLejBO2j4lPVjEdjg+fxZbNy3bGE6//ndb3
hPifdD6+mkhPdH3WuJhE/OdInWAj8aFBHUU5STecMnY6mEK88LDCsybin1Y9
62IUO8POJMotjfhe97Kt/xD/ZeoS8TLSFsc/ZYymL/zvNI7LPSNeWjlTd7XY
AmMztzuuEleuVni44PlWr49WF+viVkbZlgzi/IOSQwu+Z09Cax/5H/8Px+yM
8A==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$42351#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0nk41HkcB/BxC/tQudJax1SUYlpLcvRRS5EUSQ9alhwtheRqNbLM0FSu
nEN51lmukrWFUWwqlUhu89O4xpj51T5bUa0R7c4f+3y/+3me9z+vvz6XwfHI
w8HSFArFQxIZSTZTiLuORSS0O58z33X8F6D8V/St/P32EqfITPRUC7GXDsU1
WUs8uzTDeW14MvKidjtpM4lbXnAmhfEpyJ01XAo0JG4hG1GTlcFE7vVrOJtg
k8BkWIeMtbCQw7CZnIPENa5bu1VeyEZ+253FzCsg4ePJnL2tPDbyW6Fy4ykS
5w0Z+shsKkI+phPz5bTEPQ+l2rhGYK8d3VR/QOKHmUnBU1+w23IE5VISzz6S
sldW/ypyWujrlYB8Esx0Mtt3Hy9BPptienI5l4TJ6Wvd+xZKkU/Fibays0mo
1zKrMYmvQp7m+z5LnyWZK0hsRvBvIp+hrhQbJJLQ+Zuu2aXVTchlTxVqbo8g
4XRYVsYxVjNyBs+wMNyXhHDHmMOHbrchjx+1rNzuREKFOTm/rPkH7p+pTNjT
SMgaKBb6OXcit6E1mJpokUCKmbmfPB4hTwiSNVpaFAHF9qbYgtWFfB+79s0X
rgjyHJa0ovOeIp8oX14v2yqC4hNNxj253cg94znLHjki+BC8o/pcWw/yrxPe
1jFPiiDJVKVKs+0F8i2PI0MZu0Tw0FPaTXz6JfLlB6GRAaoiUL7V8do3sR95
Gy12S9+UEPoy1Ry7YgeQ6z+TKYuvE8K8TUqzVPIgcq2H0VbK8ULw33uH6nB2
CHlJdHN2kI0QWGFB4qbkYeRqshyOeGUOzpd8GqlljCA/wjOnGnfOwTC/z3Y8
ahT/2/0Ej7zzc0B5+eaqS9QYcmXtnxQ+2s6BSsi3vcq+XOSZDQMqTksCSPfX
ME/aTSBXvJicfqxBAGrrBK02luPIrcb9m1edEABtkuN5TesV7n9fyM61mgKo
enLGiK7Iw3chxNMyj2bh3aLKSNh77JTnJR8tYmchMjP3YNiTCeR/BVSkuuvO
wkrcareBuknk/S4GdvLP+CAl77DcsWsKeXbXjznuMXz4IbJMOFCB/QJT8ExP
kw8thpffXladRq4X5GVHvTcDn/2uH9h2Bnu0EbF01GsGRPJXGinj2ItKtOU0
xNOg3NE8Mmk9g5ygC+51F03DoAuz8V0BdoZxd7I3bRo2Wt+NKV7ETr0xTlfo
mYKzG5Syqtz5yC27Cs86+U5B6g1GU08DdqW8HVXreJOQMT9LHVw1izzcvlFb
TnkSvD+n/nztGPZ0q46ZNOoEqJQ/p79qxO66SIuSd+LBmJFfuRpFgPyx987J
zvBXsOfogk/a/v/5/WXbksRx6LZ34fSysau/WJimFxNAL51Kj5vE3hu16rtf
CgiI/dP7af0UdrttbFdGDgHaC4eGZ6ax5w3vGWVdIkBh9kbgwVnsKpEcxysJ
BPR7dLhTSewpwaUFhT4EWNS6Rj2ax87h9XyfoENAXZJ8PV9uDu+h/1x+nCYB
1XEGa9QVsNeu/b3hzBoC8lNOODsoYr9dPWMXpkQAoz3MpFIJe4uVUefRJS4k
GijcD1DFzrz4NGojwQWnxkD1IW3sxOOv3L4Z4YJGpVS6lA520A3+W3OAC/oR
5UOm67F7+p8qU+jmglnazBhLFzvHqDdwrpULWX2aN60Nsettzr3Mu8MFOUZq
fQgVe/doA32okQtH1Pn0nA3Y72Wqtj2o4QJt3D+b3IRd+kGgYksVF7S06IPq
xtgLP9D0bpVxgWFHF8Jm7OyOpH8qSrhQPODXE7YFe3mLV01RERdEPgYp+SbY
/wWePpxF
             "]]}, 
           Annotation[#, "Charting`Private`Tag$42983#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxV1gs0lGkYB/ARKxHlmshtRWsTRbqgnkqL7ZCKLcUShUNtaCs1Kkq51CpS
tk1aSZkUG8clEkpIlDFjXGfmU7Qomy5aVox1zs7zvme/c+bMmd+Z+b73e97n
/3xj5B+6JWAai8UKmHrJsvDgQo6LZz+7uAtQejP1V6pu4ILdMwWR1Vnq6kf+
3pmbwoXqpnDxfF/qyaoxgTwhF5zSLc22WFHfvFDb/rhJM8Ra7J58IEddLyKs
Le+nZuiyzOPsau0kLre2fIl/UTNUNBjs35BN/Q3rnlPqeDMobLbJC4+g3tl8
Ye73DjzwKWgo7HSkfr3J5c7hBB68Fmv1xGpS99lxUM64iQfZw7+mRfR0EE8C
v8WOGnzgu6g75t2j7vh08epuTz6Y+8e6mR+jrnRXtGboKh8+JOt9+8mZ+tf9
zm7h3XyILzFzldOgXsF2PrXbuAUW3NC08RO3Ey+XKZLUBrTAmz1eu5Q41NPs
I16mZrdAaPoRH7lw6svCL7nz+lvg6Nr+fNeV1AcL1kRHmAmgq0b5XT+LervS
q9RTwQJ4XGHNaatrI14Yt6BhhCMA/dhItu456uqGqj809QlA8z5PttidekLC
RNgM01ZQSOzr42hTD35Z7Ju1qxVCVPWaPgtbiTfaRQVey2gFfEfH74VIf4eO
58XroGtJ14HrQsd1432g4322Se8bHeuCdULHOi6X1hV9n7TuuA/ouE+4b+i4
rw+l+4yOfWAs7Qv0j9K+UZT2ETr2GfYdOvYl9ik69jH2NXqvtO8xB+iYE8wN
qb80V5gzdMwh5hJdKM0t5hgdc465R8e5gHMCHeeIhnSuoNtL5w7OIfT/zynq
psVb6r90d0F7HjdlJKSJ+PaqExsLFYWw+Xalt7LgBfEXarNcblgLYWDCOum7
1dSf5Dam1XkJ4bL18+CsW8+J7zVfpWcYI4Rp4vULLVSoLxKnFd25LYTPX22a
13egkc6l4l634CYh1AZGn+F3NhA/oykUbhsWQtoJk/oRoN7jp+V+SFsEEXGL
lnhmPSN+KWoyr9pOBFwdeaN/plMfnPPq42ofEVQPHB0Xh9QTn1/6zrQvSgRs
owxzledPiW9tWLf9QYYIWOXXDM5aUO/dMZReViUCndsc5x3n6+gcvj+p0suI
YBX/hUH0UC3x0LdRjcskIgiS6TGScaPeOnlyPF9XDF2p27gvc2uI6xiaNXis
EMOFJQb5pjOpf0q4GaLvIQaXb37Z2BL8hLjEY726SqgY3AYslw/VVhMfVQ6T
NU4QQ7xt2USkMfUPJiVR3pliUPZuXxEV9Zj4fptmXmnZlKtoxEx0PiLupp7l
assTwyC7gP3FhrpmpbOTqH9qnfIpj44lVRHv1p+tlykRw5Xp88ZUBZX0eZEU
ZxWvzgDn+q07DvEVxLU3HvtwbgEDYSXJQ7/ZPqTrz5J7VmTLwF4DnrH+4APi
0Sy21bgLA2Oe6+52XC0jrlYXm+3nw4D/bN+PApdSWp8ZJndf72PgOFs2YN54
Cc2vwo36uOMM5CSYHC7OKSYedvLWeadEBnQkyVm5nkXEvXstL85PY4DtzglS
ki8k/od9+s/6nClP1HLoKCggrqiYy11ayMCV1xfLDX3ziU/riPYIqmSg2+v6
j28V79HrFv6eV1TPQLvnocDTe3OJ1waNXjTgM3Bgm33azsc5xL1SeqqzuhgY
nTMeFTmHQ5xzwUSyvoeBw3Nj1gzsuUncZen7maw3DFy2iFR+WJlJ6+PQWykY
YiA6pVtXUT2D/t/4U+2vmmEGDOuHnOsarhDXrZGEcUcZYA3H1ZaGXSJ+ena6
xecvU9f1HFmkpplEn9euW2ctlTDwXk0i8y78NPFNY/KyiZMMVI2x1ez2HyT+
39Et/Zxkj/IvKYwjzQ==
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 0}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999875000260416, 0.004999979166692708, 0}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7070714261421149, 0.007070949961324531, 
          0.7071067811865475}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4330127018922193, 0.25, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6967856156337403, 0.39305191240586723`, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Expected s1 s2 and {\[Theta]12, \[Phi]12}\"", Bold, StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836602859672662*^9, 3.836602883828233*^9}, 
   3.8366029461580467`*^9, 3.836603707653842*^9, {3.836604093891333*^9, 
   3.836604108673212*^9}, {3.836604140720069*^9, 3.836604160798849*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"887b6271-deb6-4576-ac01-fa18e7357763"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43070#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43070#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43070#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43094#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJwd1Hk0ldsbB3BJomPOnCQNqmMqrtK79dBFxpLKdA6FRBmOKMVFuSU0GUqR
bmTImJLx5dBVpogbSmTIUDK/nAxx4vze89trPf981l5r7/Xda383uzCs3Xh5
eHhOkbOanIGiTfInbN7uTx3DLzRHbD7A8/81Db07DV0+MguwpYbDL6MlxcDV
a3mFwyFgvPIkpZpZjV07w1EJlVQCevkcm+u31ilcnqDWYV6ScUcS5bbC9NyL
Ra6H1IR+k0lqxHbdbQ8oUtwBY6Mj81znn1hwLGW2Yh4LYi4XJTVBlN1BcL1a
3Xu95Ww7Zqq2do5XZg/sl709znVOe2zDILUDG7csioiR04bGydfDXO85X7tb
JOkLZvZRIi9XcR8ovEnr5jrlofeVV8wBrKBpZcFXUh+iROmvuT5N87AL6RzE
Hg8OvS6VMoAhgr+U65PL0rtNZoewyp/XIlakD0JGpGY+13cSIQO91GFMuv6b
1G05Q6ANcR5xXVZpTk8waQyTuFaqnqloAk/0on243vW2ZfoFcwYbG4965iNp
BSnhvmRwBKyz67OPN2Nhl56fWisRbwWBE/yTXE/nT38T1MnCFn1n3YuljkIF
RaGH63xVJveMZn9iol/NdvyWtoYQ/zdlXDcYLNPsps5j/FeDMqLkjgPvCMeT
65lnDjjwJy1hi7KKMemKdmDrple+THpFvaxqPnMV2uiqJOQteQpqC9+QD0bA
VoP+hARBXvSPrXipisMp6OrzauO6hpT1mms2vOh4ZpHzYPIpSJC9ks91mqxG
r+00LxJVFS6xpTqDbFn3aa5TEp9FrtrKh/64P+Bw8KAL6GRebFwiff+sefPx
W/zIlDp/T8b3NNw3Vg1cJN0+3n81256CBD79W17d5AFh0emn57n3OZY9mvqX
BEqL2Wt6s9oXKGHV/lOk/xf2E2+5uAEFx6FO9rfLwDepYthFelTUxgDGZmX0
wV3esYZxFWY+u1xkkq7FSG72/rEdFQRO5Me/vQ5KptI690nP7zQ50UWjopMP
E2j+zZHg+XRS6wzpRoKRJd0ymqhB41tcp9odcNx3TplK+uhHzw1hAXtQdowY
GmLGAMub0f5jhYA/yzw30PO00bJKfcDXyjjo+WtvWQrp6pos50nxvSiymFqp
MHYf1F9WRJmR/pw6kVl4WBd95rtV5TTzAN546kbPLBOgKdgmrHEVQ2mmomzX
qQSYD8izjSM9xu2Gm+OAHvKq+ONApnQSFCR+llIm/bpqpm6/kD56LN62OCX3
Dwh9Ysy8/E0A1cimc1TfAGEhHzE/k2SI6rffpkZ6pvDDYAvGQbRN4+e8Q0kK
RA8Wh6ayCQjwd402jfoTdZgPb+QUPwWPTQ1jsqRHBz7LVKgwRLBsqAJNqTBu
J/88aIk810eXerPTCNWGJf+1qiUN3Dtyw/oWCegrIvjeCx9CU7onqU7D6SC1
+YKwKukzzJAcNz0TJNLCnE9czIDKiLgw/18EpGUK7HhkZ4qkmEkMu6VnIIp7
c6oWCPgeqByRcssMRUfyr3shlgU5VYGarHkCfunuGjHIMUcu4b8uRUpmA3Fh
xnMX6ebJgh7YWwuUv1RnYbA+B84zFWKd5ggYUdLezTdriXZtnxqJVsmFcwLu
fpdnCfjkOcj0EDuCWENaa1125kFjjaVJ4k8Ckg0ydCyVrVC92d/sev3nYCP+
HT1hEdCqrqMVi1shR7HgPMqxfMhIFAl9MkP2Vf+hmDTjo6hsxqyu3foF9Gyt
yc6cJuCSedfvR1+PIolw+2Bp7ZeALLRZcQQBlXbb+Jx9rFGKUXVoePFLWBKW
2hY5RcD2Pa1p1kvWiFWR0+CqXQCP5I+mB00S4Jph/K9K3DGENJp2C1YVgP41
S3PLCQIU2UGK7zcdRyqFkUnnD7wCxqJpLXWc/KeGys+t8eOo973WQvK7V5BY
Y9k0MkpAdum+liyTE+jLgdTHseaFoM1nnvFqhADGfJDxrk8n0ALn4mFWYyF4
5m+9E/SDAO/eFNXb3jZoNaXaXuZEERhn6a/bNEwAW+vdpSq2Dbo8UezN01EE
Bx9MGLV9I4CoMKj8L94Wxbob38xzLoa9d/MDTw0RYCiJTClqdihCTohZN1YM
atY5ihMDBFi5xarLltuhlhROe8a5EpC65nc5sp+Ay9qYBO8xe5QaJ7jDeK4E
RNTbG5b7yP48olRbOWCPPqgpNucGlMJ8m0TL9V4y/8GO7HRvB6SnU0G/OlcK
M/cKDCk9ZE+W8F4/s4aGtmD7rSSvlEGVuV+lxxcCnA/eNWbH0VBjZto9H04Z
1HV+aO/qJHPeM3jGP56GznmKpOeuwuF7Fva+jfQb93NujD+kIfXcpcKR1TjE
26+paSJ9f0hCTfdjGvpy3rbNRQAHXcfigkru/r9/6DKf0VBKn5KgrTgOfjMR
4U9JZ/gcWhdSTkPilqNOsAWHPq8FkbOk99iXGqwM0FDQ3lW5oodwaMnmyV74
TMCsfZhVwDcaunc3PNfCFAfL1kN3pklnoCqnqWEa8l6Iyo0yx6Gjd9J3lPSE
gJjAvnEakmmVyFlthcODZzY63aSzneOzquZoSMt9y9MFOxyqlx7hVaSLqEhP
hArS0VodnUtfz+FwpHnqaTjpF/0EWPMUOrJyKGEoeONgY7M1OJR0t06vBR8R
OqJ2F7vbM3DIqis7cYn0iepbPCfX09GR2j027f44vHZc4T9LettzJSHYSEdo
RVmtPhiH/LO/nS1Ir2ekCpduoiOhxseb+a7gsGb3zr1GpDuMxItoKNNR18N4
KYMwHN71F1EOkO7U1CqySYWOFIT4fpeH47BraeSVBumfFORFHu6ko8mkwKmF
CBxET8eG7+DmxmoXElWlI18en37tmzj8LEmw3Uw6ZsBZF6FOR0fVB1rP38Zh
kbWyQ550TXaSAEeTjkC+/U3+XRyMZWsWJUj/H0hEkWY=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43136#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
3ZzkS0Ffwnkuu9T+738G6P8HKTO/Ww==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43653#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
HPwPLqoDSw==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$43695#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN2Hk4FesfAPAjrizJvmTP7iD7kn3nTCV7KVrs8ZO10OLWzRXKT8hVKGTN
ku1KSfNGhxJKdGQtTnZtZF/ym57n1zszz/P+8/ljZr7L+33nmd2ewY4+20gk
EootRmx5JHj2Zml0PJWxeJNH10FMSP+/atIEVKuG76MavXm0UYI/4QkmRQ4/
Rj/Gyod+JPgXVwMlNt/n6OmIExGDBBf4IlxyaLgN3aDv/0gjeL84V5sDuQs9
J/+l+jXBU+8jzUs+PWhNtdnnFoKfaV9fNhzuRyu6WW9VEpy5pfHNsNAwurcl
hvUewdV1ZUONySMoV10pPZXgh3rVIgd8PqGhLkodwQRvULW/wTg8jT7/+9t5
AYJbOoXLvTo3iybkGShtaONeknqTK1noC8rXbWs+QvDk85woK/k7KulSUZxP
8DdujcuXfX6g9dfeHRQkuKpBUK7O0CoqGpMpWKOJu4OeWCFz2Rp6a2vVIobg
407BbLTodTTKx6zPluBJ2YXU/whuon7LN/X6NXD3JSfss1AkgTsOVX0T6rjH
lv3hpuzNCMZMeTLrVHG/xKvjztnPCta5g8x2kwnxxsvlkihsQM/qTkO1Iu68
9TPbvj9iA4EOH5xNCb5HZIap7RY7sIur/XxIAXf31kphr8McoG8gvTREDve9
z9OsbwVygUmE2c9WCvcI9SPIhWle4FCwLp8iRMiDaQYDGBEG7oPXfBK3KNCF
CuTKfCekgVzW15zPjbh3XAzPb1Ygg76UrKQaT9wbo4YUNQLVQKjakKjTuC10
+cMdWy5RmsDuZa3+mivupj1MbGrVOiC62vxeY54N9OAbovuTmvYCIzbvbGua
NfQehpGg8CuGIKty8nzRlhX0h+oBr/NPmoCguAdH1rYs8TwPbpWHLpsCJfeS
gLp1C+gHqnccdJQ3BxvqHWyO0+bQax115oI8LMDMJHLcvMwMur3+1yW9QEsg
FqBPTwsxhV7hX6cmFm0FOu2n2Zt5jPG6H20dFwmwBiv09fkpVQPoP7J+Kl/T
sgFxUuUy1V56eLwS0i79SzaAoZSxN9RUGzp9p7p4c5ot8DjKfnfOUAN663ZZ
lgApCuiNvL16tU0FOovpYq9yKgVYqd3moQrIQ8+5nH/i8QgFyFJ+plcASegL
ngc6e0cpgOo2q8ZcgPuxFamT83QKcObqy/KIx31bMOmn9DgFMBWkT7M44N6h
78oWOk0BJWw03XyqBPTE9FPuNXMUEPeFW+UIqzj00/Ykn7ckBPRUIVFaKcLQ
L9LTgi7uQsCdne9To7J4oZeRE0R2CSMgese8ubcf7tSmLsVazLNOsKF2mrgL
5qn50UUQkDKtICXZzgPdUUnFW0UcAR+qBzb+XePG52SC8fEzUgjoctbpvu/G
BV1TQV+yUxEB1U4jnhUqbNAvmw+/0CIjgPGAOq9lCyv0UNnu15mYyyaJKPa7
4z61nrF2UgkBn8/W5/y8xgJ9NX3q5ZAyAiZP/QjSnWGG7jKVYRCrioDAyxtG
vkWM0J1Jzq6ZmgiQWLZ26zBYM/7t6r7dHzowX3KIyX9xehW6CY9l7ybmTbEh
/k15K9BX7i5yH9VCQG5vUlrV9mXoNlFWjdu0EfB35WxLTM8P6FIu3I0KmCNF
ekbBzLh3lT0hH8A89phTyrG989AFFPKdUzDX+rFB0s/5Dh1YxQ0w62B1DB4p
fUWbgV6usdNBEvNvGQt82QbT0JfafXT0MI/s6N4IzJuEfsc75oAX5s9vMJds
DxqDHt5l+OdZzHO/+2f3dNOhpzW1SMRj/n71QchdvVHol/k0K4ow7/9A0vFk
GcLf5x5/Zi3mO4I0LOd7+qB/3AkWUcy5H5zovZRDg25etufZS8ybjG6L7Qzs
hr466rXahXlpUk+6VtBr6HLax/LeY87C8Ux8H9NL6FPGYo+GMB9L5tU7kdUE
3aM612gE883YnqtT3g+hZ7tOqdN/xRUbnSIulw/9KdfCzV9+naZs47yUgP52
Wv9zX+z7A7hvDCoUcFVBX3h+qPgD5jfefO2+QG+ErrBa6Trw67k24aOKA1To
MU86It5hPjRtJcxn0Q79p/cDhk7MW2jTh3/SuqCnHWj2e4z5MWu3hk/G76FX
PFo0rcC84cJEkHP4APRlz+/xOZivZWZef148DJ2FZuzzJ+ZpE7nSdix06E0c
HgeVf90f4SDvCp2CLnV/4i4v5p3hDy/bss9A16g19VjF+vMcK0DOFs5CHwr7
j9wzzIu3aK87+r9CZ7rwbkYf8ytt+lHqefPQ71tRjcax/fVfm6M8yayr0HM4
vqhWYl5QRF1encRdo1oIify1f4ti2bxa16Bz+scvMWD+nSM4WvXKBvQEuoka
gwa2X6aaWys3tqBLn96jVIzNB8v9trq5kYzgt5f19PimYPNK/XqVvvApNuia
Bue8JDE3s9A4Kt2Hu0PFaHyFAtY/ITK3yDbs0MlyfHbN8gjwsBK21ZTdAZ00
PNdMk0VAt9jNQuVRDuhnHtkfK9iNgNXPT03dy7mgx7kF5I4IIkAoI5tjS4oP
+h3OWXtTzBcpivOlrrh3Se/2vyuAgBC2kgyXRNy1VWmvXPgRgFLfChXP4c7Y
HuVZzYOA1K9aWfrP+KGvSIx8EuHA5idHxKCkhyD0uWb6RRQ7d8RyRBTepQtD
3ysT0Gv4iQIWm6m3eS5LQi9yp1MTkyhA+5D8vJW/PPSsJxdCX4lSQJ1evws7
/x7ordmcdn9m2oJskD4QIaQBXVUz3uf4vA04+6JHM8NZG3pxSOyRUUMbIHZC
JXTIQg96mkrZpYIIa3DW3DmZg8MAj3fQjMHoihVYE6Q2NS8aQb/41EXG8rol
qHs7taJpYwp9aVjAc/6UBTg455x86Y4ZdMUUFacma3PwB6ffyvwrc+gcD1sN
rguaYedj6LT1iAX05UJK1P4oE7BTUiU2ZtkSr/siNaz+jSFIKPn7/bMJK+iW
R7K9bV/vBZ4vKB4P3lpDNwvrfTzwVAdsVtTIVd+1gV5Y0XhOt10T2P/FwG9s
bQv922eSh+cVNfBadnzGcRR3Xs4rZfFUMoiWnTiYeJgCPbfd8uPiVRmw8dRT
YPNf3APzSKW3joqAROmopoRN3I9e2WTYoyACOOsNg0/+xF2zZKKqaUEY0OhS
cbpbuK9EcEuOJQmDViDx7QPWR799P7Uvi//ZLmCsGF4uzIR7Uepmm4qMEHin
l9xmxYb7Bs8GO2WWD1zlVTYI4MedK2jwSGU9Hwg7f39xpwDu3TZhPnyxfGB+
iCZYQ/CsTJ+GAVE+0A54034I4j728NmTw3a8YG2Ex9tLGHfztLMfRau5Qabf
pN+SOO46sv3J9bM7gJW5fcO0HO70J4JFOlE7wMD0uTP+8rhzD7Ck1DLtAKK9
f2mME3xcSpelWIwdeOUw1fQp4G4tbRh25iArWPB/01JMxr1HWHG6vuYPIMGx
qTehQojrn+2BQiZ/gPrkIQ6rPbgPDZ+3i2xnAl6XeMfyCP7Uy8tDbYwRPLwa
eNNFFfeFhU8pN/i3gau125kK1XC/xXtKUOr7BhrmcX3XmAbuj29Qb9SzYM47
SZLWxJ3J1WES2b2OSlH0p49rEvMcFxbouIpGv6pv7CG4kdfub+n/LqJzbf+c
ztfC3fhCq4lo5wL6htvQo5vgd8ur1nLHf6C564/2bxHcvGFksVBgHpUnK+9x
0sZdzGjXR5O5z+i+srw1OsE3DYJIulKz6J3S8m8MOrjnR//Fpew0jZaTo8bF
Ca5WzpnIVTeORpNsexwJfilSUJ808Ql1OWnbforgB5RJvl8F6KiKGwM1huCJ
eeSLSXNDaELXP/X3CE5jLvTydOpH36aG1FQTfL+pjLt2HQ3NDN2sQAl+8eze
CmbBbrQ02LC0jeBhY7P6FXMdaMND5eJugscY9E4gdS3o+YzOgn6C7/t0v7dz
rhG9mSCe/4Hg9r7Krtvny9FsJYl7owQ33hk1SPhvA/1/CPbSmQ==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$44222#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0., -0.8655249708551062, 
             0.5008657752594677}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0., -0.8655249708551062, 0.}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           
           Arrow3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 
             0.9999995000000417}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 0.}}]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxN1Gk4FAgYB/CRSKWS6FwjolWuRKJsNuoxohLSMY5BRGOarCWbENvprpCG
VTlXDJqiVfHmmpwzY+4DHR6dbK1KlLL7ZeftfZ73y+/D/30//Q2C6J4hMwgE
Qsh/q0r4blIMSncG/ewYcS7r/bfpx47/szfzudpESBSwdBkjN75zxaZ8Uwn1
NNiz9v7t/w19uE7tor5RJhwtFqrYTqEXCvfrtI1mQ3ZJge2Pk+ghVtafnpIY
sC6mvGj9R3TPDIv3TsXXwPDnoKD979C1suQulIQi8Givyst7jU664mrOWFsK
muHSo++H0GfeOvNhs7gc9NTLdcL70Zto0RHrk25C2hXXh5MC9BPnOGFHTJlg
etu/urQLPaHqWgtPWAMjoncGtIfo3QtpZhVbbsHS5F8PedShzyqmaRy9xAJ/
S3b77gr0juETVObwbXijaVJALUAfi4zn+tnVwfEcx20lGehx6YGs6JR6OP5R
2+BzIvr5JHLuG8VdoDurF9COoffyTGfUmzVAaorUaDoA3XpncFL3yXuQXH7d
qmYX+vic8hLDnvvw+lPnlgQHdBvLDyqs5Y2woF+LG7EGXS9vyOZYWBP4zU2k
xul+d9d3dNCrDuDC/cPFNwnoiQvFgopTDyGeEaz55fWg0l2NsojWq5vBNd/d
iSZEZ9An12ztbgbVXPsXKo3ocxz6vbj0Fnh377fihhL0ycGrX6WLWmFAmmmc
k4reOOqWduBuK3yNMTfMiUT/wWc4zP1gG7i1mHvf80FfTfYiMKfaoGxX1km1
zej+0YWtMYXt0FcZFXSciB6nO9ek1JENfpwFAi0V9FrSpnLrJ2wYcK+9wX82
oPQrP+0AvVOPwDuyuryxFX3gz/Exf/0OWK9PbeMXo/doNHSONXbAeDppQPt3
dCb7JVdI7oQSafFAQiD69g2KXMJkJ7gGceqXOKKHUFXrInO6oGLBLMrgCvSm
yYXsVVbdQPGJEgs+9SudEKdD1e7phmyDpXqTfPTYr9k77EN7gJbGd9jNRN+6
vUEre7oH8n7x2CY5i77ieSCdmNcLE2IN0qUAdEMbV6LQkgPNK22CkjaiR84x
VNSyOWBr2cYqnY8+FFofXuvLBddtvgGEYQX+KVfL5vzDBXc26fKle+jrhq1y
VJ15MC6NSfTLRP+pvUulMo0Ho73Ug0HB6EYrYxMUIh6Y0xwoRbbo7bs2f71E
7IPDuqf5xNnoxjZxUdzQPqi7Q56QyuVKX/9KW55R3Qfcqx5EfiV6/W6KOfdj
HxCJ5Ny5J9F10zxpGQ58YJuI7p51Q6eGxP7RlcwH3dRjj7ctR89Mnd+e1MGH
FFtzustLmdIftMx7e2ueAB647+Zk1qG7f7Bbe8BTAN6z94brJ6M7G5leiM4V
QN7ZkVufdqLbuYUYqskFcNX3FXH5MvStOr5a6npCoKzYZHZ+SKr0QwlnImMC
hJB0feCgMxN9T2BomPcNIViRpOt2xqCPCa+tKHwmhAOfTezLt6AHx03V7Vkl
As6iJlUvdXQtZnwoLVgEJmZHjD17JdgnZ8Mob4tE4PuXdGPZZfRYiadC9FQE
aSnJMo8D6ObvLRfprxSDh2UR04uIPkXxI3X6iUFkYuJb+0yM+bQa4DPEoKNR
czGsDD0uP77FXiKG3EP06fhw9MgP1YVT2hIYZ1mTx0zR99qxy5btkkD+Z7eA
R6MipduPjFplnpfAyJGkrm/V6HEuMwvILRIg82ZTGHR0g+my7fFfJFD56sSL
fEv0VW+3ZI9ZS6Hpj0YztbdCpTvcmDvWQJWCj7YKQcpEH6u14PQVSUG/hLlh
cQT6Bc27BXYyKbg83FfWvAY9Q7tKPDJfBo7XWRb9zwVKL0ld+nnEWQa9L5Jr
Dhej+5zSTdkYKwOe8cV5oQHoSa+F87srZbDDrsBKthzdwqlKt2xQBk8uu2m0
ivhKpw8TrR5pycGBbpBsnIU+j/xywsxJDmx+xOUZO9Bv09XniH+Rg1b6Zhtf
VXRn81b15iI5kDTdKTYP+rDnq5pyR/rkYKc3vTj9V3S7ponQfQQF6GW5ksPM
0A2i5GsIFgpoay217hjiKf1OtOOV4YMKOLRE7WY1A93FKTFC/ZwCTjs3d+vt
QT+zISYikKWAo4z0iiWzeI7/AnDtVmE=
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          
          Polygon3DBox[{{0, 0, 0}, {0., 0.0009999998333333204, 0.}, {0., 
            0.0009999998333333204, 0.9999995000000417}}], 
          RGBColor[1, 0, 0], 
          
          Polygon3DBox[{{0, 0, 0}, {0., -0.8655249708551062, 0.}, {
            0., -0.8655249708551062, 0.5008657752594677}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.0009999998333333204, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0., 0.0009999998333333204, 
          0.9999995000000417}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {0.0007071066633354083, 0.0007071066633354082, 
          0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], 
           TraditionalForm], {3.0603414835689987`*^-18, 0.04997916927067833, 
          0.9987502603949663}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., -0.8655249708551062, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., -0.8655249708551062, 0.5008657752594677}, {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6120185761779344, 0.6120185761779345, 0.}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-9.176895531539791*^-17, -0.4995669248161513, 
          0.8662752955208488}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0., -0.24956686237028697`, 
          0.4332624853442198}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.0007999998666666564, 9.797172760316302*^-20, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 0.1, 1.57], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"4.71`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.05, 4.71], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"3.14`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 3.14], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox[
   "\"Tranpose[Rz(\[Theta]1).Ry(\[Phi]1)].s1 \
Tranpose[Rz(\[Theta]1).Ry(\[Phi]1)].s2\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836602859672662*^9, 3.836602883828233*^9}, 
   3.8366029461580467`*^9, 3.836603707653842*^9, {3.836604093891333*^9, 
   3.836604108673212*^9}, {3.836604140720069*^9, 3.836604161008792*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"c7cfdae4-378b-44ec-974f-3c41d63ecac4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trues12", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Rz", "[", "true\[Phi]1", "]"}], ".", " ", 
      RowBox[{"Ry", "[", "true\[Theta]1", "]"}]}], "]"}], ".", "trues2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"true\[Theta]12", " ", "=", " ", 
   RowBox[{"Get\[Theta]i", "[", "trues12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"true\[Phi]12", " ", "=", " ", 
   RowBox[{"Get\[Phi]i", "[", "trues12", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"makePlot", "[", 
  RowBox[{"trues1", ",", " ", 
   RowBox[{
    RowBox[{"Rz", "[", "true\[Phi]1", "]"}], ".", " ", 
    RowBox[{"Ry", "[", "true\[Theta]1", "]"}], ".", "trues12"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.83660876469396*^9, 3.83660895648009*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"436fc9e9-2f58-4df2-9d2c-70398d4cf181"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$11384#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$11384#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1:eJxN2Xc4lf//B3CjQklWJZKUtFRCovVGGlY0pISMBtkZWSlEsjloGaWSlZk9
3maUvbP3Ps6drOzf/b2u3+d+3+cf1/W4znXOfe779Xq9n6+LoL75tfsMdHR0
avR0dIz437mCjTUDJ1zO0f3/K2Ptfy8MvE5vnd5JuQv+83WSG/mWcbcM+S7f
FGROeGamqckf3M+9ERdlSXxCeLjWkZlO3J/HFjlEBT0jPKtPJbUI91edeza9
y3UjXHysOToC9z0WLpu6v70k/NFidb0V7vwuH6quB/kTLlsvXbkBdx/z5jrZ
4kDC7wpUvC1dxUAH3bShei6F8MOeSxEOuLtOKGWYfntNuDDlvUrtCgYkL2y+
oR4YSbgZq+g5vmUM1CZNh+0q+0B4qZFC6bslDDBt4Hb0K/pIePN8lQsn7vYU
MUa9nE+EDx17+2l8Af9ed3rvX/FfCZcf1PY4O4+BE3Ax3943ifAMf1/M9A8G
xm7drC6XTyb8c+7CmgWGgRuau37UFCNX6ytTNKFh4MtbFa26ghTCT1Q8DVCi
YgDKfCyMyEgj/Ni3xoGEEQxoh758o/Ilk3DNGs+JxU4MSG2Nled3hoSf8yie
/FGEAbmDM0LLDIXo/Y4Lj75CDHxo3cc1dBG54k3LRud8DLDc8BuMqUEuFRhh
yJmNgeUDo6fnuorQ9V/oTK9KwsDgxc1loUslhHcn1Fn5vcffn6zY/FCsgnAB
/pFSJRMMuOflX9h4oY5w/i5x496/NJD5pEQir62VcN6XEVuGUyaBcPyu2svU
bsJ39Z/TvLKOCgaH226XMQ8Q3v9ri9qJ7DEgyBRHr8gxTHgKo6K/k8gIWLAq
PxH/bxTV21LG5mKGQRC/bbTmtf4EqufU83sWfXuBhzqccz4xSbgVZdh+i1A7
MHI16llIoqHnNeZqqCnUALpTdxo4fEceRj9oVbG+AdierFaYzkI+EXCJSWyk
HviFZZ2uKUL+18h0cD62HvRc2ks50Ih86HWTsuqxesCyUi9oNoN835Y3zuLS
dUAyPizxxHGMcL/Ebrg5uAr0VKYFFEogP39Y22BMvQq40i+mn5dCfoUe0BVs
rwJZdW9/iAHkd+62Glx7Xwnovc6Opikjn1S573ow6hegUXmsZR8gn1GHURGJ
FeDOMXOlFxTkKvOSU+wlpWBKIeowSyhywO0a/MC9FFym0rl7vEHOETR3PfNS
KZjkGvjwKBz57mcH9BWrSsDs8y2mv6OR9zq/0pBqLgY/FIM6FLKQQ84oT5nh
QiAhwBj8vBn58XiTNw0bc8Bhw1OhXK3InYyNmZz9skEmhZ8h8jdyrZz7d/dy
ZoNkB4utkR2k6+RpkdHakQUKD5rslu9D7umTxuS1PwN8l6xwFpxAzhS64x0m
lwrc2l5On6IiT+r++OzSjxSw7c9olfIk8vy0ngPvFVJAqpxPwm0MubLLtbOS
asmgzTeah2eadJ+5VbWe5iSAq80h1vsXkDsHL96/P/kZ+KzrU2siuZEtJdes
+xPoimmVsFsk+WEV58e1UeAYjYPryxLyp0InHR+lfAArMVeFKCvIt6s9v6Qw
/gZcEXSW/kfyuB7tB1xVoWA5W0T9xiryIg6O3a3fgoGkbXzkFMmzLxqXqlgG
gDV71RqxNeTqipEFjNE+4JsOP6Mxya+zM08YGHmCL2cXnQtJ3uQTXC/Y+wzM
n5kq6yJ58KTuicIHT8D5/f2cf0lusu0cR3K7KYhTLL+/QvIDtzySEmtvgxn7
8II1kqsk7WTgFpGBIaz3+BdIfu64nWTvyj0Y373TdYzkP3OsSjX/PYbLalXU
OpL782rwFVo6wrnL9tpJJP94MK7Hb9YFJokeaXpBcq+mya9SYh6wZ25a7SrJ
J3aISnaaecFPFnNataT7GdteO7XeOhAW32Ioukt6Lqs+Efxz1LcwosHs0eQy
8pq6c7aCm8Kg/4UY3sck38z494/8wQiotMAWoEuqh9NsAnNZYh+hdT5nY/0/
Uv30aSbEmn2BRz6aDa3/i3w2v8BVY+gbjJ/X51g3hfzm26bwjTOJUC/V8dIC
qc6vMzG6a9InQ0zicmMFqS9KIOP1+S0psEaJ7/HyKPLRXcGqcyJpUDX4Jl9G
F/KOOxLvRu9nwgnTx8dkOknX73dSp38gE0ZQnByL25FHrzort+hlwdTAhrwk
0nw4drZWJEE7G97RO4aJ1CNnhXaRrOq5kGp50iy1GPmYq/QjdzkIsxbvb52M
JD33rWw06F0Cf3iynpY9j5yz3yzR+molzOKz2RdMmsMyE3F7zIIr4YcLojzd
p5E/e5uXcLe1Egq4DPBqkOb8y/Xe6Ye0q2DXi5S0LiHkL944PdcxrIbxr+aP
nluH/Ih5hZTI01roEjqQeiMPnS8/CgZVJ2vrYfH6fqe9nMjHTkUOJ/U3wzvc
vfusdKmozmvGm2BwF6x76Xm7WnOccD2Ngb9Wwv1Q8+T0IH/mCOF2Z3xMWZyG
IOscU61FzyDq38E8WwPZUdh17f5BN7M+wv+UCxW3NY9Dp7pLweLOHYQzLnTQ
IoaosH1Y+WPF0SbCQ7u3YyvaNLix1WT8GhvyhPexTdoGNPiybtG+dbKRcEuN
L5vTDWmQY8IusDYB+TnxUisFKxr0NKaLdjqE/NsRn2EWTxrUtXLxasDP//98
vK+efzSJBnPHNuQmbkU5J6oskJN9gQYBt1f1/rFawr1fOXzUWKHBfZ0iLGPR
yEdj2jRC6TH4tsbbTm0P8qwMIckFFgxe3VaukM5TQzhWGvn6Bi8Gjav5VUcY
q9DnCG+g6kpjkJ/V/sDjpnLCrxVWXamwwOCpy0/U0kKQO4rEHsq3wmCL7fZ3
tJvIbcrXxOJsMWiTklV3ve0Hys8z4j9MnDDY0X7Ypb2rDJ2bZ+r6KS8xaC1V
/mF4COXDxeq1O0ZhGMxqHL5TO4jyKlTmoYkUYvBZYm/1tgfIWU5MbxUuxmC2
dI75zZEClAM9y25uL8Wgwx/JooKxfMID7QwE+8sxKH96nO0kLZfwy9NPqnlq
MRgtmTjfN4vy87Q/t8DGTgzWt7A+WKVD+fzM+710ixgG53rNsriYUc4fXvn6
4c8fDLLsGpXay5aIzvf8yPCeKQz+YtcbEuFNQOeg+4aE6GkMHn7uajt1PAbl
aqZB7rY5DHq00Pk1nkT7xZDiQUrQPAYrntHzJJ+NJrz2t5KJ/D8Mmlo3Pb6t
8JlwN/fnRwMXMHg0ZkutlS7ad3YYWdNqljAorly5SbcqAuVGewOgtIzBj/b9
fPWtYYQrlLKNQ9yP5B5miKS9IVzugohy0AoGjznVlC8vhBKeesiE8Q/uP/zy
2dTXh6CcEMfIfXEVg4zAcm2OD+13rf9GZTpwL9+hf9ztih/hOrxc2rxrGNwU
80CI474X4ZJOKg34OQcXBSzK3zh6EM7W4fXBBfejy2ssfEGuKI9VwPJY3Efp
xDKPX32K+iKm/9Iv3NfRO2sIO9sQ3pk5sXsA98x37V8P3zQmnMLYfG0Gd8nq
g0eZdTUIv23+rgvPB/DpqemDYikA/ucLqdJFa//73j9MSaphBoRXaaau4PkA
MqvwSJz6aEl4avl6ChX3YdGrty9b2xO+7dhJl1bc265xSsR8ek74xDulihzc
+9jLZA74viD825iCYSjuM88X4nl0fQh/XncgTRL3KwfyQkqEAgjfpbxbZwm/
/+qG/Au2O4IIz7U8pp+Fez5WqVTHEEq4yacWGz7cT5VdZJZpDiecz8ap2h2v
E8VJJ+XKn5GEh164dX4z7uNeso77ez4Qzim0xumL12Gh9LuaiMYowtc9P1Ro
s4jXw1Nmf/W8aMKjbpSpT+D1L12nsyvJJ5HwJj+7oId4f30ZarOse59EeMm+
TcV38X6cFRg2t1ZPJjxj1+WZK3j/qlOmqM73Ugjv7p3T45zEYAC727yGaxrh
12ZFjI+M4nX+g3vmX14m4dQ4S/fv+HwoOTLNbLutkHBFudg+FojBfUG2Sg23
kU8lyIkM5GHwkWjT9MFw5HdU1nmm5WDwvNSVQ5V7iwj/W2pnI52BwUrhNr5G
0WLCg3XWpNsTMHh2S4nrqEIp4cxfPOgs3uDzimv3mS9PKgi/ILofThli0I/h
tmBLOvLAn2JRw/cxWNTM9I9uBvmIGVtjoz4GLRabzshb/ET1c+S04GstvH9z
+u2fGf4iXPvkwosiVXz+fw+1ztWoIvxWftzOaAn8dyklJpjz1BHu8SXwxfd/
NHhjf6rQxaFGwuXcRbl3PqLBdb8iYyXaO1D9a+ln+NdSYbC9aHpJaB/hPzap
sb7KHYciAZ9uaeUOEs52uFZTVncUivpyDAj/HCFcIs5elN1wCDL/vOnaKDuO
+tSPk9FNsR8evyC786YClXB1b1uFn9QuOLhXOUWekUb4m+J3rVC8BV7KC57O
ZUZePAvU+La1wKeBuwcPsyGviFx9YPmvGZb3ZPya5UEed+i79+b8ZrgaIPHq
+FHkHa9ynTZcbIYNR5gTLmkgDwm9qEGv0QSrI7dQhz4hp73UW1OxaYDXo/Tv
xgtjhMdUf6opUKiGsj9FNwQdQs4s3jKyiakaPqQyFJofRT5W0Z6sVloFvSYu
GbJLIlcpqIkoOlcFB6xmTYblkccqcjKcF6+EPkbKWoO6yEsFVuOaeH9Cdlaw
XjAIeXn6+V05g6Vw7PXWHaPByN2/hhrs+VgK1VccBaNfI49/8bjwhXYppKS1
sDKFI3eeOM0m1VIC9/oYSWl9Rc4hmMpzp7wYHrXKkLmeg5zqKDPwKaYQnuKb
9jZvQy6zkNcSUJsF5Vjfq/1rR35wVCPvlFoWPDPbsdu+E3nN3W/+3XWZ8LFy
XL9+D/J1+wuduRsy4L4vVn0tg8gvHtJdONP0HXJBLlcZGvKsuKbTYa3JcPL0
21YFDLlDz6vRaY1kyFn9WVzpD3LewXE6/+Qk+HmH6uqJv8j79mH9ZSnfYMS9
B63xs8j91x2M60yLhQ/z2x7xLCFf8qzZMZzxEU7LLrNFkVwu2K1INPMD5E73
z9i7TKofbxV7mlkkPDH4asuWFeS20yq3p8zfw3Md6YV2JA/ldZIztHgLGU92
WbeT3JhiVv/b4jVccSsYcl9Ffm/r+54YSwoM+qISVUvyrCl1HZbHgTDBx1WP
Yw35B9ZvjJWDfvBajfJeJZJTjAspjkNeUG01fMSJ5ImpZib7hj2gdJJRYjTJ
U87K+f4cdoWmj/EpSfLaeN+J+pqncPvvy+f7yZ9D5VRiqbOB4uYqHDMkhwK6
FrZRxjCgLLFvheQDk8wV0QoasObho+9rJF80K5VTNJAFun3PXi2QXOinm/mT
m/eAT94f3QmS57nxhW869BiYuhaeaiZ5dd2lhZYDDmAyZ2ZbJslDDoYMV3O5
AJ/wuBZ9kj+90oS94HwFfK/K5oiQvK1iY0Arhy+Y9H7wgUa6/3rr520DPQPA
/ndh1pokF9ml+rf2ZTDwYxg510Cqk19iSfc3eYQBY326cB2S75XY/8fVMQK0
luWpDJDqra6vLtheCs+jDaFfmxdJ9R/OO9h1JAo4lD+X0fmHXD/2+AULnmiw
KTX/0NoU8rfsT81fUr+B2060UnaSByTO21OHE8F8l913XlIfBVETdij2JYFv
jp7B20n9OCRxgnt+PBnYZjjdTR9DvhDuaWfUkwqS3Nl0XEj9riJqes20PANM
Dvqa8nQj9wUHzG7KZwI/u5mWr6S5sUNYdka6KBOc/duelUSaP59KosuxnCyQ
OXakxKAR+bDrJXmuxBzAqzN3WbuM9LxypvQEKAUglNf/+NtPyDdzqT/JP1wC
FmUyMpk/Is/hPh6/ZFYCNgN5VfMI5LnXdulLpJYAd6pHuuBb5I/3g80hUqVA
WqfRis+PdD3NNhc4LpSBA1ePGhnYkur/1fq4Qa1ywM1If1lJBvlEyRqj1ctK
0FDtFZSWjc6pgHOSmiz99WB05N0OKf1Jwt/np293uNUGtO5OitcaT6DzYi3w
ZYpzL2g1KBXUZxxDc0nVsP7O7ACwvbBRsfruMOE7k6P6M3uHAVP+kUd5ggOE
7yvRfhAbPQY8HueUlbzuQXP7zKcxtaYJcCzzRk455Tf6HAOHkF7vSbDS/bt8
tx/KLQGU01eOjtHAZrnVGW9zkqe0PZWbpAGDh9v5p9WQ9w/v5ledogHpbG6n
dC7kw9czoq8u0EDf7JrvNrFadN5xZP5aYsaAz86k84wXq1GuGJ5xGRDGANP+
zwphhiiPXXY6braohYGdF1fc/A4h7+/MquTVxcAG2fhQByrKdSGtDU7iBhgQ
OVDsImOBvIMuu0XFCAOblm7wuD8pJ9xye8ANYRsMdMJXr1dflBH+3fXz7/ve
GAiz1YrhD0N5lfn+sYe8qRjIW697lP8m8plnE0Vu3zFQNVZpvJ0d+ZQlvdVA
Bga4NpzWX3ZDeThl6Vazey4GvKxLhbe2FqAc7nP05c1SDDSObrMNscohXG13
L+v+JgzIsdk9WRvORvNHstNpthkDWC5G0dNEPlNFJ53TioFdCwE/2WSzUI71
jKAId2DgKv3u3xxsGYRXHa4t8erDQINJxObeaLQvaGk2Rj+nYuDU79aOnh3I
gx7ujUybxMBet2ardh+0d9B53+3spGHAwJVT02UI7S/9yRJCnFMYKHc4+ife
KY5w0W6hXqZZDAhw3ArQ048lvEmGMkfF3YuB0XrL5RjCV7aaqFbMYeCwwUYd
dS60NyXE3ijX+4cBm9gQYUrsR5TTsk1+CixhYO6RuTK3P9rL7ETcqRm4dwR8
r9o9FoHq4ZG8mvwyBuovvQ2fdX5HeNjA5jbZFQwwePNQGhXeEP637ddKCu5O
B94JxnGj/XGCI1ifZxUDfecjc87HBaK8ZFI/UY77PWHF0+zjfoTLbmFnx3MA
EJvWD/F/5kW4wCxmpYb7RRmuzg1bPQjfX6W93QP3uuaRh0/iXAi3Oq2wmIK7
EGfPnrJnDuhc7v+8swn37GgbfUoc2seD7jxwxvdxIBVm+iwrTg/9LkkPgSXc
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$11384#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$11408#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
seF5
             "]]}, 
           Annotation[#, "Charting`Private`Tag$11450#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN1HkwHGYUAHCJrqUxi2xIpBFBIolgWHY1UZFFZUlpsqHum5S1oaLWEiKC
SZO6Qh3BlIkjdce5bq2k47asrquzSaodUSHrlhD0+/7wfX0z75/fvHkzb96b
p+YdzPTbLyEhYQNSUmIvFk2NLNYXbsvOm+yJZYLz7u6u2DRbrYNl2yJjuudD
iqxt6ILs0lnrFmXkmTW6m9DDCWE2vCsayPMdf1mDfrxq8JRVy1nk2eply9Ab
6rQ0BDQd5OerrMXQP4s4nFrppIc87FP/N9D9XGMTaWMGyEfHyKPQ5bwd7jH4
F5AXu47nQS/Z+pcYOGeOXL7/8HXof/OO1sV8ZY18cos0vwNc9cgZ2sO8q8gF
lpYc6G+85Neqxq8jX1UkvdoG3vHgVD3Z0QE5SaGdAl0j2tRFtccZuUxcbdRH
4LnxW56EbTc8l6xcwRZwCztRZUarJ/KKInrbJnDfKfakoos38tLsyJ4PwL+w
b+YELPsg584olL4HbjXnIO1W4YecMeBzfwM4Q/bn7nbGt8h/fLFIXYd77FPi
dBADkHvFiAWrwO0S01PTOljIqcXlt1aA6x6QmBx1YCN/rxQtWgJOoC9IN5CD
kG/xHtssAqest9+QrA1GrppZGP8OuGfKjIDb/B1yNyP5inngjgZnSyYzQpCn
/zQsmoN3qHNaIcTnFvLU+8yRWeBdzYb+jmahyPvFTSMzwHNsrzhwDn6PvCyp
sPsf4Gn1jZvRL7Hf7LWInAY+l+KRIGwNQy6k1Fx8DVx6gFPq85CD/BuN6lYR
8BWT4Wd0VjjyqX152n8Cn605FCBjyUWeJ+dUPwGcOJTfRiRHIO8qihELgSd8
yV+wX8JOtCVYjAJX8FBpnfo1Et9tddajYeDGA58YWyXeRh56OTFpELhWOi+N
GBCFvPXE86d9wKmbqz98pEUjtyRfYHcDv0bVYtKV7iDXOZFw7QVwvSDF1rYZ
7MVtvfq/Ae98UCJUq4tBnmxG57UDn5Fmugcy7uI+PWHeLcBH6ykaf1Vjf8ds
rGoEnlme2b+jGot8Odx5tRb4prbAWiEZe3pfl2818N5LVJXOVeyCt7Ih5cAb
R1j8Q773kBNMy8ueAn/Z8ERIGMB+jjo4XQh86I8b9W/145C7h3bX5ANXCzUM
jijAPmW8VZsLnB9FuvuEGI9ck7BWAN2iqVEtWAa7pN5CMnTaottz4wPY2WUT
LOiG9qVSQtL/6il56tCllgySiErYLyYKH+XAf+VyJId9EvsSWyH4MXCek0od
jY79sv+4K/T8jSI7SXPsOr/nWkNXTjm3zrfAXl6oqgmdVUY9H8DAHrhCFmUD
F6eYdOZ+jX1XVGUNXX3/sX4Jd+wuy86fQ7fVTWcPemBn+BM0oWcxZUg5XtgF
XPt90M/ELV818MNeqT3NywJeF9s05sfGnmQTWwzdnH2aSwnCvs0/ng7dyDZD
eTcYe8oHuyDo4o2brtmh2J8VLLhAj+uc2PYNw+5dGm8F/dgds3z9cOzF5KNG
0IsNyi/tcLFzX1WehC71+uB0XyT2/wDyIY+R
             "]]}, 
           Annotation[#, "Charting`Private`Tag$12082#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
8A==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$12124#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN0nk41HkcB/BxC/tQudJax1SUYlpLcvRRS5EUSQ9alhwtheRqNbLM0FSu
nEN51lmukrWFUWwqlUhu89O4xpj51T5bUa0R7c4f+3y/+3me9z+vvz6XwfHI
w8HSFArFQxIZSTZTiLuORSS0O58z33X8F6D8V/St/P32EqfITPRUC7GXDsU1
WUs8uzTDeW14MvKidjtpM4lbXnAmhfEpyJ01XAo0JG4hG1GTlcFE7vVrOJtg
k8BkWIeMtbCQw7CZnIPENa5bu1VeyEZ+253FzCsg4ePJnL2tPDbyW6Fy4ykS
5w0Z+shsKkI+phPz5bTEPQ+l2rhGYK8d3VR/QOKHmUnBU1+w23IE5VISzz6S
sldW/ypyWujrlYB8Esx0Mtt3Hy9BPptienI5l4TJ6Wvd+xZKkU/Fibays0mo
1zKrMYmvQp7m+z5LnyWZK0hsRvBvIp+hrhQbJJLQ+Zuu2aXVTchlTxVqbo8g
4XRYVsYxVjNyBs+wMNyXhHDHmMOHbrchjx+1rNzuREKFOTm/rPkH7p+pTNjT
SMgaKBb6OXcit6E1mJpokUCKmbmfPB4hTwiSNVpaFAHF9qbYgtWFfB+79s0X
rgjyHJa0ovOeIp8oX14v2yqC4hNNxj253cg94znLHjki+BC8o/pcWw/yrxPe
1jFPiiDJVKVKs+0F8i2PI0MZu0Tw0FPaTXz6JfLlB6GRAaoiUL7V8do3sR95
Gy12S9+UEPoy1Ry7YgeQ6z+TKYuvE8K8TUqzVPIgcq2H0VbK8ULw33uH6nB2
CHlJdHN2kI0QWGFB4qbkYeRqshyOeGUOzpd8GqlljCA/wjOnGnfOwTC/z3Y8
ahT/2/0Ej7zzc0B5+eaqS9QYcmXtnxQ+2s6BSsi3vcq+XOSZDQMqTksCSPfX
ME/aTSBXvJicfqxBAGrrBK02luPIrcb9m1edEABtkuN5TesV7n9fyM61mgKo
enLGiK7Iw3chxNMyj2bh3aLKSNh77JTnJR8tYmchMjP3YNiTCeR/BVSkuuvO
wkrcareBuknk/S4GdvLP+CAl77DcsWsKeXbXjznuMXz4IbJMOFCB/QJT8ExP
kw8thpffXladRq4X5GVHvTcDn/2uH9h2Bnu0EbF01GsGRPJXGinj2ItKtOU0
xNOg3NE8Mmk9g5ygC+51F03DoAuz8V0BdoZxd7I3bRo2Wt+NKV7ETr0xTlfo
mYKzG5Syqtz5yC27Cs86+U5B6g1GU08DdqW8HVXreJOQMT9LHVw1izzcvlFb
TnkSvD+n/nztGPZ0q46ZNOoEqJQ/p79qxO66SIuSd+LBmJFfuRpFgPyx987J
zvBXsOfogk/a/v/5/WXbksRx6LZ34fSysau/WJimFxNAL51Kj5vE3hu16rtf
CgiI/dP7af0UdrttbFdGDgHaC4eGZ6ax5w3vGWVdIkBh9kbgwVnsKpEcxysJ
BPR7dLhTSewpwaUFhT4EWNS6Rj2ax87h9XyfoENAXZJ8PV9uDu+h/1x+nCYB
1XEGa9QVsNeu/b3hzBoC8lNOODsoYr9dPWMXpkQAoz3MpFIJe4uVUefRJS4k
GijcD1DFzrz4NGojwQWnxkD1IW3sxOOv3L4Z4YJGpVS6lA520A3+W3OAC/oR
5UOm67F7+p8qU+jmglnazBhLFzvHqDdwrpULWX2aN60Nsettzr3Mu8MFOUZq
fQgVe/doA32okQtH1Pn0nA3Y72Wqtj2o4QJt3D+b3IRd+kGgYksVF7S06IPq
xtgLP9D0bpVxgWFHF8Jm7OyOpH8qSrhQPODXE7YFe3mLV01RERdEPgYp+SbY
/wWePpxF
             "]]}, 
           Annotation[#, "Charting`Private`Tag$12756#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            NCache[{{0, 0, 0}, {
               Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
              0}, {0.5, 0.8660254037844386, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1:eJxV1gs0lGkYB/ARKxHlmshtRWsTRbqgnkqL7ZCKLcUShUNtaCs1Kkq51CpS
tk1aSZkUG8clEkpIlDFjXGfmU7Qomy5aVox1zs7zvme/c+bMmd+Z+b73e97n
/3xj5B+6JWAai8UKmHrJsvDgQo6LZz+7uAtQejP1V6pu4ILdMwWR1Vnq6kf+
3pmbwoXqpnDxfF/qyaoxgTwhF5zSLc22WFHfvFDb/rhJM8Ra7J58IEddLyKs
Le+nZuiyzOPsau0kLre2fIl/UTNUNBjs35BN/Q3rnlPqeDMobLbJC4+g3tl8
Ye73DjzwKWgo7HSkfr3J5c7hBB68Fmv1xGpS99lxUM64iQfZw7+mRfR0EE8C
v8WOGnzgu6g75t2j7vh08epuTz6Y+8e6mR+jrnRXtGboKh8+JOt9+8mZ+tf9
zm7h3XyILzFzldOgXsF2PrXbuAUW3NC08RO3Ey+XKZLUBrTAmz1eu5Q41NPs
I16mZrdAaPoRH7lw6svCL7nz+lvg6Nr+fNeV1AcL1kRHmAmgq0b5XT+LervS
q9RTwQJ4XGHNaatrI14Yt6BhhCMA/dhItu456uqGqj809QlA8z5PttidekLC
RNgM01ZQSOzr42hTD35Z7Ju1qxVCVPWaPgtbiTfaRQVey2gFfEfH74VIf4eO
58XroGtJ14HrQsd1432g4322Se8bHeuCdULHOi6X1hV9n7TuuA/ouE+4b+i4
rw+l+4yOfWAs7Qv0j9K+UZT2ETr2GfYdOvYl9ik69jH2NXqvtO8xB+iYE8wN
qb80V5gzdMwh5hJdKM0t5hgdc465R8e5gHMCHeeIhnSuoNtL5w7OIfT/zynq
psVb6r90d0F7HjdlJKSJ+PaqExsLFYWw+Xalt7LgBfEXarNcblgLYWDCOum7
1dSf5Dam1XkJ4bL18+CsW8+J7zVfpWcYI4Rp4vULLVSoLxKnFd25LYTPX22a
13egkc6l4l634CYh1AZGn+F3NhA/oykUbhsWQtoJk/oRoN7jp+V+SFsEEXGL
lnhmPSN+KWoyr9pOBFwdeaN/plMfnPPq42ofEVQPHB0Xh9QTn1/6zrQvSgRs
owxzledPiW9tWLf9QYYIWOXXDM5aUO/dMZReViUCndsc5x3n6+gcvj+p0suI
YBX/hUH0UC3x0LdRjcskIgiS6TGScaPeOnlyPF9XDF2p27gvc2uI6xiaNXis
EMOFJQb5pjOpf0q4GaLvIQaXb37Z2BL8hLjEY726SqgY3AYslw/VVhMfVQ6T
NU4QQ7xt2USkMfUPJiVR3pliUPZuXxEV9Zj4fptmXmnZlKtoxEx0PiLupp7l
assTwyC7gP3FhrpmpbOTqH9qnfIpj44lVRHv1p+tlykRw5Xp88ZUBZX0eZEU
ZxWvzgDn+q07DvEVxLU3HvtwbgEDYSXJQ7/ZPqTrz5J7VmTLwF4DnrH+4APi
0Sy21bgLA2Oe6+52XC0jrlYXm+3nw4D/bN+PApdSWp8ZJndf72PgOFs2YN54
Cc2vwo36uOMM5CSYHC7OKSYedvLWeadEBnQkyVm5nkXEvXstL85PY4DtzglS
ki8k/od9+s/6nClP1HLoKCggrqiYy11ayMCV1xfLDX3ziU/riPYIqmSg2+v6
j28V79HrFv6eV1TPQLvnocDTe3OJ1waNXjTgM3Bgm33azsc5xL1SeqqzuhgY
nTMeFTmHQ5xzwUSyvoeBw3Nj1gzsuUncZen7maw3DFy2iFR+WJlJ6+PQWykY
YiA6pVtXUT2D/t/4U+2vmmEGDOuHnOsarhDXrZGEcUcZYA3H1ZaGXSJ+ena6
xecvU9f1HFmkpplEn9euW2ctlTDwXk0i8y78NPFNY/KyiZMMVI2x1ez2HyT+
39Et/Zxkj/IvKYwjzQ==
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           NCache[{{0, 0, 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
              Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}}, {{0, 0, 
             0}, {0.5, 0.8660254037844386, 0}, {
             0.5, 0.8660254037844386, 0}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {1, 0, 0}}]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[1, 2], Rational[1, 2] 3^Rational[1, 2], 0}, {
           0.5, 0.8660254037844386, 0}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{Rational[1, 2] 3^Rational[1, 2], 
            Rational[1, 2], 0}, {0.8660254037844386, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 2^Rational[-1, 2]}, {
           0.35355339059327373`, 0.6123724356957945, 0.7071067811865475}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {1, 0, 0}, {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.9999875000260416, 0.004999979166692708, 0}, {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.7070714261421149, 0.007070949961324531, 
          0.7071067811865475}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.4330127018922193, 0.25, 0.}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.6967856156337403, 0.39305191240586723`, 
          0.}, {1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.57, 1.05], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"1.57`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 1.57, 0.01], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\), \
\[Phi]12=\\!\\(\\*FormBox[\\\"5.24`\\\", TraditionalForm]\\)\"", 
          StringForm["\[Theta]12=`1`, \[Phi]12=`2`", 1.05, 5.24], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\" \"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.836608957580533*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"6428dff9-b659-497e-a708-a5afaf07ec9b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Section",
 CellChangeTimes->{{3.836425450027665*^9, 3.836425450798627*^9}, 
   3.836516619641911*^9},ExpressionUUID->"85b9554a-af03-4f73-b948-\
c20f873856e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Arc3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "m_"}], "}"}], ",", 
      RowBox[{"n_", ":", "60"}], ",", 
      RowBox[{"prim_", ":", "Line"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Alpha]", ",", "lab", ",", "axis", ",", "aarc", ",", "tm", ",", 
        "alpha"}], "}"}], ",", 
      RowBox[{
       RowBox[{"lab", "=", 
        RowBox[{"m", "+", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"a", "-", "m"}], "]"}], "*", 
          RowBox[{"Normalize", "[", 
           RowBox[{"b", "-", "m"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"axis", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "m"}], ")"}], "\[Cross]", 
         RowBox[{"(", 
          RowBox[{"b", "-", "m"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"aarc", "=", 
        RowBox[{"(", 
         RowBox[{"VectorAngle", "[", 
          RowBox[{
           RowBox[{"a", "-", "m"}], ",", 
           RowBox[{"b", "-", "m"}]}], "]"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tm", "=", 
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"alpha", ",", "axis"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"prim", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"m", "+", 
           RowBox[{"tm", ".", 
            RowBox[{"(", 
             RowBox[{"a", "-", "m"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"alpha", ",", "0", ",", "aarc", ",", 
            RowBox[{"aarc", "/", "n"}]}], "}"}]}], "]"}]}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "add", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makePlot", "[", 
     RowBox[{"S1_", ",", "S2_", ",", " ", 
      RowBox[{"L_", ":", "\"\< \>\""}]}], " ", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"S1", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"S1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"S1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"x2", "=", 
         RowBox[{"S2", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"y2", "=", 
         RowBox[{"S2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"z2", "=", 
         RowBox[{"S2", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]2", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]12", "=", 
         RowBox[{"Get\[Phi]12", "[", 
          RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Theta]12", "=", 
         RowBox[{"Get\[Theta]12", "[", 
          RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Theta]", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Theta]i", "[", "S1", "]"}], "<", "0.1"}], ",", 
           "0.1", ",", 
           RowBox[{"Get\[Theta]i", "[", "S1", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]2", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Theta]i", "[", "S2", "]"}], "<", "0.1"}], ",", 
           "0.1", ",", 
           RowBox[{"Get\[Theta]i", "[", "S2", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"S1p", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"S2p", "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S2"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"S1label", "=", "\"\<1\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"S2label", "=", "\"\<2\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"S1Col", "=", " ", "Blue"}], ",", "\[IndentingNewLine]", 
        RowBox[{"S2Col", "=", "Red"}], ",", "\[IndentingNewLine]", 
        RowBox[{"S12Col", "=", "Orange"}], ",", "\[IndentingNewLine]", 
        RowBox[{"SpMag", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "#"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"S1", ",", "S2"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"min\[Phi]", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ",
              "0.01", ",", " ", 
             RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ",
              "0.01", ",", " ", 
             RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "t", "]"}], ",", 
                RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Sin", "[", "t", "]"}], ",", 
                RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
                RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
            RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
              "}"}]}], ",", " ", 
            RowBox[{"ViewPoint", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\[Pi]", ",", 
               RowBox[{"\[Pi]", "/", "2"}], ",", "2"}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ParametricPlot3D", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", "S1p", "]"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], ",", 
               RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Phi]"}], "}"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"S1Col", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
          
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"\[Phi]", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
               RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"S1Col", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", "S2p", "]"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], ",", 
               RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Phi]2"}], "}"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"S2Col", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
          
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"\[Phi]2", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
               RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Theta]2"}], "}"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"S2Col", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Phi]", "!=", "\[Phi]2"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Phi]", ">", "\[Phi]2"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"ParametricPlot3D", "[", 
               RowBox[{
                RowBox[{"0.8", "SpMag", "*", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "t", "]"}], ",", 
                   RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "\[Phi]2", ",", "\[Phi]"}], "}"}], ",", 
                " ", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"S12Col", ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"ParametricPlot3D", "[", 
               RowBox[{
                RowBox[{"0.8", "SpMag", "*", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "t", "]"}], ",", 
                   RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "\[Phi]", ",", "\[Phi]2"}], "}"}], ",", 
                " ", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"S12Col", ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}],
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"0.8", "SpMag", "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "t", "]"}], ",", 
                 RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "\[Phi]", ",", 
                RowBox[{"\[Phi]", "+", "0.001"}]}], "}"}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"S12Col", ",", 
                 RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Legended", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Black", ",", "Thick", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]}], 
                   "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"S2Col", ",", "Thick", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", "S2", "}"}]}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"S2Col", ",", "Thick", ",", "Dashed", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", "S2p", "}"}]}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"S1Col", ",", "Thick", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", "S1", "}"}]}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"S1Col", ",", "Thick", ",", "Dashed", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", "S1p", "}"}]}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"S12Col", ",", " ", "Thick", ",", " ", 
                    RowBox[{"Arc3D", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5", "*", "S1"}], ",", 
                    RowBox[{"0.5", "*", "S2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                    "100"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
                    "\[IndentingNewLine]", "S1Col", ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S1p", ",",
                     "S1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                    "S2Col", ",", 
                    RowBox[{"Polygon", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S2p", ",",
                     "S2"}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.05", "]"}], ",", 
                  RowBox[{"Sphere", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{"\"\<Z\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1.1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{"\"\<X\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"1.1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{"\"\<Y\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.1", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S1label"}], "]"}], 
                    ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1p", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S1label"}], "]"}], ",",
                     " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1", ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S1label"}], "]"}],
                     ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Norm", "[", "S1p", "]"}], "*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", "0"}], "}"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S1label"}], 
                    "]"}], ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S2label"}], "]"}], 
                    ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2p", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S2label"}], "]"}], ",",
                     " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2", ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S2label"}], "]"}],
                     ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Norm", "[", "S2p", "]"}], "*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", "0"}], "}"}]}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S2label"}], 
                    "]"}], ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\[Theta]12\>\"", ",", " ", "S12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                    RowBox[{"0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"S2", "+", "S1"}], ")"}], "/", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"S1", "+", "S2"}], "]"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\[Phi]12\>\"", ",", " ", "S12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                    RowBox[{"0.8", "SpMag", "*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}],
               ",", " ", 
              RowBox[{"PlotLabel", "\[Rule]", "L"}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"LineLegend", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"S1Col", ",", "S2Col", ",", "S12Col"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\< \[Theta]1=`1`,  \[Phi]1=`2`\>\"", ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Theta]", ",", "0.01"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Phi]", ",", "0.01"}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\< \[Theta]2=`1`,  \[Phi]2=`2`\>\"", ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Theta]2", ",", "0.01"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Phi]2", ",", "0.01"}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<\[Theta]12=`1`, \[Phi]12=`2`\>\"", ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Theta]12", ",", "0.01"}], "]"}], ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"\[Phi]12", ",", "0.01"}], "]"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}],
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"L", ",", " ", "Bold"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1", "=", " ", 
     RowBox[{"ToCartesian", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "3"}], ",", 
       RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", "=", " ", 
     RowBox[{"ToCartesian", "[", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "4"}], ",", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"makePlot", "[", 
    RowBox[{"S1", ",", "S2", ",", " ", "\"\<Angles Test\>\""}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.836425452156451*^9, 3.836425621822233*^9}, {
   3.836425654327044*^9, 3.836425679128981*^9}, {3.836425714028948*^9, 
   3.836425718317525*^9}, {3.8364257852826*^9, 3.83642581371799*^9}, {
   3.836425957031444*^9, 3.8364260292957163`*^9}, {3.8364260671061974`*^9, 
   3.8364261322484083`*^9}, {3.836426330567281*^9, 3.8364263439472237`*^9}, {
   3.836426620888739*^9, 3.836426679270656*^9}, {3.836427400955277*^9, 
   3.836427466946723*^9}, {3.83642749824542*^9, 3.8364275105561132`*^9}, {
   3.836427552093769*^9, 3.836427569698339*^9}, {3.836427627889964*^9, 
   3.836427775908209*^9}, {3.836427973851671*^9, 3.8364280029851723`*^9}, {
   3.836428073085737*^9, 3.836428320160042*^9}, {3.836428658711643*^9, 
   3.836428667991186*^9}, {3.836429211118754*^9, 3.836429211473012*^9}, {
   3.836435825312821*^9, 3.836435861837976*^9}, {3.836435937620687*^9, 
   3.836435940728877*^9}, {3.8364360240946417`*^9, 3.836436084110136*^9}, {
   3.836436200090143*^9, 3.836436246280505*^9}, {3.836436393065754*^9, 
   3.836436405482133*^9}, {3.836436462168271*^9, 3.836436465181727*^9}, {
   3.836436498443049*^9, 3.836436500992111*^9}, {3.8364365434892063`*^9, 
   3.836436641508565*^9}, {3.836436737594244*^9, 3.8364368392370443`*^9}, {
   3.836436987601714*^9, 3.836436993020895*^9}, {3.836437246294838*^9, 
   3.8364373325899563`*^9}, {3.836437639255801*^9, 3.836437644597682*^9}, {
   3.8364376880002823`*^9, 3.836437709193556*^9}, {3.836437779459613*^9, 
   3.8364378295922318`*^9}, {3.836437869794186*^9, 3.836437993783595*^9}, {
   3.836438246027851*^9, 3.83643839242073*^9}, {3.8364388642033587`*^9, 
   3.8364388870126867`*^9}, {3.8364389441978416`*^9, 3.836439045627264*^9}, {
   3.8364391363131123`*^9, 3.8364391939179697`*^9}, {3.836439271011978*^9, 
   3.836439289295817*^9}, {3.836439748456168*^9, 3.836439800869722*^9}, {
   3.836439869836697*^9, 3.8364399143923817`*^9}, {3.83644002920728*^9, 
   3.836440125229031*^9}, {3.83644017895439*^9, 3.836440217466807*^9}, {
   3.836440270200781*^9, 3.836440352121625*^9}, {3.8364412980453997`*^9, 
   3.836441306952517*^9}, {3.836441382888898*^9, 3.836441411644392*^9}, {
   3.836441448675198*^9, 3.836441538269858*^9}, {3.836441702335537*^9, 
   3.836441784613967*^9}, {3.8364418356205997`*^9, 3.836441847349182*^9}, {
   3.836441967323921*^9, 3.836441992709169*^9}, {3.8364421038481894`*^9, 
   3.8364421041609793`*^9}, 3.836442156492982*^9, {3.836442188475741*^9, 
   3.836442188850197*^9}, {3.836442424939149*^9, 3.836442588166378*^9}, {
   3.83644473866497*^9, 3.836444761062537*^9}, {3.836444800149248*^9, 
   3.8364448316259623`*^9}, {3.8364449000007057`*^9, 3.83644490076009*^9}, {
   3.836445180964286*^9, 3.8364452484252462`*^9}, {3.836445426556405*^9, 
   3.836445456290235*^9}, {3.836445509601437*^9, 3.836445525657544*^9}, {
   3.836445583103581*^9, 3.83644563572572*^9}, {3.836445696202444*^9, 
   3.836445700393218*^9}, {3.836515852762473*^9, 3.836515854930325*^9}, {
   3.836515886187128*^9, 3.8365160513180943`*^9}, {3.836516170600449*^9, 
   3.836516172605991*^9}, {3.836516253436407*^9, 3.836516274859737*^9}, {
   3.836516361434383*^9, 3.836516363625874*^9}, {3.8365178785120583`*^9, 
   3.836517934666033*^9}, {3.836518036752705*^9, 3.8365181059523373`*^9}, {
   3.8365182489803762`*^9, 3.8365182678107452`*^9}, {3.836518363183778*^9, 
   3.836518580836241*^9}, {3.836518622779644*^9, 3.8365186500425863`*^9}, {
   3.836518963924232*^9, 3.836518964973179*^9}, {3.83651930057049*^9, 
   3.8365193755618134`*^9}, {3.8365194336920223`*^9, 3.836519501051477*^9}, {
   3.83651963655967*^9, 3.836519646024172*^9}, {3.836519693539805*^9, 
   3.8365197208511*^9}, {3.83651978154847*^9, 3.83651985778389*^9}, {
   3.836519891930339*^9, 3.8365199114993877`*^9}, {3.836520008013914*^9, 
   3.836520015097906*^9}, {3.8365205745330343`*^9, 3.8365205817374353`*^9}, {
   3.8365213481830072`*^9, 3.836521350868718*^9}, {3.836596615193275*^9, 
   3.836596631240035*^9}, {3.8366006569761763`*^9, 3.836600658570538*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e872ceb4-9ec5-4ee2-a42f-47240db74582"],

Cell[BoxData["add"], "Output",
 CellChangeTimes->{
  3.8365946408966312`*^9, 3.8365966320031013`*^9, 3.836597498519628*^9, {
   3.836604094142292*^9, 3.836604108707899*^9}, {3.836604140752912*^9, 
   3.836604161046533*^9}, 3.836608727683169*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"7bbc9ba6-fa1b-4317-b9cc-a6ca011e322e"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4274#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4274#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4274#3"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
zpm6P/o//Wkqgg==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4346#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4388#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
6v73nQH6fwDWy7Cs
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4915#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
ZVc=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$4957#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5484#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
              0, 0, 0}, {0, -0.7071067811865475, 0.7071067811865475}}]]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}}, {{0, 0, 0}, {
              0, -0.7071067811865475, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.6123724356957945, 
              0.6123724356957945, 0.5}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 0}}, {{0, 0, 0}, {
              0.6123724356957945, 0.6123724356957945, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1: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
RpZZ5Ims7CHS9T+P/wDSE9aP
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 
              Rational[1, 2]}}, {{0, 0, 0}, {
             0.6123724356957945, 0.6123724356957945, 0}, {0.6123724356957945, 
             0.6123724356957945, 0.5}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}, {
             0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 0, 0}, {
             0, -0.7071067811865475, 0}, {
             0, -0.7071067811865475, 0.7071067811865475}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2] Rational[3, 2]^Rational[1, 2], 0}, {
           0.6123724356957945, 0.6123724356957945, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2]}, {0.6123724356957945, 0.6123724356957945, 0.5}], {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 8] Pi], 
            Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 8] Pi], 0}, {
           0.8001031451912655, 0.3314135740355918, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            2^Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
           0.35355339059327373`, 0.35355339059327373`, 0.8660254037844386}], {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{0, -2^Rational[-1, 2], 0}, {0, -0.7071067811865475, 0}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
           0, -0.7071067811865475, 0.7071067811865475}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[-1, 2], 
            Rational[1, 2], 0}, {-0.5, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{0, -Sin[Rational[1, 8] Pi], 
            Cos[Rational[1, 8] Pi]}, {
           0, -0.3826834323650898, 0.9238795325112867}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.22565717433841206`, -0.03490928635929297, 
          0.4448147720068303}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.5226251859505506, 0.2164784400584788, 0.}, {
          1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.05, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"4.71`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 0.79, 4.71], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.6500000000000001`\\\", \
TraditionalForm]\\), \[Phi]12=\\!\\(\\*FormBox[\\\"3.93`\\\", \
TraditionalForm]\\)\"", 
          StringForm[
          "\[Theta]12=`1`, \[Phi]12=`2`", 1.6500000000000001`, 3.93], 
          Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Angles Test\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8365946408966312`*^9, 3.8365966320031013`*^9, 3.836597498519628*^9, {
   3.836604094142292*^9, 3.836604108707899*^9}, {3.836604140752912*^9, 
   3.836604161046533*^9}, 3.836608728301293*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"3cfd8768-bafc-4310-a3d5-8154f9639c14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"makePlots12", "[", 
   RowBox[{"S1_", ",", "S2_", ",", " ", 
    RowBox[{"L_", ":", "\"\< \>\""}]}], " ", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ", 
         "0.01", ",", " ", 
         RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ", 
         "0.01", ",", " ", 
         RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]12", "=", 
       RowBox[{"Get\[Phi]12", "[", 
        RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]12", "=", 
       RowBox[{"Get\[Theta]12", "[", 
        RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Theta]i", "[", "S1", "]"}], "<", "0.1"}], ",", "0.1", 
         ",", 
         RowBox[{"Get\[Theta]i", "[", "S1", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Theta]i", "[", "S2", "]"}], "<", "0.1"}], ",", "0.1", 
         ",", 
         RowBox[{"Get\[Theta]i", "[", "S2", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S1p", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S1"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S2p", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S2"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S1label", "=", "\"\<1\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"S2label", "=", "\"\<12\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"S1Col", "=", " ", "Blue"}], ",", "\[IndentingNewLine]", 
      RowBox[{"S2Col", "=", "Purple"}], ",", "\[IndentingNewLine]", 
      RowBox[{"S12Col", "=", "Orange"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SpMag", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "#"}], "]"}], 
          "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"S1", ",", "S2"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"min\[Phi]", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "t", "]"}], ",", 
              RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Sin", "[", "t", "]"}], ",", 
              RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
              RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"ViewPoint", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\[Pi]", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "2"}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot3D", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "S1p", "]"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Phi]"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S1Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
             RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S1Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "S2p", "]"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Phi]2"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S2Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"\[Phi]2", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
             RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Theta]2"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S2Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Phi]", "!=", "\[Phi]2"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Phi]", ">", "\[Phi]2"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"ParametricPlot3D", "[", 
               RowBox[{
                RowBox[{"0.8", "SpMag", "*", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "t", "]"}], ",", 
                   RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "\[Phi]2", ",", "\[Phi]"}], "}"}], ",", 
                " ", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"S12Col", ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"ParametricPlot3D", "[", 
               RowBox[{
                RowBox[{"0.8", "SpMag", "*", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "t", "]"}], ",", 
                   RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "\[Phi]", ",", "\[Phi]2"}], "}"}], ",", 
                " ", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"S12Col", ",", 
                   RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}],
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"0.8", "SpMag", "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "t", "]"}], ",", 
                 RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "\[Phi]", ",", 
                RowBox[{"\[Phi]", "+", "0.001"}]}], "}"}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"S12Col", ",", 
                 RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Legended", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Black", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S2Col", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S2", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S2Col", ",", "Thick", ",", "Dashed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S2p", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S1Col", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S1", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S1Col", ",", "Thick", ",", "Dashed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S1p", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"S12Col", ",", " ", "Thick", ",", " ", 
                    RowBox[{"Arc3D", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5", "*", "S1"}], ",", 
                    RowBox[{"0.5", "*", "S2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                    "100"}], "]"}]}], "}"}], ","}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
                  "\[IndentingNewLine]", "S1Col", ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S1p", ",",
                     "S1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  "S2Col", ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S2p", ",",
                     "S2"}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.05", "]"}], ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Z\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1.1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<X\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"1.1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Y\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.1", ",", "0"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<-Z\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "1.1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S1label"}], "]"}], 
                    ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1p", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S1label"}], "]"}], ",",
                     " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1", ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S1label"}], "]"}],
                     ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Norm", "[", "S1p", "]"}], "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", "0"}], "}"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S1label"}], 
                    "]"}], ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                  
                  RowBox[{
                   RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S2label"}], "]"}], 
                    ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2p", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S2label"}], "]"}], ",",
                     " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2", ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S2label"}], "]"}],
                     ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Norm", "[", "S2p", "]"}], "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", "0"}], "}"}]}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S2label"}], 
                    "]"}], ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                  
                  RowBox[{
                   RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], 
               RowBox[{"(*", 
                RowBox[{",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\[Theta]12(rel)\>\"", ",", " ", "S12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                   RowBox[{"0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"S2", "+", "S1"}], ")"}], "/", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"S1", "+", "S2"}], "]"}]}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<\[Phi]12(rel)\>\"", ",", " ", "S12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                   RowBox[{"0.8", "SpMag", "*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "*)"}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
            ",", " ", 
            RowBox[{"PlotLabel", "\[Rule]", "L"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"LineLegend", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"S1Col", ",", "S2Col"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\< \[Theta]1=`1`,  \[Phi]1=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Theta]", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Phi]", ",", "0.01"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\< \[Theta]12=`1`,  \[Phi]12=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Theta]2", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Phi]2", ",", "0.01"}], "]"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"L", ",", " ", "Bold"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "3"}], ",", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"makePlots12", "[", 
  RowBox[{"S1", ",", "S2", ",", " ", "\"\<Angles Test\>\""}], "]"}]}], "Input",\

 CellChangeTimes->{{3.836520040369876*^9, 3.836520040651256*^9}, {
  3.836520589156629*^9, 3.836520695707687*^9}, {3.8365207299675493`*^9, 
  3.836520757015415*^9}, {3.836596659617942*^9, 3.836596686723771*^9}, {
  3.836596767949861*^9, 3.836596770368053*^9}, {3.836596841488533*^9, 
  3.836596874188105*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a9b6a33c-0700-4758-aeb6-3ba44d4f6872"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5803#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5803#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5803#3"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
zpm6P/o//Wkqgg==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5827#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$5869#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
6v73nQH6fwDWy7Cs
             "]]}, 
           Annotation[#, "Charting`Private`Tag$6396#1"]& ]}}, {}}, {{{{}, {}, 
          
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
ZVc=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$6438#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}], 
           Arrow3DBox[{{0, 0, 0}, {0, 0, -1}}]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
              0, 0, 0}, {0, -0.7071067811865475, 0.7071067811865475}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}}, {{0, 0, 0}, {
              0, -0.7071067811865475, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.6123724356957945, 
              0.6123724356957945, 0.5}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 0}}, {{0, 0, 0}, {
              0.6123724356957945, 0.6123724356957945, 0}}]]}}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 
              Rational[1, 2]}}, {{0, 0, 0}, {
             0.6123724356957945, 0.6123724356957945, 0}, {0.6123724356957945, 
             0.6123724356957945, 0.5}}]], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}, {
             0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 0, 0}, {
             0, -0.7071067811865475, 0}, {
             0, -0.7071067811865475, 0.7071067811865475}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox["\"Y\"", TraditionalForm], {0, 1.1, 0}], 
         Text3DBox[
          FormBox["\"-Z\"", TraditionalForm], {0, 0, -1.1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
           Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
            Rational[3, 2]^Rational[1, 2], 0}, {
           0.6123724356957945, 0.6123724356957945, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2]}, {0.6123724356957945, 0.6123724356957945, 0.5}], {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 8] Pi], 
            Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 8] Pi], 0}, {
           0.8001031451912655, 0.3314135740355918, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            2^Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
           0.35355339059327373`, 0.35355339059327373`, 0.8660254037844386}], {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12p\"", 
             StringForm["s`1`p", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{0, -2^Rational[-1, 2], 0}, {0, -0.7071067811865475, 0}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s12\"", 
             StringForm["s`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
           0, -0.7071067811865475, 0.7071067811865475}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]12\"", 
             StringForm["\[Phi]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{
            Rational[-1, 2], 
            Rational[1, 2], 0}, {-0.5, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]12\"", 
             StringForm["\[Theta]`1`", "12"], Editable -> False], 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          NCache[{0, -Sin[Rational[1, 8] Pi], 
            Cos[Rational[1, 8] Pi]}, {
           0, -0.3826834323650898, 0.9238795325112867}], {1, 1}]}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.05, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]12=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\),  \
\[Phi]12=\\!\\(\\*FormBox[\\\"4.71`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]12=`1`,  \[Phi]12=`2`", 0.79, 4.71], Editable -> 
          False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Angles Test\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594643109297*^9, 3.836596775181205*^9, 3.8365968814895363`*^9, 
   3.836597500463685*^9, {3.8366040947077417`*^9, 3.836604109809043*^9}, {
   3.836604141583042*^9, 3.836604161650565*^9}, 3.8366087301109133`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"3dcf3801-2359-43cb-aeb5-9824ff936d1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"makePlotAll", "[", 
   RowBox[{"S1_", ",", "S2_", ",", " ", "S12_", ",", 
    RowBox[{"L_", ":", "\"\< \>\""}]}], " ", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"S1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"S2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ", 
         "0.01", ",", " ", 
         RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ", 
         "0.01", ",", " ", 
         RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"t\[Phi]12", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Phi]i", "[", "S12", "]"}], "<", "0.01"}], ",", " ", 
         "0.01", ",", " ", 
         RowBox[{"Get\[Phi]i", "[", "S12", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]12", "=", 
       RowBox[{"Get\[Phi]12", "[", 
        RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]12", "=", 
       RowBox[{"Get\[Theta]12", "[", 
        RowBox[{"S1", ",", "S2"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Theta]i", "[", "S1", "]"}], "<", "0.1"}], ",", "0.1", 
         ",", 
         RowBox[{"Get\[Theta]i", "[", "S1", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Theta]i", "[", "S2", "]"}], "<", "0.1"}], ",", "0.1", 
         ",", 
         RowBox[{"Get\[Theta]i", "[", "S2", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"t\[Theta]12", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Get\[Theta]i", "[", "S12", "]"}], "<", "0.1"}], ",", "0.1",
          ",", 
         RowBox[{"Get\[Theta]i", "[", "S12", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S1p", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S1"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S2p", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S2"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"tS12p", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "S12"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"S1label", "=", "\"\<1\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"S2label", "=", "\"\<2\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"S1Col", "=", " ", "Blue"}], ",", "\[IndentingNewLine]", 
      RowBox[{"S2Col", "=", "Red"}], ",", "\[IndentingNewLine]", 
      RowBox[{"S12Col", "=", "Orange"}], ",", "\[IndentingNewLine]", 
      RowBox[{"tS12Col", " ", "=", " ", "Purple"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SpMag", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], "*", "#"}], "]"}], 
          "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"S1", ",", "S2"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"min\[Phi]", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S1", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S1", "]"}]}], "]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Get\[Phi]i", "[", "S2", "]"}], "<", "0.01"}], ",", " ", 
           "0.01", ",", " ", 
           RowBox[{"Get\[Phi]i", "[", "S2", "]"}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "t", "]"}], ",", 
              RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Sin", "[", "t", "]"}], ",", 
              RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
              RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"ViewPoint", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\[Pi]", ",", 
             RowBox[{"\[Pi]", "/", "2"}], ",", "2"}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot3D", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "S1p", "]"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Phi]"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S1Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
             RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S1Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "S2p", "]"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Phi]2"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S2Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"\[Phi]2", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
             RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Theta]2"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"S2Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "tS12p", "]"}], "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "t\[Phi]12"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"tS12Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{"t\[Phi]12", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
             RowBox[{"Cos", "[", "t", "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "t\[Theta]12"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"tS12Col", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Phi]", "!=", "\[Phi]2"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Phi]", ">", "\[Phi]2"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"0.8", "SpMag", "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "t", "]"}], ",", 
                 RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "\[Phi]2", ",", "\[Phi]"}], "}"}], ",", " ", 
              
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"S12Col", ",", 
                 RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"0.8", "SpMag", "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "t", "]"}], ",", 
                 RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "\[Phi]", ",", "\[Phi]2"}], "}"}], ",", " ", 
              
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"S12Col", ",", 
                 RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{"0.8", "SpMag", "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], ",", 
               RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\[Phi]", ",", 
              RowBox[{"\[Phi]", "+", "0.001"}]}], "}"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"S12Col", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Legended", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Black", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S2Col", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S2", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S2Col", ",", "Thick", ",", "Dashed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S2p", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S1Col", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S1", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S1Col", ",", "Thick", ",", "Dashed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S1p", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"tS12Col", ",", "Thick", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "S12", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"tS12Col", ",", "Thick", ",", "Dashed", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], 
                    "}"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", "tS12p", "}"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"S12Col", ",", " ", "Thick", ",", " ", 
                  RowBox[{"Arc3D", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5", "*", "S1"}], ",", 
                    RowBox[{"0.5", "*", "S2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                    "100"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
                  "\[IndentingNewLine]", "S1Col", ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S1p", ",",
                     "S1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  "S2Col", ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "S2p", ",",
                     "S2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  "tS12Col", ",", 
                  RowBox[{"Polygon", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "tS12p", 
                    ",", "S12"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
                 "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.05", "]"}], ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Opacity", "[", "1.0", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Z\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1.1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<X\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"1.1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S1label"}], "]"}], 
                    ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1p", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S1label"}], "]"}], ",",
                     " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", "S1", ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S1label"}], "]"}],
                     ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Norm", "[", "S1p", "]"}], "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]", "/", "2"}], "]"}], ",", "0"}], "}"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S1label"}], 
                    "]"}], ",", " ", "S1Col", ",", " ", "Bold"}], "]"}], ",", 
                  
                  RowBox[{
                   RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`p\>\"", ",", " ", "S2label"}], "]"}], 
                    ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2p", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<s`1`\>\"", ",", " ", "S2label"}], "]"}], ",",
                     " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", "S2", ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Phi]`1`\>\"", ",", " ", "S2label"}], "]"}],
                     ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Norm", "[", "S2p", "]"}], "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Phi]2", "/", "2"}], "]"}], ",", "0"}], "}"}]}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<\[Theta]`1`\>\"", ",", " ", "S2label"}], 
                    "]"}], ",", " ", "S2Col", ",", " ", "Bold"}], "]"}], ",", 
                  
                  RowBox[{
                   RowBox[{"RotationTransform", "[", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]2", "/", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<ts12\>\"", ",", " ", "tS12Col", ",", " ", "Bold"}], 
                   "]"}], ",", "S12", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<t\[Phi]12`\>\"", ",", " ", "tS12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"Norm", "[", "tS12p", "]"}], "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"t\[Phi]12", "/", "2"}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"t\[Phi]12", "/", "2"}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<t\[Theta]12\>\"", ",", " ", "tS12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"RotationTransform", "[", 
                    RowBox[{"t\[Phi]12", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"t\[Theta]12", "/", "2"}], "]"}], ",", "0", ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"t\[Theta]12", "/", "2"}], "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\[Theta]12\>\"", ",", " ", "S12Col", ",", " ", 
                    "Bold"}], "]"}], ",", 
                  RowBox[{"0.5", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"S2", "+", "S1"}], ")"}], "/", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"S1", "+", "S2"}], "]"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\[Phi]12\>\"", ",", " ", "S12Col", ",", " ", "Bold"}],
                    "]"}], ",", 
                  RowBox[{"0.8", "SpMag", "*", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"min\[Phi]", "+", 
                    RowBox[{"\[Phi]12", "/", "2"}]}], "]"}], ",", "0"}], 
                    "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", "L"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"LineLegend", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "S1Col", ",", "S2Col", ",", "S12Col", ",", " ", "tS12Col"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\< \[Theta]1=`1`,  \[Phi]1=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Theta]", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Phi]", ",", "0.01"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\< \[Theta]2=`1`,  \[Phi]2=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Theta]2", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Phi]2", ",", "0.01"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\<\[Theta]12=`1`, \[Phi]12=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Theta]12", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"\[Phi]12", ",", "0.01"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\<t\[Theta]12=`1`, t\[Phi]12=`2`\>\"", ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"t\[Theta]12", ",", "0.01"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"t\[Phi]12", ",", "0.01"}], "]"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"L", ",", " ", "Bold"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "3"}], ",", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", " ", 
   RowBox[{"ToCartesian", "[", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], ",", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S12", " ", "=", " ", 
   RowBox[{"gets12", "[", 
    RowBox[{"S1", ",", "S2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"makePlotAll", "[", 
  RowBox[{"S1", ",", "S2", ",", "S12", ",", " ", "\"\<Angles Test\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.836523228879524*^9, 3.836523496725218*^9}, {
  3.836523557097919*^9, 3.836523592700025*^9}, {3.8365236243930902`*^9, 
  3.83652365154217*^9}, {3.836523747966416*^9, 3.836523752761898*^9}, {
  3.836523926589492*^9, 3.83652393867752*^9}, {3.836523969602047*^9, 
  3.836523991939044*^9}, {3.836524500015143*^9, 3.836524577646494*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"25968e85-611b-4f7d-85fd-21f23cfa5259"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     Graphics3DBox[{{{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
OQm6hP/3P/uBEz7/+5+98D//Py7NwpQ=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$46790#1"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
b6HfJN9zJODfPXvJ/+/Z/wcFTMKU
             "]]}, 
           Annotation[#, "Charting`Private`Tag$46790#2"]& ], 
          TagBox[{
            AbsoluteThickness[2], 
            GrayLevel[0], 
            Opacity[0.05], 
            Line3DBox[CompressedData["
1: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
9x33/d//2Qv+8//+z/5/dX7ClA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$46790#3"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
zpm6P/o//Wkqgg==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$46814#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$46856#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
6v73nQH6fwDWy7Cs
             "]]}, 
           Annotation[#, "Charting`Private`Tag$47383#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
ZVc=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$47425#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1:eJxN2Ac0lf8fB3CV8iuUkJGGkkgkSVLq8aOhRMPKr0RGRrJHKHuF69plk70i
s6wvmVmVyEjW5V77QUX8xP/pnP/v+733nOfcc17nOc/93u/8vJ8Deha3DDcy
MDBMEdcm4lpgvbGVl4pjqw84vi5Y2Z1n+P8nV47Pm5vwjo7aG8vZqth/HmT5
/Bc74dzdLk/bsvWhK7LU6zMTLmowbBPr/gj63daUBgbCw25yqxRl20DnKZQ+
8H0Mx+7/9PZ8EfkY+nMWV5sRwo3syXpO7k+hy72VWC8lvKRNJyE62xN63K6k
0/GEh8ddSttywAf6vqVWE3fCD1KSQi0j/aCX+BoWnv/zu1/uiZ5zJ0FPKvlF
CR/FMeeE62Za2WHQ17ZnftUjPDNvEmyihkPXoUm2iBHu6TXNlcMfCT2cPBNS
RsExKcpTzcWIF9BvCAZX5Y3gmB63+rdHbnHQowpdo/8awrGWNkVjo6xk6JSG
L+xpgzjmEdeUlXo5Bfrfqc6ecoT33KpcHx5F7pTdpWw2gGMCV86mqu1Pg551
e8o3oR/HMHlWWf7wDOgGC6Extj04RvLr81Z4mgtddyouobcNx4LNm9cy0gqh
m5nyp28mvEmBNlr4L/K9PVsPHGvFsZDNluSKG0XQ3aWtzWybccz4dR1z4wry
ZkU1gy8NOKbc4vUcqJSg9rN743gV0T9vw3NOLb6B/rs15W+nHBwLeCP6YEW+
Crrr24KQ709wzEciZyPFuA66jYOuR8zaLPZvlH6fhkg7mrcr9xm/qc5iTAZr
GckNn6Ev9vb2axjNYPNn+x3OVfRA/yq027vzzjSmoGW3bVnqG3RLGT7bnr+m
sHd6JZJGs0PQPawDF5ICJ7Dp80VmyrwU6C6TEYITG8ax3Rk8YhwbxqBrVNrJ
LYpSMTfdpAamWSr0VyQN8Weqo5iY+/0Ir4hx9Bxm3vFugxFsocr6TNmOSej8
a5u1ZcSGsDYFsUEBlynoJiRN4ZFN/VjW6E1qUsY0dMn9XRc38ndj6sP8EtVl
M9CrTkuYpol0YM5tzziYwmehK1WONYL+ZoyJJCLBKY5DZ2hsTLxY2IwNR9Sz
qkggPy3P69P0rBm79yjfwUsSeSibvl/9qWZM9bHzAlUaeWLejunY4PdY04Tg
Uw855CPWtSfrFZqwAycZCzhu0t3fJLNpT0Y9FnL5DVOcBXI8sO/smEk1FoGn
cci9RF780OlQonw1psUo5++VjFxS/dwTLb5qzFS0/0d9CvJLjDFs5CiACZ54
mYqlI6fJsS0f1KnCHo5xWm/PoXNyy9XqiXLs/v5tcbzFyLfviF3f/LsE2+mj
5DJWh3xXBsvlw69KMFrc+vmmeuTHo/7RuaBTghWymc6lNyB/ZjfP71RTjPUL
sQjea0KuLNRS0epdhIl7yH5ObUEuLPT5N+f2AuzcW4YTLz8h15LVbWw7k4WR
NEVcVL7SjdcnyRIjcibWGRH9oZfOl6yP1qxRMrCnet987vcj/xbM6niIlI6l
58YdfvCNrp+ttck3BlOw8a12Ry4MImdW2+HSJZmCbRoaSS+g879sVwRu+yVj
xhOFAXuHkC9fZaFoSLzEtNKue47TeXKqVPTjLQmYNKuUhOoI8qzQg0f08uKw
bppbbwqdp1m03VW8HYsx5fVRF+g8ItZfmTkrClPfF3Hci4Lcm/Qz1EI5HKvg
UHR1HkVOXjvgI78YijkyC1zPp/N9eyzVOBJCsM/go+cwnR/ivHn23jAJi/QO
4pMZQ94melw+XcgTU320k7GSzn+ulWtKOrphupq/lzvpvEWdwu8c4YyRqdFq
E3S+FD9gE3jaHitto3Gs0LmlVZpCzFdLjEt4RJqJirz/Dq5x4/cDTMXRr5qN
zi1en9v9wec2Zpzbm8tF57WXtTd/eS6MdfF0rfPQuTLfyHyv7i1g+tiphJvO
nQTPKmpM6gOj+fef2Om8d5xV81yKOTDfWXdzG50b+To4sOXZgoB2k1NrdO3X
0CqYXmd2AmK+Fa6zdB5ZvmIxbewKxDdWiX2lcz2RbYWTeh6g1dxSro7O8emx
fW3AF7RRFsIC6Dwu19H2jLk/yFR732lC5+X5660pe0hgu5+20wU6n2yQziiV
DQFlnh+/z9KNb77JeIhJVCQ4WmOZyEPnx4QcvA9lJgILY0tq1TByLr0F9YCb
SUCc1V7YkM639EsrzC0nAfel5TkmOm9kfyNSdDUZqCSl7lKgm//ysaVHD06n
gg1x1a/IA8gFQzpoPseyQWj3mIhHH3K7VHtbx54CUL/8sbj1A3IxO+3RJ6KF
4OTGlJFNdN758+o5F7dCECSw+Fy6HTnpS7S3k3ARqD5gFRveSrcvDVZb3H5c
DI5cubJD8D3yK4WBGUncbwCT4fLrhBq637V6mXtErRJQu4ezVvOQV3xkP3v2
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
6Q==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$47952#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[0.5, 0, 0.5], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
iDYaYqXm7WFeCP8DIydotw==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$47994#1"]& ]}}, {}}, {{{{}, {}, 
          TagBox[{
            AbsoluteThickness[2], 
            RGBColor[1, 0.5, 0], 
            Opacity[0.5], 
            Line3DBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$48831#1"]& ]}}, {}}, {{{
          GrayLevel[0], 
          Thickness[Large], {
           Arrow3DBox[{{0, 0, 0}, {0, 0, 1}}], 
           Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
              0, 0, 0}, {0, -0.7071067811865475, 0.7071067811865475}}]]}}, {
          RGBColor[1, 0, 0], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}}, {{0, 0, 0}, {
              0, -0.7071067811865475, 0}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 
               Rational[1, 2]}}, {{0, 0, 0}, {0.6123724356957945, 
              0.6123724356957945, 0.5}}]]}}, {
          RGBColor[0, 0, 1], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 0}, {
              Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
               Rational[3, 2]^Rational[1, 2], 0}}, {{0, 0, 0}, {
              0.6123724356957945, 0.6123724356957945, 0}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], {
           Arrow3DBox[
            
            NCache[{{0, 0, 
              0}, {-(Rational[1, 2] (1 + 
                  Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(
                 1 + Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                 Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
                Rational[1, 2], -(
                 Rational[1, 2] (1 + 
                  Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(
                 1 + Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                 Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
                Rational[1, 2], 
               Rational[1, 4] (2^Rational[1, 2] - 3^
                Rational[1, 2]) (1 + 
                 Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                 Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)^
                Rational[-1, 2]}}, {{0, 0, 
              0}, {-0.7048709874324156, -0.7048709874324156, \
-0.07945931129894551}}]]}}, {
          RGBColor[0.5, 0, 0.5], 
          Thickness[Large], 
          Dashing[{Small, Small}], {
           Line3DBox[
            
            NCache[{{0, 0, 
              0}, {-(Rational[1, 2] (1 + 
                  Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(
                 1 + Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                 Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
                Rational[1, 2], -(
                 Rational[1, 2] (1 + 
                  Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(
                 1 + Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                 Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
                Rational[1, 2], 0}}, {{0, 0, 
              0}, {-0.7048709874324156, -0.7048709874324156, 0}}]]}}, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Line3DBox[CompressedData["
1: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
RpZZ5Ims7CHS9T+P/wDSE9aP
           "]]}, {
          Opacity[0.1], 
          RGBColor[0, 0, 1], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 0}, {
             Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
              Rational[3, 2]^Rational[1, 2], 
              Rational[1, 2]}}, {{0, 0, 0}, {
             0.6123724356957945, 0.6123724356957945, 0}, {0.6123724356957945, 
             0.6123724356957945, 0.5}}]], 
          RGBColor[1, 0, 0], 
          Polygon3DBox[
           
           NCache[{{0, 0, 0}, {0, -2^Rational[-1, 2], 0}, {
             0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 0, 0}, {
             0, -0.7071067811865475, 0}, {
             0, -0.7071067811865475, 0.7071067811865475}}]], 
          RGBColor[0.5, 0, 0.5], 
          Polygon3DBox[
           
           NCache[{{0, 0, 
             0}, {-(Rational[1, 2] (1 + 
                 Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
                Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
               Rational[1, 2], -(
                Rational[1, 2] (1 + 
                 Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
                Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
               Rational[1, 2], 
              0}, {-(Rational[1, 2] (1 + 
                 Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
                Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
               Rational[1, 2], -(
                Rational[1, 2] (1 + 
                 Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
                Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
               Rational[1, 2], 
              Rational[1, 4] (2^Rational[1, 2] - 3^
               Rational[1, 2]) (1 + 
                Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)^
               Rational[-1, 2]}}, {{0, 0, 
             0}, {-0.7048709874324156, -0.7048709874324156, 
              0}, {-0.7048709874324156, -0.7048709874324156, \
-0.07945931129894551}}]]}}, {
         Opacity[0.05], 
         SphereBox[{0, 0, 0}]}, {
         Opacity[1.], 
         Text3DBox[
          FormBox["\"Z\"", TraditionalForm], {0, 0, 1.1}], 
         Text3DBox[
          FormBox["\"X\"", TraditionalForm], {1.1, 0, 0}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1p\"", 
             StringForm["s`1`p", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2] Rational[3, 2]^Rational[1, 2], 0}, {
           0.6123724356957945, 0.6123724356957945, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s1\"", 
             StringForm["s`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2] Rational[3, 2]^Rational[1, 2], 
            Rational[1, 2]}, {0.6123724356957945, 0.6123724356957945, 0.5}], {
          0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]1\"", 
             StringForm["\[Phi]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 8] Pi], 
            Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 8] Pi], 0}, {
           0.8001031451912655, 0.3314135740355918, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]1\"", 
             StringForm["\[Theta]`1`", "1"], Editable -> False], 
            RGBColor[0, 0, 1], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{Rational[1, 2] 2^Rational[-1, 2], Rational[1, 2] 
            2^Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
           0.35355339059327373`, 0.35355339059327373`, 0.8660254037844386}], {
          1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2p\"", 
             StringForm["s`1`p", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{0, -2^Rational[-1, 2], 0}, {0, -0.7071067811865475, 0}], {1,
           1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"s2\"", 
             StringForm["s`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          
          NCache[{0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
           0, -0.7071067811865475, 0.7071067811865475}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Phi]2\"", 
             StringForm["\[Phi]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{
            Rational[-1, 2], 
            Rational[1, 2], 0}, {-0.5, 0.5, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox[
            InterpretationBox["\"\[Theta]2\"", 
             StringForm["\[Theta]`1`", "2"], Editable -> False], 
            RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm], 
          NCache[{0, -Sin[Rational[1, 8] Pi], 
            Cos[Rational[1, 8] Pi]}, {
           0, -0.3826834323650898, 0.9238795325112867}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"ts12\"", 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{-(
              Rational[1, 2] (1 + 
               Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
              Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
              Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
             Rational[1, 2], -(
              Rational[1, 2] (1 + 
               Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
              Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
              Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
             Rational[1, 2], 
            Rational[1, 4] (2^Rational[1, 2] - 3^
             Rational[1, 2]) (1 + 
              Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
              Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)^
             Rational[-1, 
               2]}, {-0.7048709874324156, -0.7048709874324156, \
-0.07945931129894551}], {0, -1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"t\[Phi]12`\"", 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{-((1 + 
               Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
              Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
              Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
             Rational[1, 2] 
            Sin[Rational[1, 8] 
              Pi], ((1 + 
               Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2)/(1 + 
              Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
              Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2))^
             Rational[1, 2] Cos[Rational[1, 8] Pi], 0}, {-0.3814734295046224, 
            0.9209583271950361, 0}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"t\[Theta]12\"", 
            RGBColor[0.5, 0, 0.5], Bold, StripOnInput -> False], 
           TraditionalForm], 
          
          NCache[{-2^Rational[-1, 2] 
            Sin[Rational[1, 2] 
              ArcCos[Rational[1, 4] (2^Rational[1, 2] - 3^
                 Rational[
                  1, 2]) ((1 + 
                   Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                   Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) (
                   Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2/(
                    1 + Rational[-1, 16] (2^Rational[1, 2] - 3^
                    Rational[1, 2])^2 + 
                    Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) + (1 + 
                    Rational[-1, 16] (2^Rational[1, 2] - 3^
                    Rational[1, 2])^2)/(1 + 
                    Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                    Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)))^
                 Rational[-1, 2]]], -2^Rational[-1, 2] 
            Sin[Rational[1, 2] 
              ArcCos[Rational[1, 4] (2^Rational[1, 2] - 3^
                 Rational[
                  1, 2]) ((1 + 
                   Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                   Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) (
                   Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2/(
                    1 + Rational[-1, 16] (2^Rational[1, 2] - 3^
                    Rational[1, 2])^2 + 
                    Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) + (1 + 
                    Rational[-1, 16] (2^Rational[1, 2] - 3^
                    Rational[1, 2])^2)/(1 + 
                    Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                    Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)))^
                 Rational[-1, 2]]], 
            Cos[
            Rational[1, 2] 
             ArcCos[Rational[1, 4] (2^Rational[1, 2] - 3^
                Rational[
                 1, 2]) ((1 + 
                  Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                  Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) (
                  Rational[1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2/(1 + 
                   Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                   Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2) + (1 + 
                    Rational[-1, 16] (2^Rational[1, 2] - 3^
                    Rational[1, 2])^2)/(1 + 
                   Rational[-1, 16] (2^Rational[1, 2] - 3^Rational[1, 2])^2 + 
                   Rational[
                    1, 16] (-2^Rational[1, 2] + 3^Rational[1, 2])^2)))^
                Rational[-1, 2]]]}, {-0.5194851565008728, -0.5194851565008728,
            0.6784322695380338}], {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Theta]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {0.22565717433841206`, -0.03490928635929297, 
          0.4448147720068303}, {1, 1}], 
         Text3DBox[
          FormBox[
           StyleBox["\"\[Phi]12\"", 
            RGBColor[1, 0.5, 0], Bold, StripOnInput -> False], 
           TraditionalForm], {-0.5226251859505506, 0.2164784400584788, 0.}, {
          1, 1}]}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, ImagePadding -> Automatic, DisplayFunction -> 
       Identity, AxesLabel -> {
         FormBox["\"x\"", TraditionalForm], 
         FormBox["\"y\"", TraditionalForm], 
         FormBox["\"z\"", TraditionalForm]}, Boxed -> False, DisplayFunction :> 
       Identity, FaceGridsStyle -> Automatic, 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}}, 
       PlotRange -> {{-0.9999998830731719, 
        0.9999999999999918}, {-0.9999998592131705, 
        0.9999998782112116}, {-0.9999998830731719, 0.9999999999999918}}, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, ViewPoint -> 
       NCache[{Pi, Rational[1, 2] Pi, 2}, {
         3.141592653589793, 1.5707963267948966`, 2}]}], 
     FormBox[
      FormBox[
       TemplateBox[{
         InterpretationBox[
         "\" \[Theta]1=\\!\\(\\*FormBox[\\\"1.05`\\\", TraditionalForm]\\),  \
\[Phi]1=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]1=`1`,  \[Phi]1=`2`", 1.05, 0.79], Editable -> 
          False], 
         InterpretationBox[
         "\" \[Theta]2=\\!\\(\\*FormBox[\\\"0.79`\\\", TraditionalForm]\\),  \
\[Phi]2=\\!\\(\\*FormBox[\\\"4.71`\\\", TraditionalForm]\\)\"", 
          StringForm[" \[Theta]2=`1`,  \[Phi]2=`2`", 0.79, 4.71], Editable -> 
          False], 
         InterpretationBox[
         "\"\[Theta]12=\\!\\(\\*FormBox[\\\"1.6500000000000001`\\\", \
TraditionalForm]\\), \[Phi]12=\\!\\(\\*FormBox[\\\"3.93`\\\", \
TraditionalForm]\\)\"", 
          StringForm[
          "\[Theta]12=`1`, \[Phi]12=`2`", 1.6500000000000001`, 3.93], 
          Editable -> False], 
         InterpretationBox[
         "\"t\[Theta]12=\\!\\(\\*FormBox[\\\"1.6500000000000001`\\\", \
TraditionalForm]\\), t\[Phi]12=\\!\\(\\*FormBox[\\\"3.93`\\\", \
TraditionalForm]\\)\"", 
          StringForm[
          "t\[Theta]12=`1`, t\[Phi]12=`2`", 1.6500000000000001`, 3.93], 
          Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   StyleBox["\"Angles Test\"", Bold, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"Top", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.836594645026587*^9, 3.836597502643744*^9, {3.836604095286312*^9, 
   3.836604111081345*^9}, {3.8366041428180656`*^9, 3.8366041622271757`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"2d504bfc-9fa1-4a6e-a66d-6da4c1352483"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualise Angles", "Subsubsection",
 CellChangeTimes->{{3.836437293986577*^9, 3.836437300267158*^9}, {
  3.836442687471147*^9, 
  3.836442689881361*^9}},ExpressionUUID->"5844345c-0578-4869-8deb-\
58083d305022"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"S1", "=", " ", 
        RowBox[{"ToCartesian", "[", 
         RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"S2", "=", " ", 
        RowBox[{"ToCartesian", "[", 
         RowBox[{"\[Theta]2", ",", "\[Phi]2"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"makePlot", "[", 
      RowBox[{
      "S1", ",", "S2", ",", " ", 
       "\"\<Visualise S1 S2's resultant \[Theta]12 \[Phi]12\>\""}], "]"}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]1", ",", "0"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", 
       RowBox[{"\[Pi]", "/", "3"}]}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]2", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836428698574717*^9, 3.836428768108094*^9}, {
  3.836428819733739*^9, 3.836428840900812*^9}, {3.836428873439436*^9, 
  3.836428890474165*^9}, {3.8364290407004642`*^9, 3.836429081007284*^9}, {
  3.836429117738817*^9, 3.836429118638307*^9}, {3.8364370015867777`*^9, 
  3.836437022598578*^9}, {3.8364370856295767`*^9, 3.836437096959635*^9}, {
  3.83643814716998*^9, 3.836438200118429*^9}, {3.836439087632556*^9, 
  3.8364390941607037`*^9}, {3.8365156714075212`*^9, 3.836515691456599*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"dd1f5c4c-6644-412c-a187-d2ed50dbd09a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]1$$ = Rational[1, 2] 
    Pi, $CellContext`\[Theta]2$$ = Rational[1, 3] Pi, $CellContext`\[Phi]1$$ =
     0, $CellContext`\[Phi]2$$ = Rational[1, 2] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]1$$], Rational[1, 2] Pi}, 0.01, 
      3.1315926535897933`}, {{
       Hold[$CellContext`\[Phi]1$$], 0}, 0, 2 Pi}, {{
       Hold[$CellContext`\[Theta]2$$], Rational[1, 3] Pi}, 0.01, 
      3.1315926535897933`}, {{
       Hold[$CellContext`\[Phi]2$$], Rational[1, 2] Pi}, 0, 2 Pi}}, 
    Typeset`size$$ = {525., {178., 199.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]1$$ = 
        Rational[1, 2] Pi, $CellContext`\[Theta]2$$ = 
        Rational[1, 3] Pi, $CellContext`\[Phi]1$$ = 0, $CellContext`\[Phi]2$$ = 
        Rational[1, 2] Pi}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`S1 = \
$CellContext`ToCartesian[$CellContext`\[Theta]1$$, $CellContext`\[Phi]1$$], \
$CellContext`S2 = $CellContext`ToCartesian[$CellContext`\[Theta]2$$, \
$CellContext`\[Phi]2$$]}, 
        $CellContext`makePlot[$CellContext`S1, $CellContext`S2, 
         "Visualise S1 S2's resultant \[Theta]12 \[Phi]12"]], 
      "Specifications" :> {{{$CellContext`\[Theta]1$$, Rational[1, 2] Pi}, 
         0.01, 3.1315926535897933`}, {{$CellContext`\[Phi]1$$, 0}, 0, 2 
         Pi}, {{$CellContext`\[Theta]2$$, Rational[1, 3] Pi}, 0.01, 
         3.1315926535897933`}, {{$CellContext`\[Phi]2$$, Rational[1, 2] Pi}, 
         0, 2 Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{570., {273., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.836597047825685*^9, {3.836604095345195*^9, 3.836604111188509*^9}, {
   3.836604142910969*^9, 3.836604162279799*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"44add765-4ffc-4df0-af16-84daadb43ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"S1", "=", " ", 
        RowBox[{"ToCartesian", "[", 
         RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"S2", "=", "  ", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Rztos1", "[", 
           RowBox[{"y\[Theta]", ",", "z\[Phi]"}], "]"}], "]"}], ".", 
         RowBox[{"ToCartesian", "[", 
          RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"makePlot", "[", 
      RowBox[{"S1", ",", "S2", ",", " ", "\"\<Visualise Rotation\>\""}], 
      "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]1", ",", 
       RowBox[{"\[Pi]", "/", "3"}]}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y\[Theta]", ",", "0.01"}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z\[Phi]", ",", "0"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8365241239217854`*^9, 3.8365241648153563`*^9}, {
  3.836524200113303*^9, 3.836524225798335*^9}, {3.836524296842951*^9, 
  3.836524304469129*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"4753c06c-497f-4e9d-ac79-91f447552712"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`y\[Theta]$$ = 0.01, $CellContext`z\[Phi]$$ =
     0, $CellContext`\[Theta]1$$ = Rational[1, 2] Pi, $CellContext`\[Phi]1$$ =
     Rational[1, 3] Pi, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]1$$], Rational[1, 2] Pi}, 0.01, 
      3.1315926535897933`}, {{
       Hold[$CellContext`\[Phi]1$$], Rational[1, 3] Pi}, 0, 2 Pi}, {{
       Hold[$CellContext`y\[Theta]$$], 0.01}, 0.01, 3.1315926535897933`}, {{
       Hold[$CellContext`z\[Phi]$$], 0}, 0, 2 Pi}}, Typeset`size$$ = {
    518., {178., 199.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`y\[Theta]$$ = 0.01, $CellContext`z\[Phi]$$ = 
        0, $CellContext`\[Theta]1$$ = 
        Rational[1, 2] Pi, $CellContext`\[Phi]1$$ = Rational[1, 3] Pi}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`S1 = \
$CellContext`ToCartesian[$CellContext`\[Theta]1$$, $CellContext`\[Phi]1$$], \
$CellContext`S2 = Dot[
           Transpose[
            $CellContext`Rztos1[$CellContext`y\[Theta]$$, \
$CellContext`z\[Phi]$$]], 
           $CellContext`ToCartesian[$CellContext`\[Theta]1$$, $CellContext`\
\[Phi]1$$]]}, 
        $CellContext`makePlot[$CellContext`S1, $CellContext`S2, 
         "Visualise Rotation"]], 
      "Specifications" :> {{{$CellContext`\[Theta]1$$, Rational[1, 2] Pi}, 
         0.01, 3.1315926535897933`}, {{$CellContext`\[Phi]1$$, Rational[1, 3] 
          Pi}, 0, 2 Pi}, {{$CellContext`y\[Theta]$$, 0.01}, 0.01, 
         3.1315926535897933`}, {{$CellContext`z\[Phi]$$, 0}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{563., {273., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8366040956030273`*^9, 3.836604111494063*^9}, {
  3.836604144207954*^9, 3.836604162558816*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"09fa2068-db2d-400e-95c2-2ce6c17cef1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"S1", "=", " ", 
        RowBox[{"ToCartesian", "[", 
         RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"S2", "=", " ", 
        RowBox[{"ToCartesian", "[", 
         RowBox[{"\[Theta]2", ",", "\[Phi]2"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"S12", " ", "=", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Rztos1", "[", 
           RowBox[{"y\[Theta]", ",", "z\[Phi]"}], "]"}], "]"}], ".", 
         RowBox[{"ToCartesian", "[", 
          RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"makePlotAll", "[", 
      RowBox[{
      "S1", ",", "S2", ",", " ", "S12", ",", "\"\<Rotate S12 vector\>\""}], 
      "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]1", ",", "0"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", 
       RowBox[{"\[Pi]", "/", "3"}]}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]2", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y\[Theta]", ",", "0.01"}], "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "-", "0.01"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z\[Phi]", ",", "0.01"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8365231134665422`*^9, {3.836524028131378*^9, 3.8365241145070753`*^9}, {
   3.836524319439597*^9, 3.836524345071932*^9}, {3.836524382037903*^9, 
   3.836524410424231*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"5478a1d4-8648-4721-9f41-8916413eb011"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`y\[Theta]$$ = 0.01, $CellContext`z\[Phi]$$ =
     0.01, $CellContext`\[Theta]1$$ = Rational[1, 2] 
    Pi, $CellContext`\[Theta]2$$ = Rational[1, 3] Pi, $CellContext`\[Phi]1$$ =
     0, $CellContext`\[Phi]2$$ = Rational[1, 2] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]1$$], Rational[1, 2] Pi}, 0.01, 
      3.1315926535897933`}, {{
       Hold[$CellContext`\[Phi]1$$], 0}, 0, 2 Pi}, {{
       Hold[$CellContext`\[Theta]2$$], Rational[1, 3] Pi}, 0.01, 
      3.1315926535897933`}, {{
       Hold[$CellContext`\[Phi]2$$], Rational[1, 2] Pi}, 0, 2 Pi}, {{
       Hold[$CellContext`y\[Theta]$$], 0.01}, 0.01, 3.1315926535897933`}, {{
       Hold[$CellContext`z\[Phi]$$], 0.01}, 0, 2 Pi}}, Typeset`size$$ = {
    533., {178., 199.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`y\[Theta]$$ = 0.01, $CellContext`z\[Phi]$$ = 
        0.01, $CellContext`\[Theta]1$$ = 
        Rational[1, 2] Pi, $CellContext`\[Theta]2$$ = 
        Rational[1, 3] Pi, $CellContext`\[Phi]1$$ = 0, $CellContext`\[Phi]2$$ = 
        Rational[1, 2] Pi}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`S1 = \
$CellContext`ToCartesian[$CellContext`\[Theta]1$$, $CellContext`\[Phi]1$$], \
$CellContext`S2 = $CellContext`ToCartesian[$CellContext`\[Theta]2$$, \
$CellContext`\[Phi]2$$], $CellContext`S12 = Dot[
           Transpose[
            $CellContext`Rztos1[$CellContext`y\[Theta]$$, \
$CellContext`z\[Phi]$$]], 
           $CellContext`ToCartesian[$CellContext`\[Theta]1$$, $CellContext`\
\[Phi]1$$]]}, 
        $CellContext`makePlotAll[$CellContext`S1, $CellContext`S2, \
$CellContext`S12, "Rotate S12 vector"]], 
      "Specifications" :> {{{$CellContext`\[Theta]1$$, Rational[1, 2] Pi}, 
         0.01, 3.1315926535897933`}, {{$CellContext`\[Phi]1$$, 0}, 0, 2 
         Pi}, {{$CellContext`\[Theta]2$$, Rational[1, 3] Pi}, 0.01, 
         3.1315926535897933`}, {{$CellContext`\[Phi]2$$, Rational[1, 2] Pi}, 
         0, 2 Pi}, {{$CellContext`y\[Theta]$$, 0.01}, 0.01, 
         3.1315926535897933`}, {{$CellContext`z\[Phi]$$, 0.01}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{578., {301., 307.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.836604095887412*^9, 3.836604111812825*^9}, {
  3.836604144521372*^9, 3.836604162865587*^9}},
 CellLabel->
  "Out[148]=",ExpressionUUID->"8d13f3db-adb1-41e6-bc45-7a4496a0ef0d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.836524931138583*^9, 3.836524933471826*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"c65a1abf-c94b-4125-9fa0-b4a82d68dca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New approach", "Title",
 CellChangeTimes->{{3.836595408776381*^9, 
  3.836595410430657*^9}},ExpressionUUID->"b5380574-5eef-4c97-99fb-\
b3a7a73e11d7"],

Cell[TextData[{
 "1. You know: ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s1", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a2bb12a5-0f3d-410e-bbb0-380268759e9a"],
 ",the magnitude |s2|, \[Theta]12\n2. You have one obvious constraint \
equation: ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s1", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ea962d7e-4391-4378-8539-1ae2f6eebbdb"],
 ".",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s2", "\[RightVector]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c363cc6f-7caa-44a4-8a40-44eeb21fa4a8"],
 " =|s1| |s2|cos(\[Theta]12)\n3. Define some random ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "^"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "43975a24-2144-4b0f-9955-07733797db30"],
 ",drawn from an isotropic distribution. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "^"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "68d4fe41-5989-4ef6-a96e-d26cca2a786a"],
 "=",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s1", "^"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a4d68b24-555c-41aa-a249-37fafdc7d424"],
 "x",
 Cell[BoxData[
  FormBox[
   OverscriptBox["r", "^"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "54149e28-4439-4ea4-81fe-d8da1d928b0a"],
 " orthogonal to ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s1", "^"], TraditionalForm]],ExpressionUUID->
  "92fa77d9-6d20-4fe0-88ff-f61cfaeaeb7e"],
 "\n4. Final constraint equation: ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s2", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "859a6e2f-f83e-4d35-942a-2bb43caf0f2b"],
 " . ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "^"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b3ae48a8-99f5-4994-ad91-576cc09ef4aa"],
 " = |s2|  cos(1-\[Theta]12)\n\nThis is equivalent to assuming that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s2", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "df387ed7-521e-40a6-ad45-0d4451da4cdf"],
 " lies in a plane with ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["s1", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "d45bb006-c7a5-439e-b7e1-def1d0ed5512"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "^"], TraditionalForm]],ExpressionUUID->
  "b1457aed-ff75-4790-87d9-bc7cd504a484"]
}], "Text",
 CellChangeTimes->{{3.836595650618874*^9, 3.8365956509085617`*^9}, {
   3.8365957278134813`*^9, 3.836595971249154*^9}, 3.8365981517332973`*^9, {
   3.836598451184559*^9, 
   3.836598451455481*^9}},ExpressionUUID->"3a076e6d-f9e8-4bd9-bb7c-\
0d9a5f2838c8"],

Cell["\<\
s1x s2x + s1y s2y + s1z s2z = |s1| |s2| cos( \[Theta]12)
s2x p1x + s2y p2y + s2z p2z = |s2| cos(1- \[Theta]12)
Sqrt(s2x^2 + s2y^2 + s2z^2) = |s2|\
\>", "Text",
 CellChangeTimes->{{3.836602128713296*^9, 3.8366021833704443`*^9}, {
  3.836604501633871*^9, 
  3.836604553145298*^9}},ExpressionUUID->"300306a9-b98f-42c8-bf89-\
056676a49eaf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Num", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Cos\[Theta]1", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "Num"}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"\[Theta]1", " ", "=", " ", 
    RowBox[{"ArcCos", "[", "Cos\[Theta]1", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"\[Phi]1", " ", "=", "  ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}], ",", "Num"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"a1", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"S1", " ", "=", " ", 
    RowBox[{"a1", " ", "*", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"ToCartesian", "[", 
       RowBox[{"\[Theta]1", ",", "\[Phi]1"}], "]"}], "]"}]}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"a2", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Cos\[Theta]12", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", " ", 
     RowBox[{
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", "Num"}], "]"}]}], 
   ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"rhat", " ", "=", " ", 
    RowBox[{"RandomPoint", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
      " ", "Num"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"phat", " ", "=", " ", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Cross", ",", " ", 
      RowBox[{"{", 
       RowBox[{"S1", ",", " ", "rhat"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"PlotVectors", "[", 
    RowBox[{"S1", ",", " ", "rhat", ",", " ", "phat"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.83659782602219*^9, 3.8365979192891827`*^9}, {
   3.83659809449678*^9, 3.83659813099166*^9}, {3.8365981837035217`*^9, 
   3.836598195970386*^9}, {3.836598251972118*^9, 3.836598281521036*^9}, {
   3.836598347205332*^9, 3.836598466930529*^9}, {3.8365985127532*^9, 
   3.836598616388619*^9}, {3.8365986798407183`*^9, 3.836598717373929*^9}, {
   3.8365991760351343`*^9, 3.836599212407578*^9}, 3.836599718491273*^9, {
   3.836600333159031*^9, 3.836600401791617*^9}, 3.836600959463241*^9, {
   3.8366014583880672`*^9, 3.836601475135159*^9}, {3.836601514730248*^9, 
   3.836601520050609*^9}, {3.836602096344236*^9, 3.836602111489904*^9}, {
   3.83660412609192*^9, 3.8366041312986403`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"dcceece8-3ac3-4914-8cad-44e01ec4abae"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8366009609173527`*^9, 3.8366009609329853`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"baedad29-2743-4c5e-8afc-f25c45ff23f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotVectors", "[", 
    RowBox[{"S1_", ",", "rhat_", ",", "phat_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], ",", 
           RowBox[{"Sin", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sin", "[", "t", "]"}], ",", 
           RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], ",", "0", ",", 
           RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Opacity", "[", "0.05", "]"}]}], "]"}]}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
       ",", " ", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Pi]", ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", "2"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "0.05", "]"}], ",", 
          RowBox[{"Sphere", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
             "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", "p"}], 
              "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "S1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", "p"}], 
              "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "rhat"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", "p"}], 
              "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "phat"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Opacity", "[", "1.0", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Z\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1.1"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<X\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"1.1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Y\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.1", ",", "0"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "Red", ",", " ", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<S1\>\"", ",", 
            RowBox[{"S1", " ", "*", "1.1"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "Orange", ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<r\>\"", ",", 
            RowBox[{"rhat", "*", "1.1"}]}], "]"}], ",", "\[IndentingNewLine]",
           "Purple", ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<p\>\"", ",", 
            RowBox[{"phat", "*", "1.1"}]}], "]"}], ","}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8365993257645483`*^9, 3.836599334284381*^9}, {
   3.8366004405260763`*^9, 3.836600637395274*^9}, {3.8366006908158693`*^9, 
   3.836600921492166*^9}, 3.836601456789844*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2d87d3a6-cd4b-49ef-969c-6d537b078120"]
}, Open  ]]
},
WindowSize->{1317, 804},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"05d31dc8-d7db-41d4-a174-659ed42b8bbf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 98, "Title",ExpressionUUID->"b29d26b4-90c3-492e-bb0f-1dfc7a39c3e8"],
Cell[CellGroupData[{
Cell[774, 29, 116, 0, 54, "Subsection",ExpressionUUID->"91839671-7b6f-4e24-8964-66b921b868e3"],
Cell[893, 31, 2833, 78, 136, "Input",ExpressionUUID->"c38a8222-94b5-4ffb-a004-e93657f05f71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3763, 114, 116, 0, 54, "Subsection",ExpressionUUID->"647fa9a0-4994-4266-9b93-9d5e6356a184"],
Cell[3882, 116, 3589, 101, 262, "Input",ExpressionUUID->"2557a8d9-d012-477c-ac44-0be9bd19a5ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7508, 222, 83, 0, 54, "Subsection",ExpressionUUID->"2e1e6884-fea6-4c69-96a2-1ffe7aacd2b5"],
Cell[7594, 224, 149, 2, 35, "Text",ExpressionUUID->"0fba282f-0f37-4f3b-a9ad-becff6353988"],
Cell[CellGroupData[{
Cell[7768, 230, 400, 10, 30, "Input",ExpressionUUID->"33ff1c24-b3ac-46ec-bdd7-39a321d6c64f"],
Cell[8171, 242, 729, 21, 76, "Output",ExpressionUUID->"46e411f8-db55-4692-972e-7a2c487c4b23"]
}, Open  ]],
Cell[8915, 266, 166, 3, 35, "Text",ExpressionUUID->"bd1d20ab-11fc-4e02-8b8f-1a8282489fbe"],
Cell[CellGroupData[{
Cell[9106, 273, 360, 10, 30, "Input",ExpressionUUID->"78be5ad9-6283-48fa-b146-053b164a0d86"],
Cell[9469, 285, 1015, 30, 80, "Output",ExpressionUUID->"a8ea611e-c0f8-4713-b59b-2d03bc36f737"]
}, Open  ]],
Cell[10499, 318, 148, 3, 35, "Text",ExpressionUUID->"239180ae-b0ef-4634-a21b-4706153b8560"],
Cell[CellGroupData[{
Cell[10672, 325, 472, 13, 30, "Input",ExpressionUUID->"44cb1af9-4674-4162-aae5-f0567a335399"],
Cell[11147, 340, 555, 15, 45, "Output",ExpressionUUID->"0146430d-a5e8-4ab7-ac22-f635bc3c03ee"]
}, Open  ]],
Cell[11717, 358, 137, 1, 35, "Text",ExpressionUUID->"9dec86e6-586a-412c-a534-7a42a6eb7f6f"],
Cell[CellGroupData[{
Cell[11879, 363, 3990, 88, 346, "Input",ExpressionUUID->"17cbc6d8-978b-4a08-b441-58a4a3086d4d"],
Cell[15872, 453, 1280, 26, 55, "Output",ExpressionUUID->"4bbb8e63-fed0-40f8-8a03-ed2d452a1210"],
Cell[17155, 481, 1629, 36, 55, "Output",ExpressionUUID->"71dc166c-4c71-4645-9733-dc1d76d21eca"]
}, Open  ]],
Cell[18799, 520, 202, 4, 30, "Input",ExpressionUUID->"5ed9598e-06ac-464d-956a-ecd64845db55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19038, 529, 152, 3, 67, "Section",ExpressionUUID->"0a6c7d69-0ff7-4a0e-b32c-97a66c5f51e2"],
Cell[CellGroupData[{
Cell[19215, 536, 185, 3, 45, "Subsubsection",ExpressionUUID->"37912096-6979-47e5-8efb-29d99e1e7ea9"],
Cell[CellGroupData[{
Cell[19425, 543, 977, 24, 52, "Input",ExpressionUUID->"d7fab097-b360-4147-8a8a-8654fe290fba"],
Cell[20405, 569, 60141, 1121, 396, "Output",ExpressionUUID->"bc4e2387-e3a5-462b-a1a3-677d92b2d95b"],
Cell[80549, 1692, 60042, 1120, 396, "Output",ExpressionUUID->"a8f10c71-e8a6-45ff-abc9-4340b7ec0b99"]
}, Open  ]],
Cell[140606, 2815, 184, 3, 35, "Text",ExpressionUUID->"3e8c353c-b0b2-40d3-952a-96a1e4fb5b8c"],
Cell[CellGroupData[{
Cell[140815, 2822, 1483, 36, 94, "Input",ExpressionUUID->"85110ebd-875a-46f3-888a-c828d88c7789"],
Cell[142301, 2860, 58008, 1085, 396, "Output",ExpressionUUID->"403dc15a-0a61-4306-a385-7da156bc9a35"],
Cell[200312, 3947, 56856, 1039, 396, "Output",ExpressionUUID->"ab29b128-04ab-4fea-9371-41aa40d01b0e"],
Cell[257171, 4988, 53554, 990, 396, "Output",ExpressionUUID->"ea75e6bc-09d9-4ff9-8b49-ad7f76c1c81b"],
Cell[310728, 5980, 56652, 1054, 396, "Output",ExpressionUUID->"213f88fb-f402-4e0c-94a9-0a40a07643a3"]
}, Open  ]],
Cell[367395, 7037, 209, 3, 35, "Text",ExpressionUUID->"59d7f155-5cdc-465f-b904-67d7d1117ac5"],
Cell[CellGroupData[{
Cell[367629, 7044, 2319, 51, 136, "Input",ExpressionUUID->"1b287da8-2405-44a1-8989-ba1a12d1d1d7"],
Cell[369951, 7097, 58319, 1090, 396, "Output",ExpressionUUID->"6ae4fd58-f5c9-499b-8c36-a3523d09c70d"],
Cell[428273, 8189, 53846, 996, 396, "Output",ExpressionUUID->"9d7d151f-1e1c-4d3d-874b-5c09989e0bf1"],
Cell[482122, 9187, 56174, 1038, 396, "Output",ExpressionUUID->"6ab3055a-9306-41b3-908e-ccdd94e070a1"],
Cell[538299, 10227, 52234, 972, 396, "Output",ExpressionUUID->"9974aa6d-0d6f-498c-a9b3-9d8ea66037c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590570, 11204, 3069, 77, 199, "Input",ExpressionUUID->"7a7e40ce-af64-4ec4-96df-43f08ddf7fb7"],
Cell[593642, 11283, 57908, 1084, 396, "Output",ExpressionUUID->"65e1fe35-28f7-40b1-8fdd-fa878aaafa33"],
Cell[651553, 12369, 53436, 990, 396, "Output",ExpressionUUID->"101cbd59-db11-4aaf-8ece-409ef012f020"],
Cell[704992, 13361, 48111, 902, 396, "Output",ExpressionUUID->"ceb3260e-598a-4024-8acf-28b11f6e4e6a"],
Cell[753106, 14265, 50762, 947, 396, "Output",ExpressionUUID->"0af7ee51-872f-4f6c-ab4d-8c92023d161f"],
Cell[803871, 15214, 52749, 979, 396, "Output",ExpressionUUID->"66e0765b-6548-4dfe-aa78-ecbe557b3f21"],
Cell[856623, 16195, 52339, 972, 396, "Output",ExpressionUUID->"ac363472-69c1-41ee-97c6-9a5bb5d41150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908999, 17172, 913, 23, 73, "Input",ExpressionUUID->"79a7493b-afc2-4572-9345-c5a7b2091d61"],
Cell[909915, 17197, 58008, 1085, 396, "Output",ExpressionUUID->"887b6271-deb6-4576-ac01-fa18e7357763"],
Cell[967926, 18284, 63343, 1170, 396, "Output",ExpressionUUID->"c7cfdae4-378b-44ec-974f-3c41d63ecac4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031306, 19459, 920, 24, 94, "Input",ExpressionUUID->"436fc9e9-2f58-4df2-9d2c-70398d4cf181"],
Cell[1032229, 19485, 57785, 1080, 396, "Output",ExpressionUUID->"6428dff9-b659-497e-a708-a5afaf07ec9b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090075, 20572, 172, 3, 67, "Section",ExpressionUUID->"85b9554a-af03-4f73-b948-c20f873856e5"],
Cell[CellGroupData[{
Cell[1090272, 20579, 33161, 717, 2089, "Input",ExpressionUUID->"e872ceb4-9ec5-4ee2-a42f-47240db74582"],
Cell[1123436, 21298, 324, 5, 34, "Output",ExpressionUUID->"7bbc9ba6-fa1b-4317-b9cc-a6ca011e322e"],
Cell[1123763, 21305, 64936, 1210, 396, "Output",ExpressionUUID->"3cfd8768-bafc-4310-a3d5-8154f9639c14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188736, 22520, 27021, 621, 1879, "Input",ExpressionUUID->"a9b6a33c-0700-4758-aeb6-3ba44d4f6872"],
Cell[1215760, 23143, 52715, 989, 396, "Output",ExpressionUUID->"3dcf3801-2359-43cb-aeb5-9824ff936d1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1268512, 24137, 32873, 759, 2194, "Input",ExpressionUUID->"25968e85-611b-4f7d-85fd-21f23cfa5259"],
Cell[1301388, 24898, 86079, 1601, 396, "Output",ExpressionUUID->"2d504bfc-9fa1-4a6e-a66d-6da4c1352483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1387504, 26504, 216, 4, 45, "Subsubsection",ExpressionUUID->"5844345c-0578-4869-8deb-58083d305022"],
Cell[CellGroupData[{
Cell[1387745, 26512, 2042, 51, 136, "Input",ExpressionUUID->"dd1f5c4c-6644-412c-a187-d2ed50dbd09a"],
Cell[1389790, 26565, 2814, 54, 571, "Output",ExpressionUUID->"44add765-4ffc-4df0-af16-84daadb43ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392641, 26624, 1799, 48, 136, "Input",ExpressionUUID->"4753c06c-497f-4e9d-ac79-91f447552712"],
Cell[1394443, 26674, 2819, 55, 571, "Output",ExpressionUUID->"09fa2068-db2d-400e-95c2-2ce6c17cef1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397299, 26734, 2369, 65, 178, "Input",ExpressionUUID->"5478a1d4-8648-4721-9f41-8916413eb011"],
Cell[1399671, 26801, 3393, 64, 627, "Output",ExpressionUUID->"8d13f3db-adb1-41e6-bc45-7a4496a0ef0d"]
}, Open  ]],
Cell[1403079, 26868, 175, 3, 30, "Input",ExpressionUUID->"c65a1abf-c94b-4125-9fa0-b4a82d68dca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1403315, 26878, 155, 3, 98, "Title",ExpressionUUID->"b5380574-5eef-4c97-99fb-b3a7a73e11d7"],
Cell[1403473, 26883, 2724, 80, 160, "Text",ExpressionUUID->"3a076e6d-f9e8-4bd9-bb7c-0d9a5f2838c8"],
Cell[1406200, 26965, 346, 8, 81, "Text",ExpressionUUID->"300306a9-b98f-42c8-bf89-056676a49eaf"],
Cell[1406549, 26975, 2878, 66, 283, "Input",ExpressionUUID->"dcceece8-3ac3-4914-8cad-44e01ec4abae"],
Cell[1409430, 27043, 179, 3, 30, InheritFromParent,ExpressionUUID->"baedad29-2743-4c5e-8afc-f25c45ff23f4"],
Cell[1409612, 27048, 5800, 148, 556, "Input",ExpressionUUID->"2d87d3a6-cd4b-49ef-969c-6d537b078120"]
}, Open  ]]
}
]
*)

